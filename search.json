[{"path":"https://alexander-pastukhov.github.io/saccadr/articles/methods.html","id":"engbertkliegl2003","dir":"Articles","previous_headings":"","what":"Engbert and Kliegl (2003)","title":"Implemented Methods","text":"algorithm labels sample saccade velocity, measured units standard deviation (see ), exceeds predefined threshold (defaults \\(6\\)) duration super-threshold period exceeds minimal duration (defaults \\(12\\) milliseconds). method makes assumptions velocity units degrees per second can used data (e.g., samples encode gaze screen position units). standard deviation computed following formula #2 Engbert Kliegl (2003) However, value smaller .Machine$double.eps, recomputed via mean estimator monocular version algorithm implemented binocular saccades computed using overlapping votes two eyes. method details rationale default parameter values refer Engbert Kliegl (2003). Parameters: ek_velocity_threshold Velocity threshold saccade detection standard deviations. Defaults \\(6\\). ek_sd_fun Function used compute standard deviation velocities. Defaults sd_via_median_estimator() implements formula #2 Engbert Kliegl (2003). Can replaced sd(), mad(), custom function. ek_minimal_duration_ms Minimal duration saccade milliseconds. Defaults \\(12\\). ek_minimal_separation_ms minimal required time gap saccades. Defaults \\(12\\).","code":"sqrt(median(x^2) - median(x)^2) sqrt(mean(x^2) - mean(x)^2)"},{"path":"https://alexander-pastukhov.github.io/saccadr/articles/methods.html","id":"otero-millan2014","dir":"Articles","previous_headings":"","what":"Otero-Millan et al. (2014)","title":"Implemented Methods","text":"algorithm: Detect local velocity peaks. Filter based minimal inter-peak interval (defaults \\(30\\) ms) maximal allowed saccade rate (defaults \\(5\\) Hz). Identify onset offset potential saccade using absolute velocity threshold degrees per second (defaults \\(3\\)). Compute peak velocity peak acceleration peak velocity reached. Rotate velocity peak acceleration via PCA retain components predefined threshold explained variance (defaults \\(0.05\\)). Perform cluster analysis remaining components \\(2\\), \\(3\\), \\(4\\) picking solution smallest silhouette. Saccades identified cluster highest average peak velocity. method details rationale default parameter values refer Otero-Millan et al. (2014). Parameters: om_minimal_inter_peak_time_ms Minimal inter-peak interval milliseconds. Defaults \\(30\\) om_maximal_peaks_per_second Maximal allowed number peaks per second. Defaults \\(5\\). om_velocity_threshold_deg_per_sec Threshold saccade velocity °/s. Defaults \\(3\\). om_pca_variance_threshold Minimal variance explained retained rotated components. Defaults \\(0.05\\).","code":""},{"path":"https://alexander-pastukhov.github.io/saccadr/articles/methods.html","id":"nystromholmqvist2010","dir":"Articles","previous_headings":"","what":"Nyström and Holmqvist (2010)","title":"Implemented Methods","text":"algorithm: Identify physiologically implausible velocity acceleration peaks (defaults \\(1000 \\deg/s\\) \\(100000 \\deg/s^2\\)). Identify noise onset/offset samples around implausible velocity/acceleration median velocity. Exclude samples analysis. Identify velocity threshold \\(PT = mean(V_{subthreshold}) + 6 \\cdot std(V_{subthreshold})\\) via iterative method starting arbitrary \\(PT\\) value (defaults \\(100 \\deg/s\\)). Stop threshold change \\(1 \\deg/s\\). Identify saccades periods peaks peaks threshold \\(PT\\) adjacent samples \\(PT_{onset/offset} = mean(V_{subthreshold}) + 3 \\cdot std(V_{subthreshold})\\). method details rationale default parameter values refer Nyström Holmqvist (2010). Parameters: nh_max_velocity Maximal physiologically plausible velocity °/s. Defaults 1000. nh_max_acceleration Maximal physiologically plausible acceleration °/s². Defaults 100000. nh_initial_velocity_threshold Initial velocity threshold °/s. Defaults 100.","code":""},{"path":[]},{"path":"https://alexander-pastukhov.github.io/saccadr/articles/using_custom_methods.html","id":"example-implementation","dir":"Articles","previous_headings":"","what":"Example implementation","title":"Using Custom Methods","text":"example implementation overly simple custom method labels sample saccade velocity exceeds predefined threshold. expects threshold parameter \"st_velocity_threshold\" member list uses default threshold \\(50 \\deg / s\\) (arbitrary number!) threshold provided. implemented method, can pass alongside internally implemented methods:","code":"simple_threshold_method <- function(x,                                     y,                                     vel,                                     acc,                                     sample_rate,                                     trial,                                     options) {    # obtain method parameters or use defaults   velocity_threshold <- saccadr::option_or_default(options, \"st_velocity_threshold\", 50)    # vote on each sample     sample_vote <- vel[['amp']] > velocity_threshold      # return votes   sample_vote } data(\"single_trial\") saccades <- saccadr::extract_saccades(x = single_trial$x,                                       y = single_trial$y,                                       sample_rate = 500,                                       methods = list(\"ek\", \"om\", \"nh\", simple_threshold_method),                                       options = list(\"st_velocity_threshold\" = 70))"},{"path":"https://alexander-pastukhov.github.io/saccadr/articles/velocity_computation.html","id":"differentiation-following-engbertkliegl2003","dir":"Articles","previous_headings":"","what":"Differentiation following Engbert and Kliegl (2003)","title":"Velocity computation","text":"method computes velocity predefined time window controlled via ek_velocity_time_window defaults 20 ms. width window converted samples based sampling_rate parameter ensured odd number equal larger 3. .e., window three samples long, velocity computed based one sample one sample current, five-samples window - two samples , etc. code always starts requested window size iteratively reduces two samples accommodate trial limits missing values. NA velocity returned even smallest window (three samples wide) used. general, horizontal vertical velocity components computed \\[v_x[] = \\frac{\\sum_{j=1}^{(N-1)/2}x[+j] - x[-j]}{\\sum_{j=1}^{(N-1)/2}2j\\cdot\\Delta t}\\] \\(\\) index sample, \\(\\Delta t = \\frac{1}{sample~rate}\\) duration single sampling frame, \\(N\\) odd integer width moving average used compute velocity. Engbert Kliegl (2003), \\(N=5\\) \\(\\Delta t = 4\\) (250 Hz sampling rate) translate 20 ms moving average window (default value used method implementation). derivation shows equivalence formula formula 1 Engbert Kliegl (2003). \\(N=5\\): \\[\\frac{\\sum_{j=1}^{(5-1)/2}x[+j] - x[-j]}{\\sum_{j=1}^{(5-1)/2}2j\\cdot\\Delta t}=\\] \\[\\frac{\\sum_{j=1}^{2}x[+j] - x[-j]}{\\sum_{j=1}^{2}2j\\cdot\\Delta t}=\\] \\[\\frac{x[+1] - x[-1]+x[+2] - x[-2]}{2\\Delta t + 4\\Delta t}=\\] \\[\\frac{x[+2] + x[+1] - x[-1] - x[-2]}{6\\Delta t}\\]","code":""},{"path":"https://alexander-pastukhov.github.io/saccadr/articles/velocity_computation.html","id":"differentiation-following-nystromholmqvist2010","dir":"Articles","previous_headings":"","what":"Differentiation following Nyström and Holmqvist (2010)","title":"Velocity computation","text":"Horizontal vertical components velocity computed adjacent samples, amplitude computed components filtered using Savitzky-Golay filter. Filter order controlled via nh_sg_filter_order option defaults 2.","code":""},{"path":"https://alexander-pastukhov.github.io/saccadr/articles/velocity_computation.html","id":"comparing-two-methods","dir":"Articles","previous_headings":"","what":"Comparing two methods","title":"Velocity computation","text":"two methods produce comparable different velocity values. However, minor effect saccade detection, see vignette Using sample votes.","code":"# computing velocity using two methods vel_ek <- saccadr::diff_ek(x = single_trial$x,                            y = single_trial$y,                            trial = rep(1, nrow(single_trial)),                            sample_rate = 500) vel_nh <- saccadr::diff_nh(x = single_trial$x,                            y = single_trial$y,                            trial = rep(1, nrow(single_trial)),                            sample_rate = 500) vel_comparison <- na.omit(data.frame(EK = vel_ek[['amp']], NH = vel_nh[['amp']])) %>%   dplyr::filter(NH > 0) %>% # values can be negative due to filtering   dplyr::mutate(logEK = log(EK), logNH = log(NH))   # plotting amplitude comparison pearson_rho <- cor(vel_comparison[['EK']], vel_comparison[['NH']])  ggplot(data = vel_comparison, aes(x = EK, y = NH)) +   geom_abline() +   geom_point() +   scale_x_log10() +   scale_y_log10() +   labs(subtitle = sprintf(\"Pearson's ρ = %.2f\\nPearson's ρ for log transformed velocities = %.2f\", pearson_rho, cor(vel_comparison[['logEK']], vel_comparison[['logNH']])),        x = \"Vek\",        y = \"Vnh\") # plotting  ggplot(data = NULL, aes(x = vel_comparison[['EK']] - vel_comparison[['NH']])) +   geom_histogram(bins = 50) +   xlab(\"Vek - Vnh\") +   labs(title = \"Difference in velocities computed via two methods\")"},{"path":"https://alexander-pastukhov.github.io/saccadr/articles/velocity_computation.html","id":"implementing-and-using-a-custom-differentiation-function","dir":"Articles","previous_headings":"","what":"Implementing and using a custom differentiation function","title":"Velocity computation","text":"custom function follows Arguments passed function (vectors length): x, y vectors values, either x y gaze coordinates velocity components (acceleration). sample_rate scalar value Hz. trial vector trial index per sample. options named list method-specific options. See example use . See also option_or_default() function. function must return data.frame three columns: x (horizontal component), y (vertical component), amp (amplitude). example simple velocity function respects trial borders similar function uses optional custom_velocity_lag parameter can different 1","code":"diff_custom <- function(x, y,  trial, sample_rate, options=NULL) {   # compute vertical and horizontal components   df <- data.frame(x = ..., # differentiate values of x                     y = ...) # differentiate values of y      # compute amplitude   df[['amp']] = sqrt(df[['x']]^2 + df[['y']]^2))    # return a data.frame with columns x, y, and amp   return(df) } library(dplyr)  diff_custom <- function(x, y,  trial, sample_rate, options=NULL) {   # computing frame time step    delta_t_s <- 1 / sample_rate      # --- differentiate (compute velocity or acceleration) and filter   data.frame(trial = trial,              x = x,              y = y) %>%      # compute velocity and acceleration for each trial     group_by(trial) %>%     mutate(x = (x - lag(x)) / delta_t_s,            y = (y - lag(y)) / delta_t_s,            amp = sqrt(x^2 + y^2)) } diff_lag_n <- function(x, y,  trial, sample_rate, options=NULL) {   # obtain lag or use default   lag_n <- saccadr::option_or_default(options, \"custom_velocity_lag\", 1)      # computing frame time step    delta_t_s <- 1 / sample_rate      # --- differentiate (compute velocity or acceleration) and filter   data.frame(trial = trial,              x = x,              y = y) %>%      # compute velocity and acceleration for each trial     group_by(trial) %>%     mutate(x = (x - lag(x, lag_n)) / delta_t_s,            y = (y - lag(y, lag_n)) / delta_t_s,            amp = sqrt(x^2 + y^2)) }"},{"path":[]},{"path":"https://alexander-pastukhov.github.io/saccadr/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Alexander Pastukhov. Author, maintainer.","code":""},{"path":"https://alexander-pastukhov.github.io/saccadr/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Pastukhov (2022). saccadr: Extract Saccades via Ensemble Methods Approach. https://github.com/alexander-pastukhov/saccadr/, https://alexander-pastukhov.github.io/saccadr/.","code":"@Manual{,   title = {saccadr: Extract Saccades via an Ensemble of Methods Approach},   author = {Alexander Pastukhov},   year = {2022},   note = {https://github.com/alexander-pastukhov/saccadr/, https://alexander-pastukhov.github.io/saccadr/}, }"},{"path":"https://alexander-pastukhov.github.io/saccadr/index.html","id":"saccadr","dir":"","previous_headings":"","what":"Extract Saccades via an Ensemble of Methods Approach","title":"Extract Saccades via an Ensemble of Methods Approach","text":"saccadr modular extendable R package extract (micro)saccades gaze samples via ensemble methods approach. Although agreement general definition saccade, specific details harder agree upon. Therefore, numerous algorithms extract saccades based various heuristics, differ assumptions velocity, acceleration, etc. package uses methods label individual samples applies majority vote approach identify saccades. package includes three methods (see Implemented Methods vignette) can extended via custom methods (see Using custom methods vignette). also uses modular approach compute velocity acceleration noisy samples (see Velocity computation vignette). Finally, can obtain methods votes per gaze sample instead saccades (see Using sample votes vignette). extract_saccades() function uses several methods label individual samples belonging saccade, classifies sample potential saccade proportion votes exceeds preset threshold, identifies saccades based minimal saccade duration minimal time saccades. binocular data, 1) samples can averaged velocity computation, 2) votes can merged function returns binocular saccades, 3) saccades extracted eye separately. Currently, library implements saccade detection using following saccade detection methods. using package, please cite package individual methods. method_ek : Engbert, R., & Kliegl, R. (2003). Microsaccades uncover orientation covert attention. Vision Research, 43(9), 1035–1045. https://doi.org/10.1016/S0042-6989(03)00084-1 method_om : Otero-Millan, J., Castro, J. L. ., Macknik, S. L., & Martinez-Conde, S. (2014). Unsupervised clustering method detect microsaccades. Journal Vision, 14(2), 18–18. https://doi.org/10.1167/14.2.18 method_nh : Nyström, M., & Holmqvist, K. (2010). adaptive algorithm fixation, saccade, glissade detection eye tracking data. Behavior Research Methods, 42(1), 188–204. https://doi.org/10.3758/BRM.42.1.188","code":""},{"path":"https://alexander-pastukhov.github.io/saccadr/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Extract Saccades via an Ensemble of Methods Approach","text":"current stable version use install development version github","code":"install.packages(\"saccadr\") library(\"devtools\") install_github(\"alexander-pastukhov/saccadr\", dependencies=TRUE)"},{"path":"https://alexander-pastukhov.github.io/saccadr/index.html","id":"usage","dir":"","previous_headings":"","what":"Usage","title":"Extract Saccades via an Ensemble of Methods Approach","text":"main function extract_saccades(). Minimally, takes x y gaze samples, sampling rate returning table extracted saccades. Note function expects units gaze samples degrees visual angle, methods use physiologically plausible velocity acceleration thresholds.","code":"data(\"single_trial\") saccades <- extract_saccades(single_trial$x, single_trial$y, sample_rate = 500)"},{"path":"https://alexander-pastukhov.github.io/saccadr/index.html","id":"multiple-trials","dir":"","previous_headings":"Usage","what":"Multiple trials","title":"Extract Saccades via an Ensemble of Methods Approach","text":"recording spans multiple trials, need specify via trial parameter. way velocity computation saccade detection methods respect trial boundaries.","code":"data(monocular_ten_trials) saccades <- extract_saccades(monocular_ten_trials$x                              monocular_ten_trials$y,                               500,                              trial = monocular_ten_trials$trial)"},{"path":"https://alexander-pastukhov.github.io/saccadr/index.html","id":"binocular-data","dir":"","previous_headings":"Usage","what":"Binocular data","title":"Extract Saccades via an Ensemble of Methods Approach","text":"three ways binocular data can treated based value binocular parameter: binocular = \"merge\" (default): sample votes obtained eyes methods averaged. way binocular saccades (.e., eye movements sufficient temporal overlap eyes) detected. Eye = \"Binocular\" saccade description. binocular = \"cyclopean\": binocular data converted average cyclopean image voting saccades detection. Eye = \"Cyclopean\" saccade description. binocular = \"monocular\": saccades extracted independently eye. Eye = \"Left\" Eye = \"Right\" saccade description.","code":"data(\"single_trial_binocular\") # binocular saccades only saccades_b <- saccadr::extract_saccades(single_trial_binocular[, c('xL', 'xR')],                                       single_trial_binocular[, c('yL', 'yR')],                                       sample_rate = 1000)  # cyclopean saccades from binocular data saccades_c <- saccadr::extract_saccades(single_trial_binocular[, c('xL', 'xR')],                                       single_trial_binocular[, c('yL', 'yR')],                                       sample_rate = 1000,                                       binocular = \"cyclopean\")  # monocular saccades from binocular data saccades_m <- saccadr::extract_saccades(single_trial_binocular[, c('xL', 'xR')],                                       single_trial_binocular[, c('yL', 'yR')],                                       sample_rate = 1000,                                       binocular = \"monocular\")"},{"path":"https://alexander-pastukhov.github.io/saccadr/index.html","id":"specifying-methods","dir":"","previous_headings":"Usage","what":"Specifying methods","title":"Extract Saccades via an Ensemble of Methods Approach","text":"default, implemented methods used saccade detection , necessary, can use subset even single method. Note can also supply saccade detection function, please see Using custom methods vignette. Parameters individual methods passed via options argument, named list <parameter-name> = <value> pairs. can find information specific parameters default values Implemented Methods vignette. example modifying velocity threshold, measured units standard deviation, Engbert & Kliegl (2003) method. default value 6 can make stricter","code":"# Using a single method saccades <- extract_saccades(single_trial$x, single_trial$y, 500, methods = method_om)  # Using two methods saccades <- extract_saccades(single_trial$x, single_trial$y, 500, methods = list(method_ek, method_om)) saccades <- extract_saccades(single_trial$x, single_trial$y, 500, options = list(\"ek_velocity_threshold\" = 8))"},{"path":"https://alexander-pastukhov.github.io/saccadr/index.html","id":"altering-voting-threshold","dir":"","previous_headings":"Usage","what":"Altering voting threshold","title":"Extract Saccades via an Ensemble of Methods Approach","text":"voting threshold number methods must label sample potential saccade. default, one method must agree sample considered saccade (vote_threshold = length(methods) - 1) 1, single method passed function. can make voting less restrictive via vote_threshold parameter.","code":"# A strict unanimous decision threshold saccades <- extract_saccades(single_trial$x, single_trial$y, 500, vote_threshold = 3)  # A slacker criterion that at least one of the three methods must label sample as a saccade saccades <- extract_saccades(single_trial$x, single_trial$y, 500, vote_threshold = 1)"},{"path":"https://alexander-pastukhov.github.io/saccadr/index.html","id":"specifying-velocity-computation-method","dir":"","previous_headings":"Usage","what":"Specifying velocity computation method","title":"Extract Saccades via an Ensemble of Methods Approach","text":"gaze samples tend noisy, different methods use various approaches computing velocity noisy samples. Methods Engbert & Kliegl (2003) Otero-Millan et al. (2014) used approach based averaging multiple samples compute velocity, whereas Nyström & Holmqvist (2010) compute simple derivative filter . default, package uses former approach (velocity_function = diff_ek) can also use latter (velocity_function = diff_nh) implement custom method (see Velocity computation vignette). Acceleration computed way velocity samples. example using Nyström & Holmqvist (2010) velocity computation","code":"saccades <- extract_saccades(single_trial$x, single_trial$y, 500, velocity_function = diff_nh)"},{"path":"https://alexander-pastukhov.github.io/saccadr/index.html","id":"specifying-saccade-temporal-properties","dir":"","previous_headings":"Usage","what":"Specifying saccade temporal properties","title":"Extract Saccades via an Ensemble of Methods Approach","text":"votes , saccades detection based minimal duration (minimal_duration_ms parameter, defaults 12 ms) minimal time saccades (minimal_separation_ms, defaults 12 ms).","code":"# Only longish saccades are extracted saccades <- extract_saccades(single_trial$x, single_trial$y, 500, minimal_duration_ms = 20)"},{"path":[]},{"path":"https://alexander-pastukhov.github.io/saccadr/index.html","id":"saccade-description-table","dir":"","previous_headings":"Return values","what":"Saccade description table","title":"Extract Saccades via an Ensemble of Methods Approach","text":"extract_saccades() function returns table following columns: Trial Trial index. Eye “Monocular” monocular inputs. “Cyclopean” binocular data averaged applying algorithms. “Binocular” binocular data votes averaged applying algorithms. “Left” “Right” binocular data eyes processed independently. OnsetSample Index first sample. OffsetSample Index last sample. Onset Onset time relative trial start milliseconds. Offset Offset time relative trial start milliseconds. Duration Duration milliseconds. DisplacementX Horizontal displacement measured first last sample. DisplacementY Vertical displacement measured first last sample. Displacement Displacement magnitude measured first last sample. DisplacementPhi Displacement direction measured first last sample. AmplitudeX Horizontal displacement measured leftmost rightmost sample. AmplitudeY Vertical displacement measured lowest uppermost sample. Amplitude Displacement magnitude measured extreme samples. AmplitudePhi Displacement direction measured extreme samples. VelocityPeak Peak velocity. VelocityAvg Average velocity. AccelerationPeak Peak acceleration. AccelerationAvg Average acceleration. AccelerationStart Peak acceleration peak velocity reached. AccelerationStop Peak acceleration peak velocity reached.","code":""},{"path":"https://alexander-pastukhov.github.io/saccadr/index.html","id":"sample-votes","dir":"","previous_headings":"Return values","what":"Sample votes","title":"Extract Saccades via an Ensemble of Methods Approach","text":"Alternatively, use parameter return_votes = TRUE function can return votes per sample method (eye, binocular data). Please see Using sample votes vignette details.","code":""},{"path":"https://alexander-pastukhov.github.io/saccadr/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"GNU General Public License","title":"GNU General Public License","text":"Version 3, 29 June 2007Copyright © 2007 Free Software Foundation, Inc. <http://fsf.org/> Everyone permitted copy distribute verbatim copies license document, changing allowed.","code":""},{"path":"https://alexander-pastukhov.github.io/saccadr/LICENSE.html","id":"preamble","dir":"","previous_headings":"","what":"Preamble","title":"GNU General Public License","text":"GNU General Public License free, copyleft license software kinds works. licenses software practical works designed take away freedom share change works. contrast, GNU General Public License intended guarantee freedom share change versions program–make sure remains free software users. , Free Software Foundation, use GNU General Public License software; applies also work released way authors. can apply programs, . speak free software, referring freedom, price. General Public Licenses designed make sure freedom distribute copies free software (charge wish), receive source code can get want , can change software use pieces new free programs, know can things. protect rights, need prevent others denying rights asking surrender rights. Therefore, certain responsibilities distribute copies software, modify : responsibilities respect freedom others. example, distribute copies program, whether gratis fee, must pass recipients freedoms received. must make sure , , receive can get source code. must show terms know rights. Developers use GNU GPL protect rights two steps: (1) assert copyright software, (2) offer License giving legal permission copy, distribute /modify . developers’ authors’ protection, GPL clearly explains warranty free software. users’ authors’ sake, GPL requires modified versions marked changed, problems attributed erroneously authors previous versions. devices designed deny users access install run modified versions software inside , although manufacturer can . fundamentally incompatible aim protecting users’ freedom change software. systematic pattern abuse occurs area products individuals use, precisely unacceptable. Therefore, designed version GPL prohibit practice products. problems arise substantially domains, stand ready extend provision domains future versions GPL, needed protect freedom users. Finally, every program threatened constantly software patents. States allow patents restrict development use software general-purpose computers, , wish avoid special danger patents applied free program make effectively proprietary. prevent , GPL assures patents used render program non-free. precise terms conditions copying, distribution modification follow.","code":""},{"path":[]},{"path":"https://alexander-pastukhov.github.io/saccadr/LICENSE.html","id":"id_0-definitions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"0. Definitions","title":"GNU General Public License","text":"“License” refers version 3 GNU General Public License. “Copyright” also means copyright-like laws apply kinds works, semiconductor masks. “Program” refers copyrightable work licensed License. licensee addressed “”. “Licensees” “recipients” may individuals organizations. “modify” work means copy adapt part work fashion requiring copyright permission, making exact copy. resulting work called “modified version” earlier work work “based ” earlier work. “covered work” means either unmodified Program work based Program. “propagate” work means anything , without permission, make directly secondarily liable infringement applicable copyright law, except executing computer modifying private copy. Propagation includes copying, distribution (without modification), making available public, countries activities well. “convey” work means kind propagation enables parties make receive copies. Mere interaction user computer network, transfer copy, conveying. interactive user interface displays “Appropriate Legal Notices” extent includes convenient prominently visible feature (1) displays appropriate copyright notice, (2) tells user warranty work (except extent warranties provided), licensees may convey work License, view copy License. interface presents list user commands options, menu, prominent item list meets criterion.","code":""},{"path":"https://alexander-pastukhov.github.io/saccadr/LICENSE.html","id":"id_1-source-code","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"1. Source Code","title":"GNU General Public License","text":"“source code” work means preferred form work making modifications . “Object code” means non-source form work. “Standard Interface” means interface either official standard defined recognized standards body, , case interfaces specified particular programming language, one widely used among developers working language. “System Libraries” executable work include anything, work whole, () included normal form packaging Major Component, part Major Component, (b) serves enable use work Major Component, implement Standard Interface implementation available public source code form. “Major Component”, context, means major essential component (kernel, window system, ) specific operating system () executable work runs, compiler used produce work, object code interpreter used run . “Corresponding Source” work object code form means source code needed generate, install, (executable work) run object code modify work, including scripts control activities. However, include work’s System Libraries, general-purpose tools generally available free programs used unmodified performing activities part work. example, Corresponding Source includes interface definition files associated source files work, source code shared libraries dynamically linked subprograms work specifically designed require, intimate data communication control flow subprograms parts work. Corresponding Source need include anything users can regenerate automatically parts Corresponding Source. Corresponding Source work source code form work.","code":""},{"path":"https://alexander-pastukhov.github.io/saccadr/LICENSE.html","id":"id_2-basic-permissions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"2. Basic Permissions","title":"GNU General Public License","text":"rights granted License granted term copyright Program, irrevocable provided stated conditions met. License explicitly affirms unlimited permission run unmodified Program. output running covered work covered License output, given content, constitutes covered work. License acknowledges rights fair use equivalent, provided copyright law. may make, run propagate covered works convey, without conditions long license otherwise remains force. may convey covered works others sole purpose make modifications exclusively , provide facilities running works, provided comply terms License conveying material control copyright. thus making running covered works must exclusively behalf, direction control, terms prohibit making copies copyrighted material outside relationship . Conveying circumstances permitted solely conditions stated . Sublicensing allowed; section 10 makes unnecessary.","code":""},{"path":"https://alexander-pastukhov.github.io/saccadr/LICENSE.html","id":"id_3-protecting-users-legal-rights-from-anti-circumvention-law","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"3. Protecting Users’ Legal Rights From Anti-Circumvention Law","title":"GNU General Public License","text":"covered work shall deemed part effective technological measure applicable law fulfilling obligations article 11 WIPO copyright treaty adopted 20 December 1996, similar laws prohibiting restricting circumvention measures. convey covered work, waive legal power forbid circumvention technological measures extent circumvention effected exercising rights License respect covered work, disclaim intention limit operation modification work means enforcing, work’s users, third parties’ legal rights forbid circumvention technological measures.","code":""},{"path":"https://alexander-pastukhov.github.io/saccadr/LICENSE.html","id":"id_4-conveying-verbatim-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"4. Conveying Verbatim Copies","title":"GNU General Public License","text":"may convey verbatim copies Program’s source code receive , medium, provided conspicuously appropriately publish copy appropriate copyright notice; keep intact notices stating License non-permissive terms added accord section 7 apply code; keep intact notices absence warranty; give recipients copy License along Program. may charge price price copy convey, may offer support warranty protection fee.","code":""},{"path":"https://alexander-pastukhov.github.io/saccadr/LICENSE.html","id":"id_5-conveying-modified-source-versions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"5. Conveying Modified Source Versions","title":"GNU General Public License","text":"may convey work based Program, modifications produce Program, form source code terms section 4, provided also meet conditions: ) work must carry prominent notices stating modified , giving relevant date. b) work must carry prominent notices stating released License conditions added section 7. requirement modifies requirement section 4 “keep intact notices”. c) must license entire work, whole, License anyone comes possession copy. License therefore apply, along applicable section 7 additional terms, whole work, parts, regardless packaged. License gives permission license work way, invalidate permission separately received . d) work interactive user interfaces, must display Appropriate Legal Notices; however, Program interactive interfaces display Appropriate Legal Notices, work need make . compilation covered work separate independent works, nature extensions covered work, combined form larger program, volume storage distribution medium, called “aggregate” compilation resulting copyright used limit access legal rights compilation’s users beyond individual works permit. Inclusion covered work aggregate cause License apply parts aggregate.","code":""},{"path":"https://alexander-pastukhov.github.io/saccadr/LICENSE.html","id":"id_6-conveying-non-source-forms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"6. Conveying Non-Source Forms","title":"GNU General Public License","text":"may convey covered work object code form terms sections 4 5, provided also convey machine-readable Corresponding Source terms License, one ways: ) Convey object code , embodied , physical product (including physical distribution medium), accompanied Corresponding Source fixed durable physical medium customarily used software interchange. b) Convey object code , embodied , physical product (including physical distribution medium), accompanied written offer, valid least three years valid long offer spare parts customer support product model, give anyone possesses object code either (1) copy Corresponding Source software product covered License, durable physical medium customarily used software interchange, price reasonable cost physically performing conveying source, (2) access copy Corresponding Source network server charge. c) Convey individual copies object code copy written offer provide Corresponding Source. alternative allowed occasionally noncommercially, received object code offer, accord subsection 6b. d) Convey object code offering access designated place (gratis charge), offer equivalent access Corresponding Source way place charge. need require recipients copy Corresponding Source along object code. place copy object code network server, Corresponding Source may different server (operated third party) supports equivalent copying facilities, provided maintain clear directions next object code saying find Corresponding Source. Regardless server hosts Corresponding Source, remain obligated ensure available long needed satisfy requirements. e) Convey object code using peer--peer transmission, provided inform peers object code Corresponding Source work offered general public charge subsection 6d. separable portion object code, whose source code excluded Corresponding Source System Library, need included conveying object code work. “User Product” either (1) “consumer product”, means tangible personal property normally used personal, family, household purposes, (2) anything designed sold incorporation dwelling. determining whether product consumer product, doubtful cases shall resolved favor coverage. particular product received particular user, “normally used” refers typical common use class product, regardless status particular user way particular user actually uses, expects expected use, product. product consumer product regardless whether product substantial commercial, industrial non-consumer uses, unless uses represent significant mode use product. “Installation Information” User Product means methods, procedures, authorization keys, information required install execute modified versions covered work User Product modified version Corresponding Source. information must suffice ensure continued functioning modified object code case prevented interfered solely modification made. convey object code work section , , specifically use , User Product, conveying occurs part transaction right possession use User Product transferred recipient perpetuity fixed term (regardless transaction characterized), Corresponding Source conveyed section must accompanied Installation Information. requirement apply neither third party retains ability install modified object code User Product (example, work installed ROM). requirement provide Installation Information include requirement continue provide support service, warranty, updates work modified installed recipient, User Product modified installed. Access network may denied modification materially adversely affects operation network violates rules protocols communication across network. Corresponding Source conveyed, Installation Information provided, accord section must format publicly documented (implementation available public source code form), must require special password key unpacking, reading copying.","code":""},{"path":"https://alexander-pastukhov.github.io/saccadr/LICENSE.html","id":"id_7-additional-terms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"7. Additional Terms","title":"GNU General Public License","text":"“Additional permissions” terms supplement terms License making exceptions one conditions. Additional permissions applicable entire Program shall treated though included License, extent valid applicable law. additional permissions apply part Program, part may used separately permissions, entire Program remains governed License without regard additional permissions. convey copy covered work, may option remove additional permissions copy, part . (Additional permissions may written require removal certain cases modify work.) may place additional permissions material, added covered work, can give appropriate copyright permission. Notwithstanding provision License, material add covered work, may (authorized copyright holders material) supplement terms License terms: ) Disclaiming warranty limiting liability differently terms sections 15 16 License; b) Requiring preservation specified reasonable legal notices author attributions material Appropriate Legal Notices displayed works containing ; c) Prohibiting misrepresentation origin material, requiring modified versions material marked reasonable ways different original version; d) Limiting use publicity purposes names licensors authors material; e) Declining grant rights trademark law use trade names, trademarks, service marks; f) Requiring indemnification licensors authors material anyone conveys material (modified versions ) contractual assumptions liability recipient, liability contractual assumptions directly impose licensors authors. non-permissive additional terms considered “restrictions” within meaning section 10. Program received , part , contains notice stating governed License along term restriction, may remove term. license document contains restriction permits relicensing conveying License, may add covered work material governed terms license document, provided restriction survive relicensing conveying. add terms covered work accord section, must place, relevant source files, statement additional terms apply files, notice indicating find applicable terms. Additional terms, permissive non-permissive, may stated form separately written license, stated exceptions; requirements apply either way.","code":""},{"path":"https://alexander-pastukhov.github.io/saccadr/LICENSE.html","id":"id_8-termination","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"8. Termination","title":"GNU General Public License","text":"may propagate modify covered work except expressly provided License. attempt otherwise propagate modify void, automatically terminate rights License (including patent licenses granted third paragraph section 11). However, cease violation License, license particular copyright holder reinstated () provisionally, unless copyright holder explicitly finally terminates license, (b) permanently, copyright holder fails notify violation reasonable means prior 60 days cessation. Moreover, license particular copyright holder reinstated permanently copyright holder notifies violation reasonable means, first time received notice violation License (work) copyright holder, cure violation prior 30 days receipt notice. Termination rights section terminate licenses parties received copies rights License. rights terminated permanently reinstated, qualify receive new licenses material section 10.","code":""},{"path":"https://alexander-pastukhov.github.io/saccadr/LICENSE.html","id":"id_9-acceptance-not-required-for-having-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"9. Acceptance Not Required for Having Copies","title":"GNU General Public License","text":"required accept License order receive run copy Program. Ancillary propagation covered work occurring solely consequence using peer--peer transmission receive copy likewise require acceptance. However, nothing License grants permission propagate modify covered work. actions infringe copyright accept License. Therefore, modifying propagating covered work, indicate acceptance License .","code":""},{"path":"https://alexander-pastukhov.github.io/saccadr/LICENSE.html","id":"id_10-automatic-licensing-of-downstream-recipients","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"10. Automatic Licensing of Downstream Recipients","title":"GNU General Public License","text":"time convey covered work, recipient automatically receives license original licensors, run, modify propagate work, subject License. responsible enforcing compliance third parties License. “entity transaction” transaction transferring control organization, substantially assets one, subdividing organization, merging organizations. propagation covered work results entity transaction, party transaction receives copy work also receives whatever licenses work party’s predecessor interest give previous paragraph, plus right possession Corresponding Source work predecessor interest, predecessor can get reasonable efforts. may impose restrictions exercise rights granted affirmed License. example, may impose license fee, royalty, charge exercise rights granted License, may initiate litigation (including cross-claim counterclaim lawsuit) alleging patent claim infringed making, using, selling, offering sale, importing Program portion .","code":""},{"path":"https://alexander-pastukhov.github.io/saccadr/LICENSE.html","id":"id_11-patents","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"11. Patents","title":"GNU General Public License","text":"“contributor” copyright holder authorizes use License Program work Program based. work thus licensed called contributor’s “contributor version”. contributor’s “essential patent claims” patent claims owned controlled contributor, whether already acquired hereafter acquired, infringed manner, permitted License, making, using, selling contributor version, include claims infringed consequence modification contributor version. purposes definition, “control” includes right grant patent sublicenses manner consistent requirements License. contributor grants non-exclusive, worldwide, royalty-free patent license contributor’s essential patent claims, make, use, sell, offer sale, import otherwise run, modify propagate contents contributor version. following three paragraphs, “patent license” express agreement commitment, however denominated, enforce patent (express permission practice patent covenant sue patent infringement). “grant” patent license party means make agreement commitment enforce patent party. convey covered work, knowingly relying patent license, Corresponding Source work available anyone copy, free charge terms License, publicly available network server readily accessible means, must either (1) cause Corresponding Source available, (2) arrange deprive benefit patent license particular work, (3) arrange, manner consistent requirements License, extend patent license downstream recipients. “Knowingly relying” means actual knowledge , patent license, conveying covered work country, recipient’s use covered work country, infringe one identifiable patents country reason believe valid. , pursuant connection single transaction arrangement, convey, propagate procuring conveyance , covered work, grant patent license parties receiving covered work authorizing use, propagate, modify convey specific copy covered work, patent license grant automatically extended recipients covered work works based . patent license “discriminatory” include within scope coverage, prohibits exercise , conditioned non-exercise one rights specifically granted License. may convey covered work party arrangement third party business distributing software, make payment third party based extent activity conveying work, third party grants, parties receive covered work , discriminatory patent license () connection copies covered work conveyed (copies made copies), (b) primarily connection specific products compilations contain covered work, unless entered arrangement, patent license granted, prior 28 March 2007. Nothing License shall construed excluding limiting implied license defenses infringement may otherwise available applicable patent law.","code":""},{"path":"https://alexander-pastukhov.github.io/saccadr/LICENSE.html","id":"id_12-no-surrender-of-others-freedom","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"12. No Surrender of Others’ Freedom","title":"GNU General Public License","text":"conditions imposed (whether court order, agreement otherwise) contradict conditions License, excuse conditions License. convey covered work satisfy simultaneously obligations License pertinent obligations, consequence may convey . example, agree terms obligate collect royalty conveying convey Program, way satisfy terms License refrain entirely conveying Program.","code":""},{"path":"https://alexander-pastukhov.github.io/saccadr/LICENSE.html","id":"id_13-use-with-the-gnu-affero-general-public-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"13. Use with the GNU Affero General Public License","title":"GNU General Public License","text":"Notwithstanding provision License, permission link combine covered work work licensed version 3 GNU Affero General Public License single combined work, convey resulting work. terms License continue apply part covered work, special requirements GNU Affero General Public License, section 13, concerning interaction network apply combination .","code":""},{"path":"https://alexander-pastukhov.github.io/saccadr/LICENSE.html","id":"id_14-revised-versions-of-this-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"14. Revised Versions of this License","title":"GNU General Public License","text":"Free Software Foundation may publish revised /new versions GNU General Public License time time. new versions similar spirit present version, may differ detail address new problems concerns. version given distinguishing version number. Program specifies certain numbered version GNU General Public License “later version” applies , option following terms conditions either numbered version later version published Free Software Foundation. Program specify version number GNU General Public License, may choose version ever published Free Software Foundation. Program specifies proxy can decide future versions GNU General Public License can used, proxy’s public statement acceptance version permanently authorizes choose version Program. Later license versions may give additional different permissions. However, additional obligations imposed author copyright holder result choosing follow later version.","code":""},{"path":"https://alexander-pastukhov.github.io/saccadr/LICENSE.html","id":"id_15-disclaimer-of-warranty","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"15. Disclaimer of Warranty","title":"GNU General Public License","text":"WARRANTY PROGRAM, EXTENT PERMITTED APPLICABLE LAW. EXCEPT OTHERWISE STATED WRITING COPYRIGHT HOLDERS /PARTIES PROVIDE PROGRAM “” WITHOUT WARRANTY KIND, EITHER EXPRESSED IMPLIED, INCLUDING, LIMITED , IMPLIED WARRANTIES MERCHANTABILITY FITNESS PARTICULAR PURPOSE. ENTIRE RISK QUALITY PERFORMANCE PROGRAM . PROGRAM PROVE DEFECTIVE, ASSUME COST NECESSARY SERVICING, REPAIR CORRECTION.","code":""},{"path":"https://alexander-pastukhov.github.io/saccadr/LICENSE.html","id":"id_16-limitation-of-liability","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"16. Limitation of Liability","title":"GNU General Public License","text":"EVENT UNLESS REQUIRED APPLICABLE LAW AGREED WRITING COPYRIGHT HOLDER, PARTY MODIFIES /CONVEYS PROGRAM PERMITTED , LIABLE DAMAGES, INCLUDING GENERAL, SPECIAL, INCIDENTAL CONSEQUENTIAL DAMAGES ARISING USE INABILITY USE PROGRAM (INCLUDING LIMITED LOSS DATA DATA RENDERED INACCURATE LOSSES SUSTAINED THIRD PARTIES FAILURE PROGRAM OPERATE PROGRAMS), EVEN HOLDER PARTY ADVISED POSSIBILITY DAMAGES.","code":""},{"path":"https://alexander-pastukhov.github.io/saccadr/LICENSE.html","id":"id_17-interpretation-of-sections-15-and-16","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"17. Interpretation of Sections 15 and 16","title":"GNU General Public License","text":"disclaimer warranty limitation liability provided given local legal effect according terms, reviewing courts shall apply local law closely approximates absolute waiver civil liability connection Program, unless warranty assumption liability accompanies copy Program return fee. END TERMS CONDITIONS","code":""},{"path":"https://alexander-pastukhov.github.io/saccadr/LICENSE.html","id":"how-to-apply-these-terms-to-your-new-programs","dir":"","previous_headings":"","what":"How to Apply These Terms to Your New Programs","title":"GNU General Public License","text":"develop new program, want greatest possible use public, best way achieve make free software everyone can redistribute change terms. , attach following notices program. safest attach start source file effectively state exclusion warranty; file least “copyright” line pointer full notice found. Also add information contact electronic paper mail. program terminal interaction, make output short notice like starts interactive mode: hypothetical commands show w show c show appropriate parts General Public License. course, program’s commands might different; GUI interface, use “box”. also get employer (work programmer) school, , sign “copyright disclaimer” program, necessary. information , apply follow GNU GPL, see <http://www.gnu.org/licenses/>. GNU General Public License permit incorporating program proprietary programs. program subroutine library, may consider useful permit linking proprietary applications library. want , use GNU Lesser General Public License instead License. first, please read <http://www.gnu.org/philosophy/--lgpl.html>.","code":"<one line to give the program's name and a brief idea of what it does.> Copyright (C) <year>  <name of author>  This program is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.  This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.  You should have received a copy of the GNU General Public License along with this program.  If not, see <http://www.gnu.org/licenses/>. <program>  Copyright (C) <year>  <name of author> This program comes with ABSOLUTELY NO WARRANTY; for details type 'show w'. This is free software, and you are welcome to redistribute it under certain conditions; type 'show c' for details."},{"path":"https://alexander-pastukhov.github.io/saccadr/reference/compute_velocity_ek.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute velocity via Engbert & Kliegl (2003) algorithm. — compute_velocity_ek","title":"Compute velocity via Engbert & Kliegl (2003) algorithm. — compute_velocity_ek","text":"Compute velocity via Engbert & Kliegl (2003) algorithm. See formula #1 manuscript.","code":""},{"path":"https://alexander-pastukhov.github.io/saccadr/reference/compute_velocity_ek.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute velocity via Engbert & Kliegl (2003) algorithm. — compute_velocity_ek","text":"","code":"compute_velocity_ek(x, trial, time_window_in_samples, delta_t)"},{"path":"https://alexander-pastukhov.github.io/saccadr/reference/compute_velocity_ek.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute velocity via Engbert & Kliegl (2003) algorithm. — compute_velocity_ek","text":"x Vector coordinates trial Vector trial labels, velocity computed within trials. time_window_in_samples Width window velocity computation samples. delta_t Duration single frame (1 / sampling rate).","code":""},{"path":"https://alexander-pastukhov.github.io/saccadr/reference/compute_velocity_ek.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute velocity via Engbert & Kliegl (2003) algorithm. — compute_velocity_ek","text":"Velocity vector","code":""},{"path":"https://alexander-pastukhov.github.io/saccadr/reference/diff_ek.html","id":null,"dir":"Reference","previous_headings":"","what":"Differentiate x and y and compute change amplitude via an algorithm proposed by Engbert & Kliegl (2003) — diff_ek","title":"Differentiate x and y and compute change amplitude via an algorithm proposed by Engbert & Kliegl (2003) — diff_ek","text":"Differentiate x y compute change amplitude via algorithm proposed Engbert & Kliegl (2003)","code":""},{"path":"https://alexander-pastukhov.github.io/saccadr/reference/diff_ek.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Differentiate x and y and compute change amplitude via an algorithm proposed by Engbert & Kliegl (2003) — diff_ek","text":"","code":"diff_ek(x, y, trial, sample_rate, options = NULL)"},{"path":"https://alexander-pastukhov.github.io/saccadr/reference/diff_ek.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Differentiate x and y and compute change amplitude via an algorithm proposed by Engbert & Kliegl (2003) — diff_ek","text":"x vector x coordinates degrees visual angle y vector y coordinates degrees visual angle trial vector trial index sample_rate sample rate Hz options List method specific options, see Details.","code":""},{"path":"https://alexander-pastukhov.github.io/saccadr/reference/diff_ek.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Differentiate x and y and compute change amplitude via an algorithm proposed by Engbert & Kliegl (2003) — diff_ek","text":"data.frame columns x, y, amp","code":""},{"path":"https://alexander-pastukhov.github.io/saccadr/reference/diff_ek.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Differentiate x and y and compute change amplitude via an algorithm proposed by Engbert & Kliegl (2003) — diff_ek","text":"Method options, please refer Engbert & Kliegl (2003) details parameters rationale default values. ek_velocity_time_window Time window velocity computation milliseconds. Defaults 20 ms.","code":""},{"path":[]},{"path":"https://alexander-pastukhov.github.io/saccadr/reference/diff_ek.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Differentiate x and y and compute change amplitude via an algorithm proposed by Engbert & Kliegl (2003) — diff_ek","text":"","code":"diff_ek(rnorm(1000), rnorm(1000), rep(1, 1000), 250, list(\"ek_velocity_time_window\" = 20)) #>                 x            y       amp #> 1              NA           NA        NA #> 2   -148.03674316  205.8607635 253.56169 #> 3    -43.62339783  147.0704803 153.40380 #> 4    -64.86721039   94.4495621 114.57956 #> 5    -37.83142471  -40.8235321  55.65768 #> 6     -9.75629139  -94.7735291  95.27438 #> 7      8.33357811 -144.9267120 145.16611 #> 8      3.52453279  -11.1638708  11.70702 #> 9    -70.07298279   12.2402086  71.13400 #> 10     3.29045081  -95.7246552  95.78119 #> 11   104.67865753 -128.6553650 165.86086 #> 12    73.81729889   -0.1278290  73.81741 #> 13    -3.01073122  182.6752777 182.70009 #> 14    -8.73173809  102.8936920 103.26352 #> 15   -40.41247559  -63.1066551  74.93743 #> 16   -18.98878670 -130.2952118 131.67162 #> 17  -150.32612610 -104.2653580 182.94592 #> 18   -74.34495544    0.8225567  74.34951 #> 19    82.50994110   -4.1057997  82.61203 #> 20   105.39205933  -16.9328728 106.74366 #> 21    39.61030960   56.8209190  69.26466 #> 22   -59.43163681   -6.6561537  59.80321 #> 23    52.33439255   -8.6864204  53.05038 #> 24    32.38088226    4.5036464  32.69257 #> 25   -84.60981750   64.4005051 106.33083 #> 26   -56.39690781   -1.9710143  56.43134 #> 27    72.86018372  -83.1968918 110.59082 #> 28    72.15229797   14.8947239  73.67365 #> 29    -9.23385239  150.0558777 150.33972 #> 30   -72.46547699   88.6975327 114.53601 #> 31   -57.14479065   -9.9432745  58.00341 #> 32   -72.64087677   -1.2711165  72.65200 #> 33   -91.27661133   32.7907715  96.98791 #> 34   -26.15897751   47.8615265  54.54372 #> 35    70.73267365    3.3871288  70.81373 #> 36   166.02352905   55.3834877 175.01755 #> 37   180.67044067   23.9470730 182.25057 #> 38     5.41535139  -32.1853485  32.63775 #> 39    18.79760933 -143.6670074 144.89154 #> 40    83.77397919  -74.8149796 112.31812 #> 41    42.95528793   88.5932159  98.45768 #> 42  -136.36177063   77.8040466 156.99682 #> 43  -255.24172974    0.3229343 255.24193 #> 44   -57.68195724 -191.2373047 199.74713 #> 45   120.86548615 -143.4396820 187.57241 #> 46   186.60177612  -11.2051792 186.93790 #> 47    46.25021744   95.0695572 105.72277 #> 48   -62.49583054  175.5604706 186.35237 #> 49     6.86803007   62.6260834  63.00156 #> 50    60.71588898  -21.5961018  64.44231 #> 51    -8.49944592   -5.6953506  10.23121 #> 52  -127.41846466   29.1015224 130.69952 #> 53   -84.82845306   -4.7207184  84.95971 #> 54    52.60114288  -75.2939453  91.84802 #> 55    70.71397400  -49.3054886  86.20613 #> 56    -9.22798634   69.6630783  70.27162 #> 57   -15.43244839   86.8759766  88.23602 #> 58   -33.59408569  -68.4999847  76.29424 #> 59     7.95479345 -152.0214539 152.22944 #> 60   -26.36241722 -180.2116547 182.12967 #> 61   -88.14541626  -68.4011307 111.57208 #> 62   -97.74520874   75.1834641 123.31536 #> 63   -26.95492935  124.6794128 127.55988 #> 64   152.74018860  130.1135101 200.64668 #> 65   154.43434143  -15.3084545 155.19122 #> 66    96.04911041  -49.7277374 108.15858 #> 67    13.98439789  -10.7810993  17.65773 #> 68    60.27598190  -43.8289185  74.52629 #> 69   -32.53069687  -43.3630638  54.20887 #> 70   -66.53470612   57.3164482  87.81823 #> 71   -76.10534668   89.8275070 117.73277 #> 72  -143.79721069  -57.7001114 154.94173 #> 73   -19.47476578 -229.2860718 230.11165 #> 74     8.36611938 -160.8332367 161.05068 #> 75    28.58185005  134.1823578 137.19266 #> 76    21.91023064  287.6563110 288.48953 #> 77    -0.53538620  162.5952454 162.59613 #> 78    91.04749298  -48.9479980 103.37095 #> 79    65.12182617  -93.1260757 113.63678 #> 80    50.64701462  -64.6145172  82.09845 #> 81     7.38728142  -23.6034145  24.73243 #> 82  -138.61523438   -5.5148220 138.72489 #> 83  -140.14746094   -6.3250470 140.29012 #> 84  -133.22825623  -13.7572165 133.93666 #> 85   -15.92920876  -39.1176529  42.23660 #> 86   115.93529510   -1.8246479 115.94965 #> 87   113.77887726   37.5821075 119.82507 #> 88     9.98859501   85.4520111  86.03382 #> 89   -10.45479107  116.4233475 116.89182 #> 90    89.40964508   17.6511250  91.13532 #> 91     9.95859337 -111.4110107 111.85521 #> 92  -149.96971130 -140.3367004 205.39061 #> 93   -59.51852036  -74.4323654  95.30284 #> 94   125.18811035   31.3456726 129.05276 #> 95    95.76403046  123.0338898 155.91051 #> 96    -4.19098806  140.2291870 140.29180 #> 97    41.29553986   -2.9092257  41.39789 #> 98    50.71747208  -31.7880478  59.85601 #> 99   -39.23697281   77.3535767  86.73590 #> 100 -124.35186005   64.1038361 139.90242 #> 101 -150.92073059  -80.0047607 170.81519 #> 102  -87.52608490 -192.3189392 211.29929 #> 103    3.45507479  -73.6919327  73.77288 #> 104   74.37302399   91.5776672 117.97379 #> 105   86.16448212  206.0668488 223.35591 #> 106   27.65031433  209.6203003 211.43607 #> 107  -15.78999805   33.4586945  36.99741 #> 108  -56.18442154 -205.3606567 212.90770 #> 109  -72.15676117 -330.4657898 338.25174 #> 110   48.35994339 -165.2770996 172.20686 #> 111   77.29987335  102.1169281 128.07473 #> 112   10.21462154  216.8745117 217.11493 #> 113  -74.65219116  160.8080902 177.29126 #> 114  -69.37572479 -104.5002899 125.43246 #> 115   14.15878296 -163.7595825 164.37053 #> 116   40.84291458 -126.3335953 132.77169 #> 117   76.47266388    5.8585310  76.69675 #> 118   62.59990692  107.9322968 124.77231 #> 119   15.43378162   68.6025696  70.31724 #> 120 -102.04600525   90.7251511 136.54465 #> 121 -144.73269653   65.7522430 158.96827 #> 122   20.04824829   46.2254524  50.38576 #> 123  180.32641602  -87.9232407 200.61932 #> 124  133.05580139  -95.0763092 163.53394 #> 125  -80.37734985   59.2743263  99.86974 #> 126 -165.54512024  113.6589966 200.80726 #> 127  -15.77695656   -7.4405975  17.44348 #> 128   96.43311310 -122.5386658 155.93290 #> 129   38.09603882  -83.1287918  91.44235 #> 130  -18.07139969   55.3462563  58.22185 #> 131    9.13555431   78.8989868  79.42612 #> 132  121.81773376   63.0725136 137.17763 #> 133  116.50546265  -60.6758995 131.35862 #> 134   10.02440739 -177.1731110 177.45647 #> 135  -47.93382263  -71.8314133  86.35626 #> 136  -92.60289001   32.9403610  98.28714 #> 137  -72.67231750   99.8202667 123.47207 #> 138  -45.81496429   39.0871086  60.22303 #> 139   41.68318176   -2.5588899  41.76165 #> 140   14.90186405  -25.9928207  29.96151 #> 141  -87.43692017    2.5035608  87.47275 #> 142  -14.05987263   32.5304108  35.43879 #> 143  145.17193604   16.9666119 146.16004 #> 144  131.41140747  -64.2341080 146.27022 #> 145  -48.24366760  -61.3139420  78.01827 #> 146 -186.74919128   53.1354294 194.16136 #> 147 -109.97779083   89.1336288 141.56242 #> 148   38.85809708  131.9927673 137.59376 #> 149   88.72646332   60.0708923 107.14895 #> 150  -60.37260437   39.2881050  72.03059 #> 151 -146.77854919  -40.4151497 152.24102 #> 152  -11.68393326  -60.7394981  61.85306 #> 153  164.17610168   17.3730545 165.09275 #> 154  167.65518188  -18.9679775 168.72476 #> 155  -14.35221481  -37.8448601  40.47492 #> 156  -36.85848999  -72.1638565  81.03191 #> 157  -32.88826752  -46.8192444  57.21608 #> 158    1.27756178  -44.9501724  44.96832 #> 159   -4.85225677  -82.1293106  82.27252 #> 160  -61.21609879    4.1867051  61.35910 #> 161  -14.67985058   13.6440592  20.04142 #> 162   -0.07113546  -66.4673996  66.46744 #> 163    3.39124966  -13.2271862  13.65500 #> 164    9.55591011   37.7551689  38.94571 #> 165  -10.56526470   82.5812531  83.25436 #> 166    2.57104731   94.9249573  94.95977 #> 167  -55.05803680   64.8408737  85.06307 #> 168  -34.10989380  -36.5627747  50.00321 #> 169   99.38402557 -163.3031006 191.16769 #> 170   76.23155975  -36.8705292  84.67991 #> 171   52.94832230  102.0497208 114.96813 #> 172  -49.08829498   52.2805481  71.71413 #> 173  -21.60476875    2.1929758  21.71578 #> 174   29.31210899   -1.7062540  29.36173 #> 175   24.80570030   14.5640087  28.76514 #> 176  104.30760193   46.4076729 114.16544 #> 177   42.45343399   67.0967407  79.39941 #> 178  -47.55519867  -17.6165714  50.71332 #> 179 -133.23637390 -191.9448547 233.65521 #> 180  -85.02392578 -146.2907410 169.20416 #> 181  -61.84287262   42.1337929  74.83179 #> 182    3.26778793  137.2701874 137.30908 #> 183  118.54824066   51.6454506 129.30947 #> 184  176.46203613   -4.8815808 176.52954 #> 185  147.87774658   20.5431728 149.29786 #> 186  -18.50273323   54.4847260  57.54074 #> 187 -114.54690552  -36.1132736 120.10480 #> 188 -114.82644653  -61.4828453 130.25073 #> 189  -40.99238205    1.5089043  41.02014 #> 190   21.00359917    1.6937838  21.07178 #> 191  -96.68663788  -28.2132225 100.71888 #> 192  -67.16267395  -86.2114105 109.28510 #> 193   61.35814667   -6.6666074  61.71925 #> 194   44.28789139   76.0419235  87.99882 #> 195   -2.89125490   93.1280441  93.17291 #> 196  -32.10513687    4.6218319  32.43611 #> 197  102.25756073 -133.8630524 168.45155 #> 198  117.72186279  -45.1985359 126.10053 #> 199   -0.76699018  130.2427521 130.24501 #> 200  -28.73829651  159.1613312 161.73503 #> 201  -87.95711517   65.4249725 109.62154 #> 202 -136.13844299  -67.3483505 151.88639 #> 203  -94.29679871  -32.2464371  99.65801 #> 204   25.84502792  -10.6269217  27.94453 #> 205  107.08683014   -7.8236341 107.37224 #> 206    2.60590267  -69.7422333  69.79090 #> 207  -48.41976166 -110.5166245 120.65818 #> 208   -6.08187675  -24.8282108  25.56226 #> 209   98.59023285   55.2998123 113.04027 #> 210   55.30258942  111.5712891 124.52521 #> 211  -32.27755737   41.1301384  52.28316 #> 212  -22.41018867   31.9280720  39.00793 #> 213  -46.78384018   42.9498940  63.50922 #> 214   58.95096588   68.3031540  90.22493 #> 215   65.82638550   66.8814545  93.84158 #> 216   30.67578506  -37.1055336  48.14379 #> 217  -35.26658249  -42.8276749  55.47920 #> 218 -116.93520355    2.7774346 116.96818 #> 219  -50.87775803   10.6725168  51.98508 #> 220    7.65480900 -103.9913254 104.27268 #> 221   14.80478764 -221.9575500 222.45075 #> 222   48.80106735 -181.6756287 188.11586 #> 223  -27.42279243    8.0380125  28.57655 #> 224 -100.94853973  175.9125214 202.81968 #> 225 -121.10878754   68.1517105 138.96760 #> 226  -32.88032913  -48.0308762  58.20723 #> 227  115.76257324  -41.0759277 122.83406 #> 228   73.23170471   43.3890419  85.12045 #> 229   39.66710663   88.1779861  96.68938 #> 230   15.10904980   18.3043270  23.73461 #> 231   28.88078690   66.8704453  72.84062 #> 232   13.97468281  126.9234238 127.69044 #> 233   13.96195698   94.1263962  95.15626 #> 234   32.24586105  -79.6806107  85.95810 #> 235   12.21419907 -124.7481079 125.34463 #> 236    9.39024639  -66.1533737  66.81651 #> 237  -29.69057655  -11.6762877  31.90401 #> 238  -73.59584808  -28.0564899  78.76240 #> 239 -103.48979187 -146.7783203 179.59402 #> 240  -17.36432076  -85.6737213  87.41571 #> 241  116.04266357  -13.1855173 116.78937 #> 242   94.32033539  109.7422256 144.70550 #> 243  -28.44374847  141.1335449 143.97126 #> 244  -79.91445160  -12.4062128  80.87171 #> 245  -20.27728653  -34.7206039  40.20807 #> 246  -11.92429543  -45.8565788  47.38159 #> 247  -21.73946953   60.2109985  64.01538 #> 248  -19.18189430   20.2472763  27.89081 #> 249   14.54584408   13.1885490  19.63465 #> 250  110.69893646  116.5846558 160.76765 #> 251   98.79455566    7.9057140  99.11037 #> 252   48.62723160  -84.6431274  97.61694 #> 253 -132.37806702 -170.7220917 216.03237 #> 254 -139.65530396  -10.5880957 140.05610 #> 255   49.82602692   79.1669159  93.54161 #> 256  146.55226135    0.9289264 146.55521 #> 257  139.97636414  -32.7747116 143.76218 #> 258   32.38032913  -41.3965912  52.55629 #> 259  -85.07211304   54.7277145 101.15526 #> 260 -178.68116760    3.0044918 178.70643 #> 261 -187.00323486   20.2711067 188.09872 #> 262  -18.70156860  -19.2878647  26.86578 #> 263  152.02728271   11.1990995 152.43922 #> 264  164.38891602   94.6615829 189.69589 #> 265   69.04249573    5.4777966  69.25946 #> 266 -104.48538971  -34.5783615 110.05844 #> 267 -163.10279846 -139.6372070 214.71160 #> 268  -92.88237762  -47.4990692 104.32304 #> 269   63.94679260   14.9626770  65.67400 #> 270  125.64134216   72.7757111 145.19659 #> 271   94.42511749   24.0251999  97.43363 #> 272  -29.01020813 -120.6402969 124.07930 #> 273 -128.66865540  -66.8676071 145.00655 #> 274  -97.73609161   51.7653313 110.59834 #> 275   74.46704102  228.6198730 240.44206 #> 276  208.13771057  161.2250519 263.27709 #> 277  178.37174988  -29.1446552 180.73708 #> 278   53.90274048  -50.9316177  74.15885 #> 279 -114.24414062  -46.2527275 123.25193 #> 280 -152.39982605  -43.4119263 158.46231 #> 281 -108.90306854  -54.1923447 121.64164 #> 282   21.17967796  -41.3089447  46.42206 #> 283  148.13948059   -2.0738921 148.15400 #> 284   77.40267181   -5.8250837  77.62155 #> 285  -85.57126617  -12.3027067  86.45113 #> 286 -238.04814148  -37.4441643 240.97507 #> 287 -181.89389038 -131.7091217 224.57222 #> 288   30.74142265 -141.7378235 145.03326 #> 289   74.82930756  100.9310074 125.64431 #> 290   36.00285339  235.6084137 238.34330 #> 291    1.26426589  137.6322174 137.63802 #> 292    0.41907090  -76.9786758  76.97982 #> 293   12.07301903 -190.4088593 190.79122 #> 294  -22.60583878  -66.5535889  70.28801 #> 295  -41.81657791   56.7652626  70.50476 #> 296   27.86227036  152.0686035 154.60002 #> 297   76.01909637  117.9763260 140.34713 #> 298  105.69941711   -9.8265648 106.15521 #> 299   34.84309769  -77.0919342  84.60028 #> 300  -52.41058731  -63.3733482  82.23777 #> 301  -41.36642456   39.4015427  57.12847 #> 302  -10.19580269   63.3544998  64.16967 #> 303   49.44040298   35.0360336  60.59602 #> 304   73.82360840  -76.7922287 106.52216 #> 305   65.44185638 -174.0915375 185.98521 #> 306   44.23889923  -61.9644623  76.13590 #> 307  -45.23918152   24.1129436  51.26419 #> 308  -27.15165901   96.4336777 100.18317 #> 309   -9.47002506  -15.4516811  18.12280 #> 310  -28.18081093   18.0835705  33.48393 #> 311  -90.22799683   42.5687675  99.76568 #> 312 -101.10459900  -64.4539337 119.90183 #> 313   -9.23685741 -138.5413818 138.84896 #> 314  -41.24295044    0.1222917  41.24313 #> 315  -21.29559135  223.0525055 224.06678 #> 316   -2.04106808  250.7608337 250.76914 #> 317   25.39597130   54.5278053  60.15178 #> 318   -6.07680607 -120.9612656 121.11381 #> 319   21.57141685    1.4620864  21.62091 #> 320   97.46353912  -17.5023575  99.02259 #> 321   45.99114609  -87.5279388  98.87530 #> 322   29.05008507 -121.6866379 125.10614 #> 323   46.83474731  -66.4184799  81.27059 #> 324   37.91622543  -42.7583313  57.14818 #> 325  -65.46844482 -108.2543259 126.51133 #> 326 -163.38850403   -8.1471176 163.59150 #> 327  -88.94184875  134.9095001 161.58968 #> 328   43.93496704  118.1760025 126.07874 #> 329  160.42935181   43.9187927 166.33231 #> 330  193.24638367  -15.3035069 193.85139 #> 331   37.82114792   13.6124315  40.19624 #> 332  -98.70739746   21.0903187 100.93538 #> 333 -138.16270447  -18.9135780 139.45127 #>  [ reached 'max' / getOption(\"max.print\") -- omitted 667 rows ]"},{"path":"https://alexander-pastukhov.github.io/saccadr/reference/diff_nh.html","id":null,"dir":"Reference","previous_headings":"","what":"Differentiate x and y and compute change amplitude via an algorithm proposed by Nyström and Holmqvist (2010) doi:10.3758/BRM.42.1.188 — diff_nh","title":"Differentiate x and y and compute change amplitude via an algorithm proposed by Nyström and Holmqvist (2010) doi:10.3758/BRM.42.1.188 — diff_nh","text":"Differentiate x y compute change amplitude via algorithm proposed Nyström  Holmqvist (2010) doi:10.3758/BRM.42.1.188 . Note components amplitude smoothed independently via Savitzky-Golay filter, components may (probably ) add amplitude. Note filtering sensitive presence NA.","code":""},{"path":"https://alexander-pastukhov.github.io/saccadr/reference/diff_nh.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Differentiate x and y and compute change amplitude via an algorithm proposed by Nyström and Holmqvist (2010) doi:10.3758/BRM.42.1.188 — diff_nh","text":"","code":"diff_nh(x, y, trial, sample_rate, options = NULL)"},{"path":"https://alexander-pastukhov.github.io/saccadr/reference/diff_nh.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Differentiate x and y and compute change amplitude via an algorithm proposed by Nyström and Holmqvist (2010) doi:10.3758/BRM.42.1.188 — diff_nh","text":"x vector x coordinates degrees visual angle y vector y coordinates degrees visual angle trial vector trial index sample_rate sample rate Hz options List method specific options, see Details.","code":""},{"path":"https://alexander-pastukhov.github.io/saccadr/reference/diff_nh.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Differentiate x and y and compute change amplitude via an algorithm proposed by Nyström and Holmqvist (2010) doi:10.3758/BRM.42.1.188 — diff_nh","text":"data.frame columns x, y, amp","code":""},{"path":"https://alexander-pastukhov.github.io/saccadr/reference/diff_nh.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Differentiate x and y and compute change amplitude via an algorithm proposed by Nyström and Holmqvist (2010) doi:10.3758/BRM.42.1.188 — diff_nh","text":"Method options, please refer Nyström Holmqvist (2010) details parameters rationale default values. nh_sg_filter_order Order Savitzky-Golay filter. Defaults 2.","code":""},{"path":[]},{"path":"https://alexander-pastukhov.github.io/saccadr/reference/diff_nh.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Differentiate x and y and compute change amplitude via an algorithm proposed by Nyström and Holmqvist (2010) doi:10.3758/BRM.42.1.188 — diff_nh","text":"","code":"diff_nh(rnorm(1000), rnorm(1000), rep(1, 1000), 250, list(\"nh_sg_filter_order\" = 2)) #> # A tibble: 1,000 x 3 #>         x     y   amp #>     <dbl> <dbl> <dbl> #>  1   NA     NA    NA  #>  2   NA     NA    NA  #>  3   NA     NA    NA  #>  4   NA     NA    NA  #>  5   NA     NA    NA  #>  6   NA     NA    NA  #>  7   NA     NA    NA  #>  8  -12.2 -170.  244. #>  9  -60.3 -208.  304. #> 10 -165.   170.  462. #> # ... with 990 more rows"},{"path":"https://alexander-pastukhov.github.io/saccadr/reference/extract_saccades.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract saccades from samples using votes from selected methods. — extract_saccades","title":"Extract saccades from samples using votes from selected methods. — extract_saccades","text":"Extract saccades samples using votes selected methods. method votes whether given sample belongs saccade. Next, saccades identified via majority vote using  vote_threshold parameter, well minimum duration minimal temporal separation criteria. Please note units gaze samples must  degrees visual angle. units important methods use specific (e.g., physiologically plausible) velocity acceleration thresholds. default, ensemble includes methods proposed Engbert & Kliegl (2003) (\"ek\"), Otero-Millan et al. (\"om\"), Nyström & Holmqvist (2010) (\"nh\"),  see Implemented Methods vignette. However, can extended via custom methods, see Using Custom Methods vignette. default, function returns table identified saccades can return matrix methods' votes per sample instead (return_votes = TRUE).","code":""},{"path":"https://alexander-pastukhov.github.io/saccadr/reference/extract_saccades.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract saccades from samples using votes from selected methods. — extract_saccades","text":"","code":"extract_saccades(   x,   y,   sample_rate,   trial = NULL,   methods = list(method_ek, method_om, method_nh),   velocity_function = saccadr::diff_ek,   options = NULL,   binocular = \"merge\",   vote_threshold = ifelse(length(methods) == 1, 1, (length(methods) - 1)),   minimal_duration_ms = 12,   minimal_separation_ms = 12,   return_votes = FALSE )"},{"path":"https://alexander-pastukhov.github.io/saccadr/reference/extract_saccades.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract saccades from samples using votes from selected methods. — extract_saccades","text":"x Horizontal coordinate, either vector monocular data two-column matrix binocular data. y Vertical coordinate, either vector monocular data two-column matrix binocular data. sample_rate Sampling rate Hz. assumed common entire time series. time series contains chunks (trials) recorded using different acquisition rate (e.g., SR Research Eyelink allows set different acquisition rate recording / trial), need split time series analyze separately. trial Optional vector trial ID. omitted, samples assumed belong single trial. Velocity, acceleration, saccades computed respecting trial borders. methods list saccade detection methods, can include external functions implement sample classification (see Using Custom Methods vignette). Package methods include Engbert & Kliegl (2003) (method_ek), Otero-Millan et al. (2014) (method_om),  Nyström Holmqvist (2010) (method_nh). Defaults list internally implemented methods: list(method_ek, method_om, method_nh). velocity_function handle function compute velocity acceleration. Defaults method suggested Engbert & Kliegl (2003) diff_ek. package also implements method proposed Nyström Holmqvist (2010) diff_nh. See vignette \"Velocity computation\" details information implement custom method. options named list options saccade detection (see method_ek, method_om, method_nh) velocity (diff_ek, diff_nh) computation. See documentation specific method details. binocular Specifies binocular data treated. Options \"cyclopean\" (binocular data converted average cyclopean image saccades extracted), \"monocular\" (saccades extracted independently eye), \"merge\" (default, sample votes obtained eyes methods averaged. way binocular saccades, .e., eye movements sufficient temporal  overlap eyes, detected.). vote_threshold Value 1 N (N number used methods) defining vote threshold saccade. default, one method \\(threshold = N-1\\) must agree sample considered saccade. Threshold 1 applied single method used. minimal_duration_ms Minimal duration saccade milliseconds. Shorter candidate saccades discarded, minimal_separation_ms Minimal time separation saccades milliseconds. Saccades separated shorter interval \"saccade\" votes, merged including period. return_votes Logical. Whether function return extracted microsaccades (FALSE, default) votes per sample (TRUE).","code":""},{"path":"https://alexander-pastukhov.github.io/saccadr/reference/extract_saccades.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract saccades from samples using votes from selected methods. — extract_saccades","text":"data.frame saccade properties (see details), return_votes = FALSE. Alternatively, returns votes per sample (return_votes = TRUE). monocular processing (monocular input, cyclopean merged binocular data) matrix nrow(x) rows length(methods) columns 0/1 votes sample method. binocular processing, function returns two element list  similar matrices per eye.","code":""},{"path":"https://alexander-pastukhov.github.io/saccadr/reference/extract_saccades.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Extract saccades from samples using votes from selected methods. — extract_saccades","text":"Variables describe saccade Trial Trial index. Eye \"Monocular\" monocular inputs. \"Cyclopean\" binocular data averaged applying algorithms. \"Binocular\" binocular data votes averaged applying algorithms. \"Left\" \"Right\" binocular data eyes processed independently. OnsetSample Index first sample. OffsetSample Index last sample. Onset Onset time relative trial start milliseconds. Offset Offset time relative trial start milliseconds. Duration Duration milliseconds. DisplacementX Horizontal displacement measured first last sample. DisplacementY Vertical displacement measured first last sample. Displacement Displacement magnitude measured first last sample. DisplacementPhi Displacement direction measured first last sample. AmplitudeX Horizontal displacement measured leftmost rightmost sample. AmplitudeY Vertical displacement measured lowest uppermost sample. Amplitude Displacement magnitude measured extreme samples. AmplitudePhi Displacement direction measured extreme samples. VelocityPeak Peak velocity. VelocityAvg Average velocity. AccelerationPeak Peak acceleration. AccelerationAvg Average acceleration. AccelerationStart Peak acceleration peak velocity reached. AccelerationStop Peak acceleration peak velocity reached.","code":""},{"path":[]},{"path":"https://alexander-pastukhov.github.io/saccadr/reference/extract_saccades.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract saccades from samples using votes from selected methods. — extract_saccades","text":"","code":"# Single trial data(single_trial) saccades <- extract_saccades(single_trial$x, single_trial$y, 500)  # Multiple trials data(monocular_ten_trials) saccades <- extract_saccades(monocular_ten_trials$x,                              monocular_ten_trials$y,                               500,                              trial = monocular_ten_trials$trial)    # binocular saccades                              data(\"single_trial_binocular\")  saccades_b <- saccadr::extract_saccades(single_trial_binocular[, c('xL', 'xR')],                                          single_trial_binocular[, c('yL', 'yR')],                                          sample_rate = 1000)                                            # cyclopean saccades from binocular data saccades_c <- saccadr::extract_saccades(single_trial_binocular[, c('xL', 'xR')],                                         single_trial_binocular[, c('yL', 'yR')],                                         sample_rate = 1000,                                         binocular = \"cyclopean\")   # monocular saccades from binocular data saccades_m <- saccadr::extract_saccades(single_trial_binocular[, c('xL', 'xR')],                                        single_trial_binocular[, c('yL', 'yR')],                                        sample_rate = 1000,                                        binocular = \"monocular\")                               # Using a single method saccades <- extract_saccades(single_trial$x, single_trial$y, 500, methods = method_om)  # Using two methods saccades <- extract_saccades(single_trial$x,                              single_trial$y,                              500,                              methods = list(method_ek, method_om))  #  Alternative velocity computation method saccades <- extract_saccades(single_trial$x, single_trial$y, 500, velocity_function = diff_nh) #> Warning: no non-missing arguments to max; returning -Inf  # A strict unanimous decision threshold saccades <- extract_saccades(single_trial$x, single_trial$y, 500, vote_threshold = 3)  # A slacker criterion that at least one of the three methods must label sample as a saccade saccades <- extract_saccades(single_trial$x, single_trial$y, 500, vote_threshold = 1)  # Only longish saccades are extracted saccades <- extract_saccades(single_trial$x, single_trial$y, 500, minimal_duration_ms = 20)"},{"path":"https://alexander-pastukhov.github.io/saccadr/reference/filter_via_savitzky_golay.html","id":null,"dir":"Reference","previous_headings":"","what":"Smooths signal using Savitzky-Golay and then shifts the filtered signal back — filter_via_savitzky_golay","title":"Smooths signal using Savitzky-Golay and then shifts the filtered signal back — filter_via_savitzky_golay","text":"Smooths signal using Savitzky-Golay shifts filtered signal back","code":""},{"path":"https://alexander-pastukhov.github.io/saccadr/reference/filter_via_savitzky_golay.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Smooths signal using Savitzky-Golay and then shifts the filtered signal back — filter_via_savitzky_golay","text":"","code":"filter_via_savitzky_golay(x, sg_order)"},{"path":"https://alexander-pastukhov.github.io/saccadr/reference/filter_via_savitzky_golay.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Smooths signal using Savitzky-Golay and then shifts the filtered signal back — filter_via_savitzky_golay","text":"x vector float sgOrder integer, order filter","code":""},{"path":"https://alexander-pastukhov.github.io/saccadr/reference/filter_via_savitzky_golay.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Smooths signal using Savitzky-Golay and then shifts the filtered signal back — filter_via_savitzky_golay","text":"vector float","code":""},{"path":"https://alexander-pastukhov.github.io/saccadr/reference/filter_via_savitzky_golay.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Smooths signal using Savitzky-Golay and then shifts the filtered signal back — filter_via_savitzky_golay","text":"","code":"filter_via_savitzky_golay(rnorm(1000), 2) #>    [1]            NA            NA            NA            NA            NA #>    [6] -4.519245e-02  2.275038e-01  1.449124e-01 -5.088109e-01 -6.325251e-01 #>   [11] -9.472050e-01  3.291129e-01  8.489941e-01  1.335770e-01 -5.243633e-02 #>   [16] -3.324077e-03 -6.276706e-02 -3.440749e-01  9.583671e-02  7.279228e-01 #>   [21]  1.164970e+00  5.587018e-01  4.604829e-01  8.215270e-01  5.593151e-01 #>   [26] -7.206853e-01 -1.654626e+00 -1.560228e+00 -1.243814e+00 -1.007595e+00 #>   [31] -7.970431e-01 -1.269468e+00 -8.024975e-01 -1.119336e+00 -6.276332e-01 #>   [36] -8.480009e-01 -5.284368e-01 -5.891978e-01 -2.780155e-01  1.930981e-01 #>   [41]  7.154368e-01  1.084589e+00  1.510662e+00  9.129939e-01  8.488315e-01 #>   [46]  2.564873e-01  4.647089e-01 -3.580592e-01  3.223286e-01  4.535143e-01 #>   [51]  6.778053e-01  3.217169e-01 -5.260933e-01 -4.892588e-01 -3.190092e-01 #>   [56]  5.602936e-01  2.849005e-01  5.718133e-01  3.291037e-01  3.919436e-02 #>   [61] -3.467206e-01 -2.837684e-01  3.786809e-01  3.310880e-01 -1.407426e-02 #>   [66] -1.111084e+00 -5.639277e-01  4.441460e-01  1.091362e+00  4.552157e-01 #>   [71] -2.606891e-02 -1.170449e-01 -4.877744e-01 -1.257392e+00 -1.638104e+00 #>   [76] -6.458423e-01  1.138614e-01 -4.743241e-01 -1.054808e+00 -1.203056e+00 #>   [81] -8.708937e-01 -3.710475e-01  2.560091e-01  2.819649e-01  2.374919e-01 #>   [86] -5.440097e-01 -1.555296e-01 -3.305132e-02  5.408733e-01 -7.640421e-01 #>   [91]  2.059814e-01  1.896182e-01  2.260598e-01 -8.662999e-01  2.842455e-02 #>   [96] -3.603732e-02 -4.610676e-02  4.052265e-01  6.020229e-01  1.007542e-01 #>  [101]  2.694124e-02 -6.085683e-02  3.153422e-01  5.226238e-01  8.343789e-01 #>  [106] -2.849675e-01 -6.915930e-01 -5.180973e-01 -8.787440e-01  3.905115e-01 #>  [111]  5.782376e-01  5.827542e-01 -7.764408e-01 -1.476916e-01  6.371916e-01 #>  [116]  4.064291e-01 -7.061897e-02 -2.984556e-01  5.784930e-01  1.555448e-01 #>  [121]  1.449313e-01 -4.040183e-01  4.928954e-01  5.055368e-01  1.002530e+00 #>  [126]  9.882987e-02 -2.564502e-01  2.351331e-01  7.553095e-01  5.986120e-01 #>  [131]  1.979128e-01 -4.245086e-01 -1.594923e-01  3.583329e-01  7.297032e-01 #>  [136]  1.617573e-01 -2.122544e-01 -3.184804e-02  3.984384e-01  5.876164e-01 #>  [141]  1.494758e-01  5.558419e-01  8.401967e-01  9.185587e-01 -1.345152e-01 #>  [146]  3.013275e-01  3.198931e-01  5.913745e-01 -8.147481e-03 -1.695536e-01 #>  [151]  2.437467e-01  6.092154e-01  1.214211e+00  7.998090e-01  8.586857e-01 #>  [156]  2.619958e-01  1.019001e-01 -2.555733e-01  3.101516e-01  9.877482e-01 #>  [161]  1.553037e+00  5.907652e-01  4.823220e-01  3.652591e-01  1.272955e+00 #>  [166]  9.048887e-01  7.095872e-01 -3.592133e-01 -1.766187e-01  1.994210e-01 #>  [171] -9.915454e-03 -1.058841e+00 -7.536353e-01 -1.490723e-01  2.484993e-01 #>  [176] -4.637230e-01  2.381517e-02  4.281008e-01  8.314162e-01  7.728362e-01 #>  [181]  5.844272e-01 -5.687540e-01 -7.269409e-01 -5.850514e-01 -8.963104e-02 #>  [186] -8.546632e-02  1.740244e-01 -5.957550e-01 -7.996044e-01 -1.860893e-01 #>  [191]  5.306012e-01  5.467276e-01  3.289875e-01 -1.529865e-01  7.387465e-01 #>  [196]  5.434309e-01 -6.460222e-01 -1.580111e+00 -3.144809e-01 -1.116417e-01 #>  [201]  3.148339e-02 -6.952883e-01 -4.061039e-01  3.401176e-01  1.000029e+00 #>  [206] -5.453176e-01 -1.487630e+00 -8.320706e-01 -4.225775e-01  3.262777e-01 #>  [211]  1.375858e+00  1.988435e+00  9.897550e-01  3.953076e-02 -4.712659e-01 #>  [216] -6.710945e-01  4.595993e-01  4.980279e-01  1.607138e-01  3.162755e-02 #>  [221]  7.599538e-01  3.951586e-01  1.779914e-01  4.899588e-01  4.921987e-01 #>  [226]  8.512674e-01  7.804719e-01  3.212880e-01 -9.558761e-01 -1.027970e+00 #>  [231] -7.896443e-01  1.027939e-02  1.565871e-01 -1.321652e-01 -3.637405e-01 #>  [236] -5.456887e-01 -3.977192e-01 -1.241912e+00 -1.599653e+00 -1.225262e+00 #>  [241] -2.027807e-01  6.841745e-01  9.630147e-01  7.716888e-01  2.273186e-01 #>  [246] -5.838870e-01 -7.539554e-01 -9.712950e-01 -3.953475e-01 -7.957221e-01 #>  [251] -2.811559e-01 -7.796297e-01 -9.564981e-01 -1.260030e+00 -6.592303e-01 #>  [256] -1.997222e-01 -9.388163e-02 -5.275444e-01  2.543995e-01 -5.787868e-05 #>  [261] -2.747333e-01 -1.186508e+00  2.032831e-02 -5.950708e-01 -4.584538e-01 #>  [266] -5.157601e-02  1.637257e+00  7.230693e-01  1.104650e-01 -4.814591e-01 #>  [271] -3.476199e-01 -3.278806e-01  4.907571e-01  6.109408e-01  3.491992e-01 #>  [276] -4.037954e-01 -5.736482e-01 -5.036545e-01  3.484837e-02 -9.647950e-01 #>  [281] -6.877197e-01  3.183007e-01  5.192229e-01 -4.774236e-01 -7.994174e-01 #>  [286] -4.217746e-01  1.251953e-01  1.208470e-01 -8.673943e-02 -6.765106e-01 #>  [291]  3.097206e-01  9.301801e-01  8.533689e-01  1.975172e-01  4.025360e-01 #>  [296]  2.519920e-01  1.364534e-02 -4.108196e-01 -4.122898e-01  5.092514e-01 #>  [301]  9.911379e-01  9.756185e-01  7.281673e-01  5.592629e-01  4.991340e-01 #>  [306]  2.052497e-01  2.648343e-01 -7.945673e-01 -8.462487e-01 -7.725425e-01 #>  [311] -7.133700e-01 -1.028710e+00 -1.186868e+00 -7.352086e-01  8.958887e-02 #>  [316]  7.857993e-01  8.095742e-01  2.143786e-01  3.308605e-02 -9.610170e-02 #>  [321] -3.238047e-01  4.373500e-01  1.826086e-01  3.432477e-01  7.002616e-01 #>  [326]  4.511197e-01 -1.034281e+00 -7.377388e-01  1.020726e+00  9.021047e-01 #>  [331]  4.300129e-02 -8.496358e-01 -7.045234e-01 -8.771349e-01  7.411818e-02 #>  [336]  6.944920e-01  8.807378e-01  7.204894e-01  6.699436e-02  5.532435e-02 #>  [341] -9.070618e-02  3.640950e-01  2.774820e-01  9.412368e-01  1.137128e+00 #>  [346]  1.787630e+00  1.061034e+00  2.345016e-01 -1.063021e+00 -1.351954e-01 #>  [351] -5.640493e-01 -5.631323e-01 -4.064063e-01 -2.240370e-01 -5.738800e-01 #>  [356] -8.162179e-02  8.554749e-01  1.911513e-01 -3.798997e-02  3.489266e-01 #>  [361]  9.438329e-01  1.123192e+00  6.284137e-01 -2.143008e-01 -9.686359e-01 #>  [366] -6.099603e-01  3.199736e-02 -4.685008e-01 -1.593773e+00 -1.003970e+00 #>  [371] -4.582584e-01 -1.169481e+00 -1.561151e+00 -3.113140e-01  5.598728e-01 #>  [376]  1.299289e-01  1.016858e+00  7.298316e-01  1.253358e+00  1.189936e+00 #>  [381]  1.228809e+00  1.747262e-01 -1.404766e-02  5.008312e-01  3.856520e-01 #>  [386]  5.813034e-01  5.569675e-01  3.006243e-02 -4.125058e-01  1.642193e-01 #>  [391]  1.295796e-01  1.998582e-01 -5.163647e-01 -2.212503e-01 -4.006639e-01 #>  [396] -2.024756e-01 -4.608260e-02  3.833580e-01  1.030109e+00  7.991747e-01 #>  [401]  4.685286e-01 -1.039881e+00 -1.049323e+00 -5.655853e-01  6.340181e-01 #>  [406] -2.757280e-01  5.486364e-01  6.970366e-01  7.572650e-01 -5.407199e-01 #>  [411]  6.099924e-02 -4.424775e-01  1.165703e-01  4.907666e-01  1.121045e+00 #>  [416]  7.769843e-01  7.589372e-01  3.397185e-01 -4.308496e-01 -4.713382e-01 #>  [421] -5.446945e-01 -2.819067e-02 -3.124429e-01 -8.607116e-01 -4.395314e-01 #>  [426]  8.970530e-01  3.495339e-01  2.401698e-01  3.639210e-01  1.593058e+00 #>  [431] -3.474908e-01 -4.360110e-01 -4.523110e-01  1.016904e+00  2.428545e-01 #>  [436]  6.319721e-01 -3.082498e-01  7.336362e-02  9.835286e-01  1.743518e+00 #>  [441]  2.590031e-01 -5.387081e-01 -5.270482e-01 -7.305672e-01 -6.542794e-01 #>  [446]  2.256831e-01  8.445366e-01  4.332940e-01 -8.834340e-01 -1.227615e+00 #>  [451] -8.179321e-01  3.593151e-01  6.414967e-01  1.172965e+00  3.676024e-01 #>  [456]  9.825015e-01  8.307285e-01 -1.667405e-01 -8.458135e-01  3.450836e-02 #>  [461]  8.069741e-01  3.844780e-01  9.070481e-01  2.085408e-01  3.885640e-01 #>  [466]  6.995123e-01  1.483144e+00  7.210195e-01  9.413781e-01  6.350851e-01 #>  [471]  6.158017e-01  4.513662e-01  5.087963e-01 -1.487097e-01 -4.371999e-01 #>  [476] -1.172354e+00 -1.635490e+00 -5.029941e-01  9.062302e-01  3.740361e-01 #>  [481] -7.299661e-01 -2.057405e-01  1.349521e-01 -4.885885e-01 -1.431628e+00 #>  [486] -8.606462e-01 -1.094341e-02 -4.797824e-01 -1.136828e+00 -7.324944e-02 #>  [491]  1.119409e+00  6.784550e-01 -4.076127e-01  2.104172e-01 -2.261042e-01 #>  [496] -7.803192e-01 -1.752325e+00 -1.526118e+00 -1.307784e+00 -6.191343e-01 #>  [501] -3.227889e-01  8.918092e-01  7.786676e-01  2.451175e-02 -9.753484e-01 #>  [506]  6.117359e-02  3.339636e-01 -4.377407e-03 -8.364858e-02  3.277503e-01 #>  [511]  1.154663e-01 -5.686309e-01  2.045476e-01  3.232856e-01  6.048400e-02 #>  [516] -7.325509e-01 -5.255991e-01 -1.901828e-01  3.424556e-01  6.296948e-01 #>  [521]  9.909384e-01  1.600906e+00  9.038042e-01  5.789819e-01  1.117088e+00 #>  [526]  1.274211e+00  4.509384e-01 -7.854855e-01 -2.516536e-01  5.269032e-01 #>  [531]  7.720803e-01  1.510594e-01  5.352599e-01  1.176601e+00  1.302637e+00 #>  [536]  5.909119e-01 -6.114201e-01 -9.101998e-01  4.958075e-01  8.228751e-01 #>  [541]  9.484812e-02 -3.699154e-01  3.507663e-01  1.029890e+00  7.454777e-01 #>  [546]  9.592283e-01  2.803992e-01  1.106856e+00  1.093838e+00  8.237188e-01 #>  [551] -2.613690e-01  4.199232e-01  1.046036e+00  5.399394e-01 -1.191747e+00 #>  [556] -1.430971e+00 -2.132729e-01  6.642252e-01  6.744347e-01  1.025743e+00 #>  [561]  1.013931e+00 -3.128525e-01 -7.255164e-01  7.888485e-02  3.974966e-01 #>  [566] -9.751666e-01 -1.918342e+00 -8.557575e-01  4.804105e-01 -3.107778e-01 #>  [571] -7.873925e-01  4.237063e-01  1.305308e+00  1.131963e+00  5.091416e-01 #>  [576]  3.556851e-01 -5.564273e-01  1.474381e-01 -5.402666e-01 -2.162881e-01 #>  [581] -1.341013e-01  6.785971e-01  5.564980e-01  2.641321e-01 -4.125550e-02 #>  [586] -7.212471e-01  9.683566e-02 -6.725201e-02 -3.495742e-01 -4.536800e-01 #>  [591]  7.690738e-01  1.029792e+00  5.455299e-01 -1.461620e-01  1.933363e-02 #>  [596] -3.012055e-01 -1.094498e+00 -1.155737e+00 -6.478359e-01 -3.238229e-01 #>  [601] -1.175156e+00 -1.192986e+00 -3.882154e-01  4.245741e-01  5.252693e-01 #>  [606]  1.666922e-01  6.516408e-02 -3.311238e-01 -2.103446e-01 -3.575889e-01 #>  [611]  3.208494e-01  1.562276e-01  2.062927e-01 -8.163595e-01 -1.063884e+00 #>  [616] -1.052093e+00  3.482041e-01  8.074416e-01 -6.434002e-02 -1.932411e-01 #>  [621]  9.055266e-01  6.203993e-01  4.179745e-03  5.704489e-01  1.146425e+00 #>  [626]  1.361383e+00  4.910057e-01  6.086015e-01  7.863340e-01  1.305571e+00 #>  [631]  1.670280e-01 -7.195287e-01 -3.679848e-01 -2.999506e-02  5.242520e-01 #>  [636]  6.682036e-01  8.301742e-01  6.937113e-01  3.690648e-01  4.429965e-01 #>  [641] -7.255482e-01 -1.263690e+00 -1.247057e+00  8.343086e-01  8.925629e-01 #>  [646]  5.258766e-01 -5.232299e-01 -1.448401e+00 -2.001506e+00 -1.143882e+00 #>  [651]  3.232175e-01  3.046025e-01 -3.301944e-01 -9.873732e-01  3.883564e-02 #>  [656]  8.658320e-01  5.289866e-01 -2.205972e-01 -1.635741e-01 -5.667620e-01 #>  [661] -6.311743e-01  1.003680e-01 -5.569534e-01 -1.378455e+00 -9.734663e-01 #>  [666]  6.779738e-01  6.754540e-01  1.043973e+00  1.383711e+00  1.117634e+00 #>  [671]  6.421312e-01  2.033166e-01  3.428967e-01  5.275100e-01  5.683228e-01 #>  [676]  3.254647e-01 -9.215634e-01 -5.053073e-01  4.861604e-01  1.135778e+00 #>  [681]  3.591367e-01 -4.773796e-02 -5.305719e-01 -4.803031e-01 -2.843369e-01 #>  [686] -1.924448e-02 -4.129243e-01 -3.679213e-01 -4.212851e-01 -4.960716e-01 #>  [691] -3.356945e-01 -6.994619e-01 -4.288773e-02  7.881899e-01  1.169616e+00 #>  [696] -2.965239e-01 -5.816334e-01  3.565223e-01  1.254664e+00 -1.217383e-01 #>  [701] -5.161121e-01 -5.910524e-01 -6.386628e-03 -3.991819e-01 -4.176513e-02 #>  [706] -4.539670e-01 -5.800815e-01 -1.242555e-01  1.049065e+00  8.462353e-01 #>  [711] -2.530400e-01 -6.374796e-01 -4.366472e-01 -9.871572e-01 -1.795293e-01 #>  [716]  4.664275e-01  8.502147e-01  5.708812e-01  1.161242e-01 -5.103989e-01 #>  [721] -1.001113e+00  2.645115e-01  4.337679e-01  9.730406e-01  3.324341e-01 #>  [726]  1.218052e+00  1.070747e+00 -2.984526e-01 -1.400803e+00  3.896511e-01 #>  [731]  2.232610e+00  1.461444e+00  5.715018e-01  4.630914e-01  5.911089e-01 #>  [736]  6.378137e-01  1.329439e+00  1.721028e+00  5.423806e-01 -9.857298e-01 #>  [741] -7.487592e-01  2.497296e-01  1.057917e+00  4.266816e-01  2.867661e-01 #>  [746] -3.078488e-01 -1.502932e-01  3.806039e-01  4.279967e-01  3.535193e-01 #>  [751]  3.264832e-01  1.072851e+00  2.720478e-01 -5.777863e-01  2.487186e-01 #>  [756]  3.681743e-01 -3.855022e-01 -3.628843e-01  8.088668e-01  5.121557e-01 #>  [761] -2.605721e-01 -6.198824e-01 -1.179794e+00 -3.275609e-01  2.290641e-01 #>  [766]  1.070096e+00  4.149615e-01  2.665276e-01 -2.394054e-01  2.245687e-01 #>  [771]  3.907059e-02 -2.072825e-01 -1.146746e-01 -8.597815e-01 -9.474801e-01 #>  [776] -1.661917e-01  1.146696e+00  4.651577e-01 -1.145604e-01 -5.088198e-01 #>  [781] -9.419680e-01 -2.029699e-01  1.118178e+00  1.040097e+00 -5.254259e-01 #>  [786] -4.654011e-01 -2.805094e-01 -6.888276e-01 -7.048558e-01  5.685201e-01 #>  [791]  1.131554e+00  1.465488e+00  7.902968e-01 -6.307414e-01 -1.565056e+00 #>  [796] -5.867608e-01  4.423780e-01 -3.169689e-01 -7.768885e-01 -6.920493e-01 #>  [801]  3.633564e-01  1.059798e+00  1.640295e+00  5.734717e-01 -8.414812e-01 #>  [806] -1.477089e+00 -8.103268e-01  5.175849e-01  8.657736e-01  2.688911e-01 #>  [811]  3.862835e-01  1.592682e+00  1.427605e+00  9.994815e-02 -5.841003e-02 #>  [816] -1.676727e-01  2.993853e-01 -4.926914e-01 -1.151085e-01 -7.159038e-01 #>  [821]  1.687203e-02 -7.292898e-01 -4.232704e-01 -3.029334e-01 -4.406388e-01 #>  [826] -1.018976e-01  4.192874e-01  9.644449e-01  4.248719e-01  3.107945e-01 #>  [831] -4.948507e-02 -1.374701e-01 -1.931762e-01 -3.245226e-01 -8.644159e-01 #>  [836] -6.099869e-01  3.034896e-02 -1.260763e-01 -1.229567e+00 -1.382229e+00 #>  [841] -9.457002e-01 -4.461467e-01 -4.179145e-01  7.038182e-01  6.909649e-01 #>  [846]  5.838701e-01 -2.229943e-01 -3.567817e-01 -1.321331e+00 -1.674783e+00 #>  [851] -1.090310e+00 -5.509585e-01 -1.654407e-01 -2.121528e-01 -1.656778e-01 #>  [856] -8.898633e-01 -8.952306e-01 -7.792983e-01  7.099641e-02  1.051269e+00 #>  [861]  1.072109e+00 -2.789385e-01 -7.931843e-01  8.004695e-01  2.630488e-01 #>  [866] -6.089448e-01  1.533380e-01  6.614071e-01 -2.567821e-01 -3.806536e-01 #>  [871]  1.142266e+00  7.777301e-01 -2.797777e-01 -1.199345e+00 -8.869841e-01 #>  [876]  8.200047e-01  5.150009e-01  7.108535e-02 -1.273354e-01  5.991699e-01 #>  [881] -3.873950e-01 -6.791832e-01 -4.844690e-01 -3.574425e-01 -3.016714e-01 #>  [886] -2.292936e-01 -6.315545e-01 -7.925052e-02  1.016765e+00  7.999697e-01 #>  [891] -2.270630e-01 -7.365265e-01 -7.203840e-01 -5.477024e-01 -4.494660e-01 #>  [896] -3.249769e-01 -4.970504e-02  5.470071e-01 -5.742942e-01 -1.007935e+00 #>  [901] -1.646082e-01  5.767690e-01  4.594438e-01  7.281187e-01  1.202328e+00 #>  [906]  8.795708e-01  1.231584e-01 -5.711215e-01 -8.711319e-01 -1.613095e+00 #>  [911] -1.593233e+00 -4.822075e-01  3.478828e-01 -2.569680e-01 -6.803703e-01 #>  [916] -9.558615e-01 -1.282933e+00 -6.835257e-01 -1.017791e+00 -8.353337e-01 #>  [921] -8.058553e-01  7.159686e-01  1.005257e+00  4.349626e-01 -1.052634e+00 #>  [926] -1.383321e+00 -4.380175e-01  9.573650e-01  1.431347e+00  1.059835e+00 #>  [931] -4.758162e-02  1.277310e-02 -2.098916e-02  4.172042e-01  4.596801e-01 #>  [936] -8.574871e-02  1.903569e-02  4.598683e-01  9.021980e-01  1.752170e+00 #>  [941]  1.536120e+00  5.202179e-01  6.939402e-02  7.313564e-02 -8.451120e-01 #>  [946] -1.089398e+00  4.522857e-01  8.931797e-01  1.234837e+00  3.294219e-01 #>  [951]  4.032790e-01  3.770147e-01  1.633352e+00  1.339049e+00  6.422366e-01 #>  [956] -1.144471e-02 -5.954942e-01 -2.462703e-01 -6.916488e-01 -1.266970e+00 #>  [961] -9.685629e-01  3.716557e-01  1.226451e+00  1.118117e+00  1.268052e+00 #>  [966]  1.336953e+00  1.329560e+00  1.211605e+00 -5.271800e-02 -9.201702e-01 #>  [971] -5.798832e-01  6.642643e-01  2.094991e-01 -7.929577e-01 -6.285023e-01 #>  [976]  1.243150e-01  7.168673e-02 -2.144917e-01 -3.975646e-01 -9.331826e-01 #>  [981] -1.068597e+00 -2.883498e-02  3.287112e-01 -8.466635e-02 -2.752382e-01 #>  [986] -3.933931e-01 -6.391750e-02  2.884350e-01  8.141868e-01 -7.065891e-01 #>  [991] -1.602602e-01 -4.078046e-02  1.012153e+00  4.615623e-02  1.219215e+00 #>  [996]  3.704220e-01 -2.259815e-01 -1.283051e+00 -3.003204e-01 -5.108010e-01"},{"path":"https://alexander-pastukhov.github.io/saccadr/reference/input_to_matrix.html","id":null,"dir":"Reference","previous_headings":"","what":"Converts inputs to matrix — input_to_matrix","title":"Converts inputs to matrix — input_to_matrix","text":"Converts inputs (vector, matrix, data.frame/tibble)  matrix preserving number columns","code":""},{"path":"https://alexander-pastukhov.github.io/saccadr/reference/input_to_matrix.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Converts inputs to matrix — input_to_matrix","text":"","code":"input_to_matrix(x)"},{"path":"https://alexander-pastukhov.github.io/saccadr/reference/input_to_matrix.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Converts inputs to matrix — input_to_matrix","text":"x vector, matrix, data.frame/tibble","code":""},{"path":"https://alexander-pastukhov.github.io/saccadr/reference/input_to_matrix.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Converts inputs to matrix — input_to_matrix","text":"matrix","code":""},{"path":"https://alexander-pastukhov.github.io/saccadr/reference/input_to_matrix.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Converts inputs to matrix — input_to_matrix","text":"","code":"input_to_matrix(1:5) #>      [,1] #> [1,]    1 #> [2,]    2 #> [3,]    3 #> [4,]    4 #> [5,]    5"},{"path":"https://alexander-pastukhov.github.io/saccadr/reference/method_ek.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract saccades using an algorithm proposed by Engbert and Kliegl (2003) doi:10.1016/S0042-6989(03)00084-1 — method_ek","title":"Extract saccades using an algorithm proposed by Engbert and Kliegl (2003) doi:10.1016/S0042-6989(03)00084-1 — method_ek","text":"Extract saccades using algorithm proposed Engbert Kliegl (2003) doi:10.1016/S0042-6989(03)00084-1","code":""},{"path":"https://alexander-pastukhov.github.io/saccadr/reference/method_ek.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract saccades using an algorithm proposed by Engbert and Kliegl (2003) doi:10.1016/S0042-6989(03)00084-1 — method_ek","text":"","code":"method_ek(x, y, vel, acc, sample_rate, trial, options)"},{"path":"https://alexander-pastukhov.github.io/saccadr/reference/method_ek.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract saccades using an algorithm proposed by Engbert and Kliegl (2003) doi:10.1016/S0042-6989(03)00084-1 — method_ek","text":"x Gaze x coordinate, _arbitrary units_ threshold velocity computed units standard deviation. y Gaze x coordinate, _arbitrary units_ threshold velocity computed units standard deviation. vel Velocity data.frame columns x, y, amp. acc Acceleration data.frame columns x, y, amp. sample_rate Sample rate Hz. trial Trial id, trial borders respected computing velocity saccades. options Named list method options. See details information.","code":""},{"path":"https://alexander-pastukhov.github.io/saccadr/reference/method_ek.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract saccades using an algorithm proposed by Engbert and Kliegl (2003) doi:10.1016/S0042-6989(03)00084-1 — method_ek","text":"logical vector marking samples belong saccades","code":""},{"path":"https://alexander-pastukhov.github.io/saccadr/reference/method_ek.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Extract saccades using an algorithm proposed by Engbert and Kliegl (2003) doi:10.1016/S0042-6989(03)00084-1 — method_ek","text":"Method options, please refer Engbert Kliegl (2003) details parameters rationale default values. ek_velocity_threshold Velocity threshold saccade detection standard deviations. Defaults 6. ek_sd_fun Function used compute standard deviation velocities. Defaults sd_via_median_estimator, per formula #2 Engbert Kliegl (2003). Can replaced mad, sd, etc. ek_minimal_duration_ms Minimal duration saccade milliseconds. Defaults 12. ek_minimal_separation_ms minimal required time gap saccades. Defaults 12.","code":""},{"path":[]},{"path":"https://alexander-pastukhov.github.io/saccadr/reference/method_ek.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract saccades using an algorithm proposed by Engbert and Kliegl (2003) doi:10.1016/S0042-6989(03)00084-1 — method_ek","text":"","code":"# Do not run this function directly, use extract_saccades() instead"},{"path":"https://alexander-pastukhov.github.io/saccadr/reference/method_nh.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract saccades using an algorithm proposed by Nyström and Holmqvist (2010) doi:10.3758/BRM.42.1.188\r\n. — method_nh","title":"Extract saccades using an algorithm proposed by Nyström and Holmqvist (2010) doi:10.3758/BRM.42.1.188\r\n. — method_nh","text":"Extract saccades using algorithm proposed Nyström Holmqvist (2010) doi:10.3758/BRM.42.1.188 .","code":""},{"path":"https://alexander-pastukhov.github.io/saccadr/reference/method_nh.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract saccades using an algorithm proposed by Nyström and Holmqvist (2010) doi:10.3758/BRM.42.1.188\r\n. — method_nh","text":"","code":"method_nh(x, y, vel, acc, sample_rate, trial, options)"},{"path":"https://alexander-pastukhov.github.io/saccadr/reference/method_nh.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract saccades using an algorithm proposed by Nyström and Holmqvist (2010) doi:10.3758/BRM.42.1.188\r\n. — method_nh","text":"x Gaze x coordinate, _arbitrary units_ threshold velocity computed units standard deviation. y Gaze y coordinate, _arbitrary units_ threshold velocity computed units standard deviation. vel Velocity data.frame columns x, y, amp. acc Acceleration data.frame columns x, y, amp. sample_rate Sample rate Hz. trial Trial id, trial borders respected computing velocity saccades. options Named list method options. See details  information.","code":""},{"path":"https://alexander-pastukhov.github.io/saccadr/reference/method_nh.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract saccades using an algorithm proposed by Nyström and Holmqvist (2010) doi:10.3758/BRM.42.1.188\r\n. — method_nh","text":"logical vector marking samples belong saccades","code":""},{"path":"https://alexander-pastukhov.github.io/saccadr/reference/method_nh.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Extract saccades using an algorithm proposed by Nyström and Holmqvist (2010) doi:10.3758/BRM.42.1.188\r\n. — method_nh","text":"Method options, please refer Nyström Holmqvist (2010) details parameters rationale default values. nh_sg_filter_order Order Savitzky-Golay filter. Defaults 2. nh_max_velocity Maximal physiologically plausible velocity °/s. Defaults 1000. nh_max_acceleration Maximal physiologically plausible acceleration °/s². Defaults 100000. nh_initial_velocity_threshold Initial velocity threshold °/s. Defaults 100.","code":""},{"path":[]},{"path":"https://alexander-pastukhov.github.io/saccadr/reference/method_nh.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract saccades using an algorithm proposed by Nyström and Holmqvist (2010) doi:10.3758/BRM.42.1.188\r\n. — method_nh","text":"","code":"# Do not run this function directly, use extract_saccades() instead"},{"path":"https://alexander-pastukhov.github.io/saccadr/reference/method_om.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract saccades using an algorithm proposed by Otero-Millan et al. (2014) doi:10.1167/14.2.18. — method_om","title":"Extract saccades using an algorithm proposed by Otero-Millan et al. (2014) doi:10.1167/14.2.18. — method_om","text":"Extract saccades using algorithm proposed Otero-Millan et al. (2014) doi:10.1167/14.2.18.","code":""},{"path":"https://alexander-pastukhov.github.io/saccadr/reference/method_om.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract saccades using an algorithm proposed by Otero-Millan et al. (2014) doi:10.1167/14.2.18. — method_om","text":"","code":"method_om(x, y, vel, acc, sample_rate, trial, options)"},{"path":"https://alexander-pastukhov.github.io/saccadr/reference/method_om.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract saccades using an algorithm proposed by Otero-Millan et al. (2014) doi:10.1167/14.2.18. — method_om","text":"x Gaze x coordinate, _arbitrary units_ threshold velocity computed units standard deviation. y Gaze x coordinate, _arbitrary units_ threshold velocity computed units standard deviation. vel Velocity data.frame columns x, y, amp. acc Acceleration data.frame columns x, y, amp. sample_rate Sample rate Hz. trial Trial id, trial borders respected computing velocity saccades. options Named list method options. See details information.","code":""},{"path":"https://alexander-pastukhov.github.io/saccadr/reference/method_om.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract saccades using an algorithm proposed by Otero-Millan et al. (2014) doi:10.1167/14.2.18. — method_om","text":"logical vector marking samples belong saccades","code":""},{"path":"https://alexander-pastukhov.github.io/saccadr/reference/method_om.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Extract saccades using an algorithm proposed by Otero-Millan et al. (2014) doi:10.1167/14.2.18. — method_om","text":"Method options, please refer Otero-Millan et al. (2014) details parameters rationale default values. om_minimal_inter_peak_time_ms Minimal inter-peak interval milliseconds. Defaults 30. om_maximal_peaks_per_second Maximal allowed number peaks per second. Defaults 5. om_velocity_threshold_deg_per_sec Threshold saccade velocity °/s.  Defaults 3. om_pca_variance_threshold Minimal variance explained retained rotated components. Defaults 0.05.","code":""},{"path":[]},{"path":"https://alexander-pastukhov.github.io/saccadr/reference/method_om.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract saccades using an algorithm proposed by Otero-Millan et al. (2014) doi:10.1167/14.2.18. — method_om","text":"","code":"# Do not run this function directly, use extract_saccades() instead"},{"path":"https://alexander-pastukhov.github.io/saccadr/reference/monocular_ten_trials.html","id":null,"dir":"Reference","previous_headings":"","what":"A monocular multi-trial recording — monocular_ten_trials","title":"A monocular multi-trial recording — monocular_ten_trials","text":"monocular recording, 10 trials, sampling rate 500 Hz.","code":""},{"path":"https://alexander-pastukhov.github.io/saccadr/reference/monocular_ten_trials.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"A monocular multi-trial recording — monocular_ten_trials","text":"","code":"monocular_ten_trials"},{"path":"https://alexander-pastukhov.github.io/saccadr/reference/monocular_ten_trials.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"A monocular multi-trial recording — monocular_ten_trials","text":"data frame 14353 rows 4 variables: trial Trial index. x X coordinate degrees visual angle. y Y coordinate degrees visual angle. time Sample time milliseconds.","code":""},{"path":"https://alexander-pastukhov.github.io/saccadr/reference/option_or_default.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract value for a named list or use default if key is missing — option_or_default","title":"Extract value for a named list or use default if key is missing — option_or_default","text":"Extract value named list use default key missing","code":""},{"path":"https://alexander-pastukhov.github.io/saccadr/reference/option_or_default.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract value for a named list or use default if key is missing — option_or_default","text":"","code":"option_or_default(options, key, default)"},{"path":"https://alexander-pastukhov.github.io/saccadr/reference/option_or_default.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract value for a named list or use default if key is missing — option_or_default","text":"options Named list key String key default Default value returned, key missing.","code":""},{"path":"https://alexander-pastukhov.github.io/saccadr/reference/option_or_default.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract value for a named list or use default if key is missing — option_or_default","text":"Value list default value","code":""},{"path":"https://alexander-pastukhov.github.io/saccadr/reference/option_or_default.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract value for a named list or use default if key is missing — option_or_default","text":"","code":"option_or_default(list(\"A\" = 25), \"A\", 20) #> [1] 25 option_or_default(list(\"A\" = 25), \"B\", 20) #> [1] 20"},{"path":"https://alexander-pastukhov.github.io/saccadr/reference/pipe.html","id":null,"dir":"Reference","previous_headings":"","what":"Pipe operator — %>%","title":"Pipe operator — %>%","text":"See magrittr::%>% details.","code":""},{"path":"https://alexander-pastukhov.github.io/saccadr/reference/pipe.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pipe operator — %>%","text":"","code":"lhs %>% rhs"},{"path":"https://alexander-pastukhov.github.io/saccadr/reference/pipe.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Pipe operator — %>%","text":"lhs value magrittr placeholder. rhs function call using magrittr semantics.","code":""},{"path":"https://alexander-pastukhov.github.io/saccadr/reference/pipe.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Pipe operator — %>%","text":"result calling `rhs(lhs)`.","code":""},{"path":"https://alexander-pastukhov.github.io/saccadr/reference/saccadr.html","id":null,"dir":"Reference","previous_headings":"","what":"saccadr — saccadr","title":"saccadr — saccadr","text":"Extract (Micro)Saccades Gaze Samples.","code":""},{"path":"https://alexander-pastukhov.github.io/saccadr/reference/sd_via_median_estimator.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute standard deviation via median estimator. — sd_via_median_estimator","title":"Compute standard deviation via median estimator. — sd_via_median_estimator","text":"Compute standard deviation via median estimator. Please refer formula #2 Engbert & Kliegl (2003). Falls back mean estimator, computed standard deviation smaller .Machine$double.eps. Raises error results using mean estimator still smaller .Machine$double.eps.","code":""},{"path":"https://alexander-pastukhov.github.io/saccadr/reference/sd_via_median_estimator.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute standard deviation via median estimator. — sd_via_median_estimator","text":"","code":"sd_via_median_estimator(x, na.rm = FALSE)"},{"path":"https://alexander-pastukhov.github.io/saccadr/reference/sd_via_median_estimator.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute standard deviation via median estimator. — sd_via_median_estimator","text":"x Numeric values na.rm Whether exclude NA values, defaults FALSE.","code":""},{"path":"https://alexander-pastukhov.github.io/saccadr/reference/sd_via_median_estimator.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute standard deviation via median estimator. — sd_via_median_estimator","text":"float","code":""},{"path":"https://alexander-pastukhov.github.io/saccadr/reference/sd_via_median_estimator.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compute standard deviation via median estimator. — sd_via_median_estimator","text":"","code":"sd_via_median_estimator(rnorm(100)) #> [1] 0.7531787"},{"path":"https://alexander-pastukhov.github.io/saccadr/reference/single_trial.html","id":null,"dir":"Reference","previous_headings":"","what":"A single trial monocular samples recorded at 500 Hz. — single_trial","title":"A single trial monocular samples recorded at 500 Hz. — single_trial","text":"single trial monocular samples recorded 500 Hz.","code":""},{"path":"https://alexander-pastukhov.github.io/saccadr/reference/single_trial.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"A single trial monocular samples recorded at 500 Hz. — single_trial","text":"","code":"single_trial"},{"path":"https://alexander-pastukhov.github.io/saccadr/reference/single_trial.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"A single trial monocular samples recorded at 500 Hz. — single_trial","text":"data frame 1006 rows 2 variables: x X coordinate degrees visual angle. y Y coordinate degrees visual angle.","code":""},{"path":"https://alexander-pastukhov.github.io/saccadr/reference/single_trial_binocular.html","id":null,"dir":"Reference","previous_headings":"","what":"A single trial binocular recording. — single_trial_binocular","title":"A single trial binocular recording. — single_trial_binocular","text":"single trial binocular recording sampled 1000 Hz.","code":""},{"path":"https://alexander-pastukhov.github.io/saccadr/reference/single_trial_binocular.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"A single trial binocular recording. — single_trial_binocular","text":"","code":"single_trial_binocular"},{"path":"https://alexander-pastukhov.github.io/saccadr/reference/single_trial_binocular.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"A single trial binocular recording. — single_trial_binocular","text":"data frame 2000 rows 6 variables: trial Trial index. time_rel Sample time milliseconds relative trial start. xL X coordinate left eye degrees visual angle. xR X coordinate right eye degrees visual angle. yL Y coordinate left eye degrees visual angle. yR Y coordinate right eye degrees visual angle.","code":""}]
