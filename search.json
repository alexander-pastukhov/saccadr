[{"path":"https://alexander-pastukhov.github.io/saccadr/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"GNU General Public License","title":"GNU General Public License","text":"Version 3, 29 June 2007Copyright © 2007 Free Software Foundation, Inc. <http://fsf.org/> Everyone permitted copy distribute verbatim copies license document, changing allowed.","code":""},{"path":"https://alexander-pastukhov.github.io/saccadr/LICENSE.html","id":"preamble","dir":"","previous_headings":"","what":"Preamble","title":"GNU General Public License","text":"GNU General Public License free, copyleft license software kinds works. licenses software practical works designed take away freedom share change works. contrast, GNU General Public License intended guarantee freedom share change versions program–make sure remains free software users. , Free Software Foundation, use GNU General Public License software; applies also work released way authors. can apply programs, . speak free software, referring freedom, price. General Public Licenses designed make sure freedom distribute copies free software (charge wish), receive source code can get want , can change software use pieces new free programs, know can things. protect rights, need prevent others denying rights asking surrender rights. Therefore, certain responsibilities distribute copies software, modify : responsibilities respect freedom others. example, distribute copies program, whether gratis fee, must pass recipients freedoms received. must make sure , , receive can get source code. must show terms know rights. Developers use GNU GPL protect rights two steps: (1) assert copyright software, (2) offer License giving legal permission copy, distribute /modify . developers’ authors’ protection, GPL clearly explains warranty free software. users’ authors’ sake, GPL requires modified versions marked changed, problems attributed erroneously authors previous versions. devices designed deny users access install run modified versions software inside , although manufacturer can . fundamentally incompatible aim protecting users’ freedom change software. systematic pattern abuse occurs area products individuals use, precisely unacceptable. Therefore, designed version GPL prohibit practice products. problems arise substantially domains, stand ready extend provision domains future versions GPL, needed protect freedom users. Finally, every program threatened constantly software patents. States allow patents restrict development use software general-purpose computers, , wish avoid special danger patents applied free program make effectively proprietary. prevent , GPL assures patents used render program non-free. precise terms conditions copying, distribution modification follow.","code":""},{"path":[]},{"path":"https://alexander-pastukhov.github.io/saccadr/LICENSE.html","id":"0-definitions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"0. Definitions","title":"GNU General Public License","text":"“License” refers version 3 GNU General Public License. “Copyright” also means copyright-like laws apply kinds works, semiconductor masks. “Program” refers copyrightable work licensed License. licensee addressed “”. “Licensees” “recipients” may individuals organizations. “modify” work means copy adapt part work fashion requiring copyright permission, making exact copy. resulting work called “modified version” earlier work work “based ” earlier work. “covered work” means either unmodified Program work based Program. “propagate” work means anything , without permission, make directly secondarily liable infringement applicable copyright law, except executing computer modifying private copy. Propagation includes copying, distribution (without modification), making available public, countries activities well. “convey” work means kind propagation enables parties make receive copies. Mere interaction user computer network, transfer copy, conveying. interactive user interface displays “Appropriate Legal Notices” extent includes convenient prominently visible feature (1) displays appropriate copyright notice, (2) tells user warranty work (except extent warranties provided), licensees may convey work License, view copy License. interface presents list user commands options, menu, prominent item list meets criterion.","code":""},{"path":"https://alexander-pastukhov.github.io/saccadr/LICENSE.html","id":"1-source-code","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"1. Source Code","title":"GNU General Public License","text":"“source code” work means preferred form work making modifications . “Object code” means non-source form work. “Standard Interface” means interface either official standard defined recognized standards body, , case interfaces specified particular programming language, one widely used among developers working language. “System Libraries” executable work include anything, work whole, () included normal form packaging Major Component, part Major Component, (b) serves enable use work Major Component, implement Standard Interface implementation available public source code form. “Major Component”, context, means major essential component (kernel, window system, ) specific operating system () executable work runs, compiler used produce work, object code interpreter used run . “Corresponding Source” work object code form means source code needed generate, install, (executable work) run object code modify work, including scripts control activities. However, include work’s System Libraries, general-purpose tools generally available free programs used unmodified performing activities part work. example, Corresponding Source includes interface definition files associated source files work, source code shared libraries dynamically linked subprograms work specifically designed require, intimate data communication control flow subprograms parts work. Corresponding Source need include anything users can regenerate automatically parts Corresponding Source. Corresponding Source work source code form work.","code":""},{"path":"https://alexander-pastukhov.github.io/saccadr/LICENSE.html","id":"2-basic-permissions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"2. Basic Permissions","title":"GNU General Public License","text":"rights granted License granted term copyright Program, irrevocable provided stated conditions met. License explicitly affirms unlimited permission run unmodified Program. output running covered work covered License output, given content, constitutes covered work. License acknowledges rights fair use equivalent, provided copyright law. may make, run propagate covered works convey, without conditions long license otherwise remains force. may convey covered works others sole purpose make modifications exclusively , provide facilities running works, provided comply terms License conveying material control copyright. thus making running covered works must exclusively behalf, direction control, terms prohibit making copies copyrighted material outside relationship . Conveying circumstances permitted solely conditions stated . Sublicensing allowed; section 10 makes unnecessary.","code":""},{"path":"https://alexander-pastukhov.github.io/saccadr/LICENSE.html","id":"3-protecting-users-legal-rights-from-anti-circumvention-law","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"3. Protecting Users’ Legal Rights From Anti-Circumvention Law","title":"GNU General Public License","text":"covered work shall deemed part effective technological measure applicable law fulfilling obligations article 11 WIPO copyright treaty adopted 20 December 1996, similar laws prohibiting restricting circumvention measures. convey covered work, waive legal power forbid circumvention technological measures extent circumvention effected exercising rights License respect covered work, disclaim intention limit operation modification work means enforcing, work’s users, third parties’ legal rights forbid circumvention technological measures.","code":""},{"path":"https://alexander-pastukhov.github.io/saccadr/LICENSE.html","id":"4-conveying-verbatim-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"4. Conveying Verbatim Copies","title":"GNU General Public License","text":"may convey verbatim copies Program’s source code receive , medium, provided conspicuously appropriately publish copy appropriate copyright notice; keep intact notices stating License non-permissive terms added accord section 7 apply code; keep intact notices absence warranty; give recipients copy License along Program. may charge price price copy convey, may offer support warranty protection fee.","code":""},{"path":"https://alexander-pastukhov.github.io/saccadr/LICENSE.html","id":"5-conveying-modified-source-versions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"5. Conveying Modified Source Versions","title":"GNU General Public License","text":"may convey work based Program, modifications produce Program, form source code terms section 4, provided also meet conditions: ) work must carry prominent notices stating modified , giving relevant date. b) work must carry prominent notices stating released License conditions added section 7. requirement modifies requirement section 4 “keep intact notices”. c) must license entire work, whole, License anyone comes possession copy. License therefore apply, along applicable section 7 additional terms, whole work, parts, regardless packaged. License gives permission license work way, invalidate permission separately received . d) work interactive user interfaces, must display Appropriate Legal Notices; however, Program interactive interfaces display Appropriate Legal Notices, work need make . compilation covered work separate independent works, nature extensions covered work, combined form larger program, volume storage distribution medium, called “aggregate” compilation resulting copyright used limit access legal rights compilation’s users beyond individual works permit. Inclusion covered work aggregate cause License apply parts aggregate.","code":""},{"path":"https://alexander-pastukhov.github.io/saccadr/LICENSE.html","id":"6-conveying-non-source-forms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"6. Conveying Non-Source Forms","title":"GNU General Public License","text":"may convey covered work object code form terms sections 4 5, provided also convey machine-readable Corresponding Source terms License, one ways: ) Convey object code , embodied , physical product (including physical distribution medium), accompanied Corresponding Source fixed durable physical medium customarily used software interchange. b) Convey object code , embodied , physical product (including physical distribution medium), accompanied written offer, valid least three years valid long offer spare parts customer support product model, give anyone possesses object code either (1) copy Corresponding Source software product covered License, durable physical medium customarily used software interchange, price reasonable cost physically performing conveying source, (2) access copy Corresponding Source network server charge. c) Convey individual copies object code copy written offer provide Corresponding Source. alternative allowed occasionally noncommercially, received object code offer, accord subsection 6b. d) Convey object code offering access designated place (gratis charge), offer equivalent access Corresponding Source way place charge. need require recipients copy Corresponding Source along object code. place copy object code network server, Corresponding Source may different server (operated third party) supports equivalent copying facilities, provided maintain clear directions next object code saying find Corresponding Source. Regardless server hosts Corresponding Source, remain obligated ensure available long needed satisfy requirements. e) Convey object code using peer--peer transmission, provided inform peers object code Corresponding Source work offered general public charge subsection 6d. separable portion object code, whose source code excluded Corresponding Source System Library, need included conveying object code work. “User Product” either (1) “consumer product”, means tangible personal property normally used personal, family, household purposes, (2) anything designed sold incorporation dwelling. determining whether product consumer product, doubtful cases shall resolved favor coverage. particular product received particular user, “normally used” refers typical common use class product, regardless status particular user way particular user actually uses, expects expected use, product. product consumer product regardless whether product substantial commercial, industrial non-consumer uses, unless uses represent significant mode use product. “Installation Information” User Product means methods, procedures, authorization keys, information required install execute modified versions covered work User Product modified version Corresponding Source. information must suffice ensure continued functioning modified object code case prevented interfered solely modification made. convey object code work section , , specifically use , User Product, conveying occurs part transaction right possession use User Product transferred recipient perpetuity fixed term (regardless transaction characterized), Corresponding Source conveyed section must accompanied Installation Information. requirement apply neither third party retains ability install modified object code User Product (example, work installed ROM). requirement provide Installation Information include requirement continue provide support service, warranty, updates work modified installed recipient, User Product modified installed. Access network may denied modification materially adversely affects operation network violates rules protocols communication across network. Corresponding Source conveyed, Installation Information provided, accord section must format publicly documented (implementation available public source code form), must require special password key unpacking, reading copying.","code":""},{"path":"https://alexander-pastukhov.github.io/saccadr/LICENSE.html","id":"7-additional-terms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"7. Additional Terms","title":"GNU General Public License","text":"“Additional permissions” terms supplement terms License making exceptions one conditions. Additional permissions applicable entire Program shall treated though included License, extent valid applicable law. additional permissions apply part Program, part may used separately permissions, entire Program remains governed License without regard additional permissions. convey copy covered work, may option remove additional permissions copy, part . (Additional permissions may written require removal certain cases modify work.) may place additional permissions material, added covered work, can give appropriate copyright permission. Notwithstanding provision License, material add covered work, may (authorized copyright holders material) supplement terms License terms: ) Disclaiming warranty limiting liability differently terms sections 15 16 License; b) Requiring preservation specified reasonable legal notices author attributions material Appropriate Legal Notices displayed works containing ; c) Prohibiting misrepresentation origin material, requiring modified versions material marked reasonable ways different original version; d) Limiting use publicity purposes names licensors authors material; e) Declining grant rights trademark law use trade names, trademarks, service marks; f) Requiring indemnification licensors authors material anyone conveys material (modified versions ) contractual assumptions liability recipient, liability contractual assumptions directly impose licensors authors. non-permissive additional terms considered “restrictions” within meaning section 10. Program received , part , contains notice stating governed License along term restriction, may remove term. license document contains restriction permits relicensing conveying License, may add covered work material governed terms license document, provided restriction survive relicensing conveying. add terms covered work accord section, must place, relevant source files, statement additional terms apply files, notice indicating find applicable terms. Additional terms, permissive non-permissive, may stated form separately written license, stated exceptions; requirements apply either way.","code":""},{"path":"https://alexander-pastukhov.github.io/saccadr/LICENSE.html","id":"8-termination","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"8. Termination","title":"GNU General Public License","text":"may propagate modify covered work except expressly provided License. attempt otherwise propagate modify void, automatically terminate rights License (including patent licenses granted third paragraph section 11). However, cease violation License, license particular copyright holder reinstated () provisionally, unless copyright holder explicitly finally terminates license, (b) permanently, copyright holder fails notify violation reasonable means prior 60 days cessation. Moreover, license particular copyright holder reinstated permanently copyright holder notifies violation reasonable means, first time received notice violation License (work) copyright holder, cure violation prior 30 days receipt notice. Termination rights section terminate licenses parties received copies rights License. rights terminated permanently reinstated, qualify receive new licenses material section 10.","code":""},{"path":"https://alexander-pastukhov.github.io/saccadr/LICENSE.html","id":"9-acceptance-not-required-for-having-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"9. Acceptance Not Required for Having Copies","title":"GNU General Public License","text":"required accept License order receive run copy Program. Ancillary propagation covered work occurring solely consequence using peer--peer transmission receive copy likewise require acceptance. However, nothing License grants permission propagate modify covered work. actions infringe copyright accept License. Therefore, modifying propagating covered work, indicate acceptance License .","code":""},{"path":"https://alexander-pastukhov.github.io/saccadr/LICENSE.html","id":"10-automatic-licensing-of-downstream-recipients","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"10. Automatic Licensing of Downstream Recipients","title":"GNU General Public License","text":"time convey covered work, recipient automatically receives license original licensors, run, modify propagate work, subject License. responsible enforcing compliance third parties License. “entity transaction” transaction transferring control organization, substantially assets one, subdividing organization, merging organizations. propagation covered work results entity transaction, party transaction receives copy work also receives whatever licenses work party’s predecessor interest give previous paragraph, plus right possession Corresponding Source work predecessor interest, predecessor can get reasonable efforts. may impose restrictions exercise rights granted affirmed License. example, may impose license fee, royalty, charge exercise rights granted License, may initiate litigation (including cross-claim counterclaim lawsuit) alleging patent claim infringed making, using, selling, offering sale, importing Program portion .","code":""},{"path":"https://alexander-pastukhov.github.io/saccadr/LICENSE.html","id":"11-patents","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"11. Patents","title":"GNU General Public License","text":"“contributor” copyright holder authorizes use License Program work Program based. work thus licensed called contributor’s “contributor version”. contributor’s “essential patent claims” patent claims owned controlled contributor, whether already acquired hereafter acquired, infringed manner, permitted License, making, using, selling contributor version, include claims infringed consequence modification contributor version. purposes definition, “control” includes right grant patent sublicenses manner consistent requirements License. contributor grants non-exclusive, worldwide, royalty-free patent license contributor’s essential patent claims, make, use, sell, offer sale, import otherwise run, modify propagate contents contributor version. following three paragraphs, “patent license” express agreement commitment, however denominated, enforce patent (express permission practice patent covenant sue patent infringement). “grant” patent license party means make agreement commitment enforce patent party. convey covered work, knowingly relying patent license, Corresponding Source work available anyone copy, free charge terms License, publicly available network server readily accessible means, must either (1) cause Corresponding Source available, (2) arrange deprive benefit patent license particular work, (3) arrange, manner consistent requirements License, extend patent license downstream recipients. “Knowingly relying” means actual knowledge , patent license, conveying covered work country, recipient’s use covered work country, infringe one identifiable patents country reason believe valid. , pursuant connection single transaction arrangement, convey, propagate procuring conveyance , covered work, grant patent license parties receiving covered work authorizing use, propagate, modify convey specific copy covered work, patent license grant automatically extended recipients covered work works based . patent license “discriminatory” include within scope coverage, prohibits exercise , conditioned non-exercise one rights specifically granted License. may convey covered work party arrangement third party business distributing software, make payment third party based extent activity conveying work, third party grants, parties receive covered work , discriminatory patent license () connection copies covered work conveyed (copies made copies), (b) primarily connection specific products compilations contain covered work, unless entered arrangement, patent license granted, prior 28 March 2007. Nothing License shall construed excluding limiting implied license defenses infringement may otherwise available applicable patent law.","code":""},{"path":"https://alexander-pastukhov.github.io/saccadr/LICENSE.html","id":"12-no-surrender-of-others-freedom","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"12. No Surrender of Others’ Freedom","title":"GNU General Public License","text":"conditions imposed (whether court order, agreement otherwise) contradict conditions License, excuse conditions License. convey covered work satisfy simultaneously obligations License pertinent obligations, consequence may convey . example, agree terms obligate collect royalty conveying convey Program, way satisfy terms License refrain entirely conveying Program.","code":""},{"path":"https://alexander-pastukhov.github.io/saccadr/LICENSE.html","id":"13-use-with-the-gnu-affero-general-public-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"13. Use with the GNU Affero General Public License","title":"GNU General Public License","text":"Notwithstanding provision License, permission link combine covered work work licensed version 3 GNU Affero General Public License single combined work, convey resulting work. terms License continue apply part covered work, special requirements GNU Affero General Public License, section 13, concerning interaction network apply combination .","code":""},{"path":"https://alexander-pastukhov.github.io/saccadr/LICENSE.html","id":"14-revised-versions-of-this-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"14. Revised Versions of this License","title":"GNU General Public License","text":"Free Software Foundation may publish revised /new versions GNU General Public License time time. new versions similar spirit present version, may differ detail address new problems concerns. version given distinguishing version number. Program specifies certain numbered version GNU General Public License “later version” applies , option following terms conditions either numbered version later version published Free Software Foundation. Program specify version number GNU General Public License, may choose version ever published Free Software Foundation. Program specifies proxy can decide future versions GNU General Public License can used, proxy’s public statement acceptance version permanently authorizes choose version Program. Later license versions may give additional different permissions. However, additional obligations imposed author copyright holder result choosing follow later version.","code":""},{"path":"https://alexander-pastukhov.github.io/saccadr/LICENSE.html","id":"15-disclaimer-of-warranty","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"15. Disclaimer of Warranty","title":"GNU General Public License","text":"WARRANTY PROGRAM, EXTENT PERMITTED APPLICABLE LAW. EXCEPT OTHERWISE STATED WRITING COPYRIGHT HOLDERS /PARTIES PROVIDE PROGRAM “” WITHOUT WARRANTY KIND, EITHER EXPRESSED IMPLIED, INCLUDING, LIMITED , IMPLIED WARRANTIES MERCHANTABILITY FITNESS PARTICULAR PURPOSE. ENTIRE RISK QUALITY PERFORMANCE PROGRAM . PROGRAM PROVE DEFECTIVE, ASSUME COST NECESSARY SERVICING, REPAIR CORRECTION.","code":""},{"path":"https://alexander-pastukhov.github.io/saccadr/LICENSE.html","id":"16-limitation-of-liability","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"16. Limitation of Liability","title":"GNU General Public License","text":"EVENT UNLESS REQUIRED APPLICABLE LAW AGREED WRITING COPYRIGHT HOLDER, PARTY MODIFIES /CONVEYS PROGRAM PERMITTED , LIABLE DAMAGES, INCLUDING GENERAL, SPECIAL, INCIDENTAL CONSEQUENTIAL DAMAGES ARISING USE INABILITY USE PROGRAM (INCLUDING LIMITED LOSS DATA DATA RENDERED INACCURATE LOSSES SUSTAINED THIRD PARTIES FAILURE PROGRAM OPERATE PROGRAMS), EVEN HOLDER PARTY ADVISED POSSIBILITY DAMAGES.","code":""},{"path":"https://alexander-pastukhov.github.io/saccadr/LICENSE.html","id":"17-interpretation-of-sections-15-and-16","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"17. Interpretation of Sections 15 and 16","title":"GNU General Public License","text":"disclaimer warranty limitation liability provided given local legal effect according terms, reviewing courts shall apply local law closely approximates absolute waiver civil liability connection Program, unless warranty assumption liability accompanies copy Program return fee. END TERMS CONDITIONS","code":""},{"path":"https://alexander-pastukhov.github.io/saccadr/LICENSE.html","id":"how-to-apply-these-terms-to-your-new-programs","dir":"","previous_headings":"","what":"How to Apply These Terms to Your New Programs","title":"GNU General Public License","text":"develop new program, want greatest possible use public, best way achieve make free software everyone can redistribute change terms. , attach following notices program. safest attach start source file effectively state exclusion warranty; file least “copyright” line pointer full notice found. Also add information contact electronic paper mail. program terminal interaction, make output short notice like starts interactive mode: hypothetical commands show w show c show appropriate parts General Public License. course, program’s commands might different; GUI interface, use “box”. also get employer (work programmer) school, , sign “copyright disclaimer” program, necessary. information , apply follow GNU GPL, see <http://www.gnu.org/licenses/>. GNU General Public License permit incorporating program proprietary programs. program subroutine library, may consider useful permit linking proprietary applications library. want , use GNU Lesser General Public License instead License. first, please read <http://www.gnu.org/philosophy/--lgpl.html>.","code":"<one line to give the program's name and a brief idea of what it does.> Copyright (C) <year>  <name of author>  This program is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.  This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.  You should have received a copy of the GNU General Public License along with this program.  If not, see <http://www.gnu.org/licenses/>. <program>  Copyright (C) <year>  <name of author> This program comes with ABSOLUTELY NO WARRANTY; for details type 'show w'. This is free software, and you are welcome to redistribute it under certain conditions; type 'show c' for details."},{"path":"https://alexander-pastukhov.github.io/saccadr/articles/methods.html","id":"engbertkliegl2003","dir":"Articles","previous_headings":"","what":"Engbert and Kliegl (2003)","title":"Implemented Methods","text":"algorithm labels sample saccade velocity, measured units standard deviation (see ), exceeds predefined threshold (defaults \\(6\\)) duration super-threshold period exceeds minimal duration (defaults \\(12\\) milliseconds). method makes assumptions velocity units degrees per second can used data (e.g., samples encode gaze screen position units). standard deviation computed following formula #2 Engbert Kliegl (2003) However, value smaller .Machine$double.eps, recomputed via mean estimator monocular version algorithm implemented binocular saccades computed using overlapping votes two eyes. method details rationale default parameter values refer Engbert Kliegl (2003). Parameters: ek_velocity_threshold Velocity threshold saccade detection standard deviations. Defaults \\(6\\). ek_sd_fun Function used compute standard deviation velocities. Defaults sd_via_median_estimator() implements formula #2 Engbert Kliegl (2003). Can replaced sd(), mad(), custom function. ek_minimal_duration_ms Minimal duration saccade milliseconds. Defaults \\(12\\). ek_minimal_separation_ms minimal required time gap saccades. Defaults \\(12\\).","code":"sqrt(median(x^2) - median(x)^2) sqrt(mean(x^2) - mean(x)^2)"},{"path":"https://alexander-pastukhov.github.io/saccadr/articles/methods.html","id":"otero-millan2014","dir":"Articles","previous_headings":"","what":"Otero-Millan et al. (2014)","title":"Implemented Methods","text":"algorithm: Detect local velocity peaks. Filter based minimal inter-peak interval (defaults \\(30\\) ms) maximal allowed saccade rate (defaults \\(5\\) Hz). Identify onset offset potential saccade using absolute velocity threshold degrees per second (defaults \\(3\\)). Compute peak velocity peak acceleration peak velocity reached. Rotate velocity peak acceleration via PCA retain components predefined threshold explained variance (defaults \\(0.05\\)). Perform cluster analysis remaining components \\(2\\), \\(3\\), \\(4\\) picking solution smallest silhouette. Saccades identified cluster highest average peak velocity. method details rationale default parameter values refer Otero-Millan et al. (2014). Parameters: om_minimal_inter_peak_time_ms Minimal inter-peak interval milliseconds. Defaults \\(30\\) om_maximal_peaks_per_second Maximal allowed number peaks per second. Defaults \\(5\\). om_velocity_threshold_deg_per_sec Threshold saccade velocity °/s. Defaults \\(3\\). om_pca_variance_threshold Minimal variance explained retained rotated components. Defaults \\(0.05\\).","code":""},{"path":"https://alexander-pastukhov.github.io/saccadr/articles/methods.html","id":"nystromholmqvist2010","dir":"Articles","previous_headings":"","what":"Nyström and Holmqvist (2010)","title":"Implemented Methods","text":"algorithm: Identify physiologically implausible velocity acceleration peaks (defaults \\(1000 \\deg/s\\) \\(100000 \\deg/s^2\\)). Identify noise onset/offset samples around implausible velocity/acceleration median velocity. Exclude samples analysis. Identify velocity threshold \\(PT = mean(V_{subthreshold}) + 6 \\cdot std(V_{subthreshold})\\) via iterative method starting arbitrary \\(PT\\) value (defaults \\(100 \\deg/s\\)). Stop threshold change \\(1 \\deg/s\\). Identify saccades periods peaks peaks threshold \\(PT\\) adjacent samples \\(PT_{onset/offset} = mean(V_{subthreshold}) + 3 \\cdot std(V_{subthreshold})\\). method details rationale default parameter values refer Nyström Holmqvist (2010). Parameters: nh_max_velocity Maximal physiologically plausible velocity °/s. Defaults 1000. nh_max_acceleration Maximal physiologically plausible acceleration °/s². Defaults 100000. nh_initial_velocity_threshold Initial velocity threshold °/s. Defaults 100.","code":""},{"path":"https://alexander-pastukhov.github.io/saccadr/articles/methods.html","id":"references","dir":"Articles","previous_headings":"","what":"References","title":"Implemented Methods","text":"Engbert, Ralf, Reinhold Kliegl. 2003. “Microsaccades uncover orientation covert attention.” Vision Research 43 (9): 1035–45. https://doi.org/10.1016/S0042-6989(03)00084-1. Nyström, Marcus, Kenneth Holmqvist. 2010. “adaptive algorithm fixation, saccade, glissade detection eyetracking data.” Behavior Research Methods 42 (1): 188–204. https://doi.org/10.3758/BRM.42.1.188. Otero-Millan, J., Jose L Alba Castro, Stephen L Macknik, S. Martinez-Conde. 2014. “Unsupervised clustering method detect microsaccades.” Journal Vision 14 (2): 18–18. https://doi.org/10.1167/14.2.18.","code":""},{"path":"https://alexander-pastukhov.github.io/saccadr/articles/using_custom_methods.html","id":"example-implementation","dir":"Articles","previous_headings":"","what":"Example implementation","title":"Using Custom Methods","text":"example implementation overly simple custom method labels sample saccade velocity exceeds predefined threshold. expects threshold parameter \"st_velocity_threshold\" member list uses default threshold \\(50 \\deg / s\\) (arbitrary number!) threshold provided. implemented method, can pass alongside internally implemented methods:","code":"simple_threshold_method <- function(x,                                     y,                                     vel,                                     acc,                                     sample_rate,                                     trial,                                     options) {    # obtain method parameters or use defaults   velocity_threshold <- saccadr::option_or_default(options, \"st_velocity_threshold\", 50)    # vote on each sample     sample_vote <- vel[['amp']] > velocity_threshold      # return votes   sample_vote } data(\"single_trial\") saccades <- saccadr::extract_saccades(x = single_trial$x,                                       y = single_trial$y,                                       sample_rate = 500,                                       methods = list(\"ek\", \"om\", \"nh\", simple_threshold_method),                                       options = list(\"st_velocity_threshold\" = 70))"},{"path":"https://alexander-pastukhov.github.io/saccadr/articles/velocity_computation.html","id":"differentiation-following-engbertkliegl2003","dir":"Articles","previous_headings":"","what":"Differentiation following Engbert and Kliegl (2003)","title":"Velocity computation","text":"method computes velocity predefined time window controlled via ek_velocity_time_window defaults 20 ms. width window converted samples based sampling_rate parameter ensured odd number equal larger 3. .e., window three samples long, velocity computed based one sample one sample current, five-samples window - two samples , etc. code always starts requested window size iteratively reduces two samples accommodate trial limits missing values. NA velocity returned even smallest window (three samples wide) used. general, horizontal vertical velocity components computed \\[v_x[] = \\frac{\\sum_{j=1}^{(N-1)/2}x[+j] - x[-j]}{\\sum_{j=1}^{(N-1)/2}2j\\cdot\\Delta t}\\] \\(\\) index sample, \\(\\Delta t = \\frac{1}{sample~rate}\\) duration single sampling frame, \\(N\\) odd integer width moving average used compute velocity. Engbert Kliegl (2003), \\(N=5\\) \\(\\Delta t = 4\\) (250 Hz sampling rate) translate 20 ms moving average window (default value used method implementation). derivation shows equivalence formula formula 1 Engbert Kliegl (2003). \\(N=5\\): \\[\\frac{\\sum_{j=1}^{(5-1)/2}x[+j] - x[-j]}{\\sum_{j=1}^{(5-1)/2}2j\\cdot\\Delta t}=\\] \\[\\frac{\\sum_{j=1}^{2}x[+j] - x[-j]}{\\sum_{j=1}^{2}2j\\cdot\\Delta t}=\\] \\[\\frac{x[+1] - x[-1]+x[+2] - x[-2]}{2\\Delta t + 4\\Delta t}=\\] \\[\\frac{x[+2] + x[+1] - x[-1] - x[-2]}{6\\Delta t}\\]","code":""},{"path":"https://alexander-pastukhov.github.io/saccadr/articles/velocity_computation.html","id":"differentiation-following-nystromholmqvist2010","dir":"Articles","previous_headings":"","what":"Differentiation following Nyström and Holmqvist (2010)","title":"Velocity computation","text":"Horizontal vertical components velocity computed adjacent samples, amplitude computed components filtered using Savitzky-Golay filter. Filter order controlled via nh_sg_filter_order option defaults 2.","code":""},{"path":"https://alexander-pastukhov.github.io/saccadr/articles/velocity_computation.html","id":"comparing-two-methods","dir":"Articles","previous_headings":"","what":"Comparing two methods","title":"Velocity computation","text":"two methods produce comparable different velocity values. However, minor effect saccade detection, see vignette Using sample votes.","code":"# computing velocity using two methods vel_ek <- saccadr::diff_ek(x = single_trial$x,                            y = single_trial$y,                            trial = rep(1, nrow(single_trial)),                            sample_rate = 500) vel_nh <- saccadr::diff_nh(x = single_trial$x,                            y = single_trial$y,                            trial = rep(1, nrow(single_trial)),                            sample_rate = 500) vel_comparison <- na.omit(data.frame(EK = vel_ek[['amp']], NH = vel_nh[['amp']])) %>%   dplyr::filter(NH > 0) %>% # values can be negative due to filtering   dplyr::mutate(logEK = log(EK), logNH = log(NH))   # plotting amplitude comparison pearson_rho <- cor(vel_comparison[['EK']], vel_comparison[['NH']])  ggplot(data = vel_comparison, aes(x = EK, y = NH)) +   geom_abline() +   geom_point() +   scale_x_log10() +   scale_y_log10() +   labs(subtitle = sprintf(\"Pearson's ρ = %.2f\\nPearson's ρ for log transformed velocities = %.2f\", pearson_rho, cor(vel_comparison[['logEK']], vel_comparison[['logNH']])),        x = \"Vek\",        y = \"Vnh\") # plotting  ggplot(data = NULL, aes(x = vel_comparison[['EK']] - vel_comparison[['NH']])) +   geom_histogram(bins = 50) +   xlab(\"Vek - Vnh\") +   labs(title = \"Difference in velocities computed via two methods\")"},{"path":"https://alexander-pastukhov.github.io/saccadr/articles/velocity_computation.html","id":"implementing-and-using-a-custom-differentiation-function","dir":"Articles","previous_headings":"","what":"Implementing and using a custom differentiation function","title":"Velocity computation","text":"custom function follows Arguments passed function (vectors length): x, y vectors values, either x y gaze coordinates velocity components (acceleration). sample_rate scalar value Hz. trial vector trial index per sample. options named list method-specific options. See example use . See also option_or_default() function. function must return data.frame three columns: x (horizontal component), y (vertical component), amp (amplitude). example simple velocity function respects trial borders similar function uses optional custom_velocity_lag parameter can different 1","code":"diff_custom <- function(x, y,  trial, sample_rate, options=NULL) {   # compute vertical and horizontal components   df <- data.frame(x = ..., # differentiate values of x                     y = ...) # differentiate values of y      # compute amplitude   df[['amp']] = sqrt(df[['x']]^2 + df[['y']]^2))    # return a data.frame with columns x, y, and amp   return(df) } library(dplyr)  diff_custom <- function(x, y,  trial, sample_rate, options=NULL) {   # computing frame time step    delta_t_s <- 1 / sample_rate      # --- differentiate (compute velocity or acceleration) and filter   data.frame(trial = trial,              x = x,              y = y) %>%      # compute velocity and acceleration for each trial     group_by(trial) %>%     mutate(x = (x - lag(x)) / delta_t_s,            y = (y - lag(y)) / delta_t_s,            amp = sqrt(x^2 + y^2)) } diff_lag_n <- function(x, y,  trial, sample_rate, options=NULL) {   # obtain lag or use default   lag_n <- saccadr::option_or_default(options, \"custom_velocity_lag\", 1)      # computing frame time step    delta_t_s <- 1 / sample_rate      # --- differentiate (compute velocity or acceleration) and filter   data.frame(trial = trial,              x = x,              y = y) %>%      # compute velocity and acceleration for each trial     group_by(trial) %>%     mutate(x = (x - lag(x, lag_n)) / delta_t_s,            y = (y - lag(y, lag_n)) / delta_t_s,            amp = sqrt(x^2 + y^2)) }"},{"path":"https://alexander-pastukhov.github.io/saccadr/articles/velocity_computation.html","id":"references","dir":"Articles","previous_headings":"","what":"References","title":"Velocity computation","text":"Engbert, Ralf, Reinhold Kliegl. 2003. “Microsaccades uncover orientation covert attention.” Vision Research 43 (9): 1035–45. https://doi.org/10.1016/S0042-6989(03)00084-1. Nyström, Marcus, Kenneth Holmqvist. 2010. “adaptive algorithm fixation, saccade, glissade detection eyetracking data.” Behavior Research Methods 42 (1): 188–204. https://doi.org/10.3758/BRM.42.1.188. Otero-Millan, J., Jose L Alba Castro, Stephen L Macknik, S. Martinez-Conde. 2014. “Unsupervised clustering method detect microsaccades.” Journal Vision 14 (2): 18–18. https://doi.org/10.1167/14.2.18.","code":""},{"path":"https://alexander-pastukhov.github.io/saccadr/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Alexander Pastukhov. Author, maintainer.","code":""},{"path":"https://alexander-pastukhov.github.io/saccadr/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Pastukhov (2022). saccadr: Extract Saccades via Ensemble Methods Approach. https://github.com/alexander-pastukhov/saccadr/, https://alexander-pastukhov.github.io/saccadr/.","code":"@Manual{,   title = {saccadr: Extract Saccades via an Ensemble of Methods Approach},   author = {Alexander Pastukhov},   year = {2022},   note = {https://github.com/alexander-pastukhov/saccadr/, https://alexander-pastukhov.github.io/saccadr/}, }"},{"path":"https://alexander-pastukhov.github.io/saccadr/index.html","id":"saccadr","dir":"","previous_headings":"","what":"Extract Saccades via an Ensemble of Methods Approach","title":"Extract Saccades via an Ensemble of Methods Approach","text":"saccadr modular extendable R package extract (micro)saccades gaze samples via ensemble methods approach. Although agreement general definition saccade, specific details harder agree upon. Therefore, numerous algorithms extract saccades based various heuristics, differ assumptions velocity, acceleration, etc. package uses methods label individual samples applies majority vote approach identify saccades. package includes three methods (see Implemented Methods vignette) can extended via custom methods (see Using custom methods vignette). also uses modular approach compute velocity acceleration noisy samples (see Velocity computation vignette). Finally, can obtain methods votes per gaze sample instead saccades (see Using sample votes vignette). extract_saccades() function uses several methods label individual samples belonging saccade, classifies sample potential saccade proportion votes exceeds preset threshold, identifies saccades based minimal saccade duration minimal time saccades. binocular data, 1) samples can averaged velocity computation, 2) votes can merged function returns binocular saccades, 3) saccades extracted eye separately. Currently, library implements saccade detection using following saccade detection methods. using package, please cite package individual methods. method_ek : Engbert, R., & Kliegl, R. (2003). Microsaccades uncover orientation covert attention. Vision Research, 43(9), 1035–1045. https://doi.org/10.1016/S0042-6989(03)00084-1 method_om : Otero-Millan, J., Castro, J. L. ., Macknik, S. L., & Martinez-Conde, S. (2014). Unsupervised clustering method detect microsaccades. Journal Vision, 14(2), 18–18. https://doi.org/10.1167/14.2.18 method_nh : Nyström, M., & Holmqvist, K. (2010). adaptive algorithm fixation, saccade, glissade detection eye tracking data. Behavior Research Methods, 42(1), 188–204. https://doi.org/10.3758/BRM.42.1.188","code":""},{"path":"https://alexander-pastukhov.github.io/saccadr/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Extract Saccades via an Ensemble of Methods Approach","text":"install github","code":"library(\"devtools\") install_github(\"alexander-pastukhov/saccadr\", dependencies=TRUE)"},{"path":"https://alexander-pastukhov.github.io/saccadr/index.html","id":"usage","dir":"","previous_headings":"","what":"Usage","title":"Extract Saccades via an Ensemble of Methods Approach","text":"main function extract_saccades(). Minimally, takes x y gaze samples, sampling rate returning table extracted saccades. Note function expects units gaze samples degrees visual angle, methods use physiologically plausible velocity acceleration thresholds.","code":"data(\"single_trial\") saccades <- extract_saccades(single_trial$x, single_trial$y, sample_rate = 500)"},{"path":"https://alexander-pastukhov.github.io/saccadr/index.html","id":"multiple-trials","dir":"","previous_headings":"Usage","what":"Multiple trials","title":"Extract Saccades via an Ensemble of Methods Approach","text":"recording spans multiple trials, need specify via trial parameter. way velocity computation saccade detection methods respect trial boundaries.","code":"data(monocular_ten_trials) saccades <- extract_saccades(monocular_ten_trials$x                              monocular_ten_trials$y,                               500,                              trial = monocular_ten_trials$trial)"},{"path":"https://alexander-pastukhov.github.io/saccadr/index.html","id":"binocular-data","dir":"","previous_headings":"Usage","what":"Binocular data","title":"Extract Saccades via an Ensemble of Methods Approach","text":"three ways binocular data can treated based value binocular parameter: binocular = \"merge\" (default): sample votes obtained eyes methods averaged. way binocular saccades (.e., eye movements sufficient temporal overlap eyes) detected. Eye = \"Binocular\" saccade description. binocular = \"cyclopean\": binocular data converted average cyclopean image voting saccades detection. Eye = \"Cyclopean\" saccade description. binocular = \"monocular\": saccades extracted independently eye. Eye = \"Left\" Eye = \"Right\" saccade description.","code":"data(\"single_trial_binocular\") # binocular saccades only saccades_b <- saccadr::extract_saccades(single_trial_binocular[, c('xL', 'xR')],                                       single_trial_binocular[, c('yL', 'yR')],                                       sample_rate = 1000)  # cyclopean saccades from binocular data saccades_c <- saccadr::extract_saccades(single_trial_binocular[, c('xL', 'xR')],                                       single_trial_binocular[, c('yL', 'yR')],                                       sample_rate = 1000,                                       binocular = \"cyclopean\")  # monocular saccades from binocular data saccades_m <- saccadr::extract_saccades(single_trial_binocular[, c('xL', 'xR')],                                       single_trial_binocular[, c('yL', 'yR')],                                       sample_rate = 1000,                                       binocular = \"monocular\")"},{"path":"https://alexander-pastukhov.github.io/saccadr/index.html","id":"specifying-methods","dir":"","previous_headings":"Usage","what":"Specifying methods","title":"Extract Saccades via an Ensemble of Methods Approach","text":"default, implemented methods used saccade detection , necessary, can use subset even single method. Note can also supply saccade detection function, please see Using custom methods vignette. Parameters individual methods passed via options argument, named list <parameter-name> = <value> pairs. can find information specific parameters default values Implemented Methods vignette. example modifying velocity threshold, measured units standard deviation, Engbert & Kliegl (2003) method. default value 6 can make stricter","code":"# Using a single method saccades <- extract_saccades(single_trial$x, single_trial$y, 500, methods = method_om)  # Using two methods saccades <- extract_saccades(single_trial$x, single_trial$y, 500, methods = list(method_ek, method_om)) saccades <- extract_saccades(single_trial$x, single_trial$y, 500, options = list(\"ek_velocity_threshold\" = 8))"},{"path":"https://alexander-pastukhov.github.io/saccadr/index.html","id":"altering-voting-threshold","dir":"","previous_headings":"Usage","what":"Altering voting threshold","title":"Extract Saccades via an Ensemble of Methods Approach","text":"voting threshold number methods must label sample potential saccade. default, one method must agree sample considered saccade (vote_threshold = length(methods) - 1) 1, single method passed function. can make voting less restrictive via vote_threshold parameter.","code":"# A strict unanimous decision threshold saccades <- extract_saccades(single_trial$x, single_trial$y, 500, vote_threshold = 3)  # A slacker criterion that at least one of the three methods must label sample as a saccade saccades <- extract_saccades(single_trial$x, single_trial$y, 500, vote_threshold = 1)"},{"path":"https://alexander-pastukhov.github.io/saccadr/index.html","id":"specifying-velocity-computation-method","dir":"","previous_headings":"Usage","what":"Specifying velocity computation method","title":"Extract Saccades via an Ensemble of Methods Approach","text":"gaze samples tend noisy, different methods use various approaches computing velocity noisy samples. Methods Engbert & Kliegl (2003) Otero-Millan et al. (2014) used approach based averaging multiple samples compute velocity, whereas Nyström & Holmqvist (2010) compute simple derivative filter . default, package uses former approach (velocity_function = diff_ek) can also use latter (velocity_function = diff_nh) implement custom method (see Velocity computation vignette). Acceleration computed way velocity samples. example using Nyström & Holmqvist (2010) velocity computation","code":"saccades <- extract_saccades(single_trial$x, single_trial$y, 500, velocity_function = diff_nh)"},{"path":"https://alexander-pastukhov.github.io/saccadr/index.html","id":"specifying-saccade-temporal-properties","dir":"","previous_headings":"Usage","what":"Specifying saccade temporal properties","title":"Extract Saccades via an Ensemble of Methods Approach","text":"votes , saccades detection based minimal duration (minimal_duration_ms parameter, defaults 12 ms) minimal time saccades (minimal_separation_ms, defaults 12 ms).","code":"# Only longish saccades are extracted saccades <- extract_saccades(single_trial$x, single_trial$y, 500, minimal_duration_ms = 20)"},{"path":[]},{"path":"https://alexander-pastukhov.github.io/saccadr/index.html","id":"saccade-description-table","dir":"","previous_headings":"Return values","what":"Saccade description table","title":"Extract Saccades via an Ensemble of Methods Approach","text":"extract_saccades() function returns table following columns: Trial Trial index. Eye “Monocular” monocular inputs. “Cyclopean” binocular data averaged applying algorithms. “Binocular” binocular data votes averaged applying algorithms. “Left” “Right” binocular data eyes processed independently. OnsetSample Index first sample. OffsetSample Index last sample. Onset Onset time relative trial start milliseconds. Offset Offset time relative trial start milliseconds. Duration Duration milliseconds. DisplacementX Horizontal displacement measured first last sample. DisplacementY Vertical displacement measured first last sample. Displacement Displacement magnitude measured first last sample. DisplacementPhi Displacement direction measured first last sample. AmplitudeX Horizontal displacement measured leftmost rightmost sample. AmplitudeY Vertical displacement measured lowest uppermost sample. Amplitude Displacement magnitude measured extreme samples. AmplitudePhi Displacement direction measured extreme samples. VelocityPeak Peak velocity. VelocityAvg Average velocity. AccelerationPeak Peak acceleration. AccelerationAvg Average acceleration. AccelerationStart Peak acceleration peak velocity reached. AccelerationStop Peak acceleration peak velocity reached.","code":""},{"path":"https://alexander-pastukhov.github.io/saccadr/index.html","id":"sample-votes","dir":"","previous_headings":"Return values","what":"Sample votes","title":"Extract Saccades via an Ensemble of Methods Approach","text":"Alternatively, use parameter return_votes = TRUE function can return votes per sample method (eye, binocular data). Please see Using sample votes vignette details.","code":""},{"path":"https://alexander-pastukhov.github.io/saccadr/reference/compute_velocity_ek.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute velocity via Engbert & Kliegl (2003) algorithm. — compute_velocity_ek","title":"Compute velocity via Engbert & Kliegl (2003) algorithm. — compute_velocity_ek","text":"Compute velocity via Engbert & Kliegl (2003) algorithm. See formula #1 manuscript.","code":""},{"path":"https://alexander-pastukhov.github.io/saccadr/reference/compute_velocity_ek.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute velocity via Engbert & Kliegl (2003) algorithm. — compute_velocity_ek","text":"","code":"compute_velocity_ek(x, trial, time_window_in_samples, delta_t)"},{"path":"https://alexander-pastukhov.github.io/saccadr/reference/compute_velocity_ek.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute velocity via Engbert & Kliegl (2003) algorithm. — compute_velocity_ek","text":"x Vector coordinates trial Vector trial labels, velocity computed within trials. time_window_in_samples Width window velocity computation samples. delta_t Duration single frame (1 / sampling rate).","code":""},{"path":"https://alexander-pastukhov.github.io/saccadr/reference/compute_velocity_ek.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute velocity via Engbert & Kliegl (2003) algorithm. — compute_velocity_ek","text":"Velocity vector","code":""},{"path":"https://alexander-pastukhov.github.io/saccadr/reference/diff_ek.html","id":null,"dir":"Reference","previous_headings":"","what":"Differentiate x and y and compute change amplitude via an algorithm proposed by Engbert & Kliegl (2003) — diff_ek","title":"Differentiate x and y and compute change amplitude via an algorithm proposed by Engbert & Kliegl (2003) — diff_ek","text":"Differentiate x y compute change amplitude via algorithm proposed Engbert & Kliegl (2003)","code":""},{"path":"https://alexander-pastukhov.github.io/saccadr/reference/diff_ek.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Differentiate x and y and compute change amplitude via an algorithm proposed by Engbert & Kliegl (2003) — diff_ek","text":"","code":"diff_ek(x, y, trial, sample_rate, options = NULL)"},{"path":"https://alexander-pastukhov.github.io/saccadr/reference/diff_ek.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Differentiate x and y and compute change amplitude via an algorithm proposed by Engbert & Kliegl (2003) — diff_ek","text":"x vector x coordinates degrees visual angle y vector y coordinates degrees visual angle trial vector trial index sample_rate sample rate Hz options List method specific options, see Details.","code":""},{"path":"https://alexander-pastukhov.github.io/saccadr/reference/diff_ek.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Differentiate x and y and compute change amplitude via an algorithm proposed by Engbert & Kliegl (2003) — diff_ek","text":"data.frame columns x, y, amp","code":""},{"path":"https://alexander-pastukhov.github.io/saccadr/reference/diff_ek.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Differentiate x and y and compute change amplitude via an algorithm proposed by Engbert & Kliegl (2003) — diff_ek","text":"Method options, please refer Engbert & Kliegl (2003) details parameters rationale default values. ek_velocity_time_window Time window velocity computation milliseconds. Defaults 20 ms.","code":""},{"path":[]},{"path":"https://alexander-pastukhov.github.io/saccadr/reference/diff_ek.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Differentiate x and y and compute change amplitude via an algorithm proposed by Engbert & Kliegl (2003) — diff_ek","text":"","code":"diff_ek(rnorm(1000), rnorm(1000), rep(1, 1000), 250, list(\"ek_velocity_time_window\" = 20)) #>                  x            y         amp #> 1               NA           NA          NA #> 2     1.942911e+02 -226.6677551 298.5419463 #> 3     1.949800e+01  118.2524490 119.8491291 #> 4    -7.963194e+01  129.7404785 152.2295532 #> 5    -6.510947e+01  -47.6252327  80.6684971 #> 6    -5.977929e+01 -205.3756256 213.8988336 #> 7    -5.187492e+01  -69.9593277  87.0937153 #> 8    -2.907639e+01  109.5439301 113.3371476 #> 9    -1.267512e+01  116.3776016 117.0658138 #> 10    9.098618e+01   37.4146652  98.3785683 #> 11    1.396289e+02  -23.5141392 141.5949776 #> 12    5.426661e+01 -101.2091293 114.8396846 #> 13   -3.639929e+01  -95.1249466 101.8511852 #> 14   -2.880618e+01  -23.4710579  37.1575932 #> 15   -1.514239e+01   31.2953739  34.7662543 #> 16   -7.839505e+01   28.4017620  83.3813166 #> 17   -6.689933e+01  -90.7045517 112.7068590 #> 18    9.840749e+00  -47.2636681  48.2772685 #> 19   -2.545878e+01   72.0447540  76.4107072 #> 20   -4.290066e+01  111.9206161 119.8611311 #> 21    7.926111e+01   32.7559509  85.7629036 #> 22    1.885235e+02  -51.3015289 195.3790512 #> 23    1.011220e+02   35.8017845 107.2726687 #> 24   -4.022456e+01  -11.8369102  41.9300292 #> 25   -6.869274e+01  -79.2752380 104.8964064 #> 26   -4.434865e+00 -134.0217133 134.0950695 #> 27   -1.585817e+01  -19.9862061  25.5133299 #> 28    4.538887e+00  124.4784546 124.5611783 #> 29    1.289823e+01  -11.1488752  17.0488027 #> 30    6.279519e+01   33.7128487  71.2726556 #> 31    1.824497e+02  -43.4951630 187.5625445 #> 32    8.172909e+01  -50.2427902  95.9373846 #> 33   -1.097682e+02    2.6740620 109.8008084 #> 34   -1.953963e+02   45.1495056 200.5446946 #> 35   -1.470747e+02  218.2440948 263.1756930 #> 36   -7.383127e+01   83.2152786 111.2467473 #> 37   -1.185706e+02  -93.8872452 151.2408879 #> 38   -2.865316e+01 -106.1932602 109.9909637 #> 39    1.408537e+02   -5.4810824 140.9603324 #> 40    2.363353e+02   80.6486588 249.7169970 #> 41    1.990540e+02  -12.8159819 199.4661948 #> 42    1.609903e+01  -99.7815018 101.0718898 #> 43   -1.024462e+02  -54.5688515 116.0731456 #> 44   -1.144031e+02  108.3774719 157.5872631 #> 45   -9.119329e+01  172.5417328 195.1585658 #> 46   -1.517512e+01  106.0449600 107.1252430 #> 47    2.722318e+01  -56.1411667  62.3933680 #> 48    5.750349e+01 -189.8050232 198.3244772 #> 49    5.705889e+01  -79.9860382  98.2521419 #> 50   -8.775314e+01  -62.8808250 107.9565236 #> 51   -9.186976e+01  -84.1137772 124.5599456 #> 52   -5.637064e+01  -37.8035088  67.8730781 #> 53    5.875884e+01    9.0359278  59.4495510 #> 54    8.494544e+01  105.4831543 135.4342054 #> 55   -5.533033e+01  121.5331573 133.5355882 #> 56   -6.898538e+01   63.1567039  93.5294189 #> 57   -2.253870e+01   -4.6174974  23.0068275 #> 58    1.348419e+01  -90.3716812  91.3721185 #> 59    2.575523e+01   16.2573910  30.4570917 #> 60    2.476979e+01   97.5235596 100.6200139 #> 61    6.427335e+01   24.3350124  68.7259544 #> 62    8.819137e+01  -88.1748810 124.7097712 #> 63   -3.592744e+01 -156.9847717 161.0434701 #> 64   -1.354687e+02 -106.3437424 172.2230229 #> 65   -5.037474e+01   86.2854309  99.9139114 #> 66    1.143280e+02  230.8041229 257.5683324 #> 67    1.871904e+02   52.3932190 194.3844146 #> 68    9.241842e+01 -113.6743011 146.5025969 #> 69   -6.171070e+01  -54.9005470  82.5971013 #> 70   -1.402437e+02   62.8035202 153.6638024 #> 71   -1.560012e+02   10.5912933 156.3603414 #> 72   -7.083449e+00  -44.3217239  44.8841894 #> 73    6.093084e+01   26.1471634  66.3041614 #> 74    6.991808e+01   78.2171249 104.9116577 #> 75    7.143862e+01   27.7299328  76.6317546 #> 76    2.838554e+01  -37.4930573  47.0262515 #> 77   -9.583503e+01   34.9980278 102.0255598 #> 78   -1.266313e+02   33.0189857 130.8653065 #> 79   -4.351649e+01  -30.1654320  52.9493903 #> 80    4.974553e+01 -109.0208969 119.8339435 #> 81    4.770096e+01 -118.9860229 128.1914796 #> 82    7.295406e+01   17.6774540  75.0652159 #> 83    1.184097e+02   51.2121162 129.0098211 #> 84    1.150607e+01   65.0504456  66.0601999 #> 85   -6.536514e+01   42.4476013  77.9384357 #> 86   -3.324064e+01   24.0241966  41.0134410 #> 87    5.079716e+00    5.0822244   7.1855773 #> 88   -1.930568e+01  -22.2444630  29.4537864 #> 89   -5.472947e+01  -67.6806717  87.0401524 #> 90   -3.462893e+01 -124.4966965 129.2230249 #> 91    8.713361e+01  -53.3799782 102.1845749 #> 92    2.970331e+01  -34.8074226  45.7585350 #> 93   -3.259597e+01   73.8979263  80.7675711 #> 94   -8.934219e+01   93.8951035 129.6083254 #> 95   -2.468111e+01  123.7823792 126.2189942 #> 96    5.962849e+01   73.7925873  94.8730855 #> 97   -5.002208e+01 -101.7210388 113.3550994 #> 98   -8.378374e+01  -77.7894821 114.3281162 #> 99    3.563367e+01   71.9093704  80.2540736 #> 100   1.577951e+02  195.0679474 250.8999498 #> 101   7.045202e+01   76.7813873 104.2058942 #> 102  -5.894395e+01 -115.5532303 129.7186875 #> 103  -7.962891e+01 -187.4869232 203.6961225 #> 104  -1.353392e+01  -40.6991272  42.8903937 #> 105   5.349465e+01   43.8218575  69.1522448 #> 106   1.160947e+02   48.6735268 125.8852000 #> 107   5.091508e+01  -30.7907715  59.5014041 #> 108  -1.340537e+02   -5.1128922 134.1511800 #> 109  -1.571455e+02  145.6993256 214.2964995 #> 110  -7.647783e+01   85.6386719 114.8165513 #> 111   3.264860e+01  -42.5894966  53.6637345 #> 112   7.020068e+01 -191.4910583 203.9533288 #> 113   7.197478e+01 -157.7862701 173.4268627 #> 114   4.382860e+01  -14.8266096  46.2685065 #> 115  -5.951248e+00  114.3887711 114.5434778 #> 116   1.650301e+01   90.6433945  92.1334585 #> 117   1.725623e+01  -62.7362976  65.0662767 #> 118  -1.024418e+01 -129.8392181 130.2427186 #> 119   8.186534e+01  -40.2145042  91.2093221 #> 120   6.871758e+01   92.4133224 115.1621828 #> 121   4.186343e+01  100.3609161 108.7421719 #> 122   5.634542e+01   67.3691330  87.8259990 #> 123  -6.500109e+01  -12.4329777  66.1794588 #> 124  -1.344930e+02 -165.6433868 213.3684840 #> 125  -9.980894e+01 -104.3406754 144.3911370 #> 126   1.082243e+02   -8.0957222 108.5266898 #> 127   2.074817e+02   16.0170860 208.0990417 #> 128   6.441428e+01   62.7587051  89.9324971 #> 129  -1.113048e+02  122.2528610 165.3315794 #> 130  -9.017471e+01  222.3900604 239.9767028 #> 131  -1.116627e+02    1.7429309 111.6763139 #> 132   7.315447e-01 -155.7765198 155.7782375 #> 133   6.613989e+01  -81.6272812 105.0594994 #> 134  -2.681840e+01  110.9640503 114.1588678 #> 135  -6.119373e+01  138.1143646 151.0637306 #> 136  -8.068140e+01  -28.7339611  85.6453705 #> 137   2.590256e+01  -76.7496796  81.0028147 #> 138   1.199910e+02  -58.5392227 133.5090598 #> 139   6.932358e+01  -49.9712143  85.4568939 #> 140  -8.255393e+01  -88.9463501 121.3532238 #> 141  -6.184631e+01  -75.8233032  97.8475286 #> 142  -1.439809e+01   40.3651772  42.8561856 #> 143   4.303059e+01   45.4970703  62.6228027 #> 144  -8.826591e+01    3.1603091  88.3224657 #> 145  -7.936852e+01   10.5563049  80.0674512 #> 146   9.698493e+01    7.4727640  97.2723970 #> 147   1.386231e+02   38.4976006 143.8695087 #> 148  -1.357836e+01  -22.4472733  26.2345550 #> 149  -1.170205e+02  -17.6346149 118.3418035 #> 150   1.633232e+01  -31.9161663  35.8522874 #> 151   6.636964e+01   64.8258286  92.7756256 #> 152   2.511304e+01   82.7701263  86.4960036 #> 153  -7.968645e+01  -77.9433823 111.4679412 #> 154   2.548952e+01 -133.9728699 136.3761172 #> 155   4.374937e+01  -42.4744072  60.9760830 #> 156  -1.385094e+02   57.2934837 149.8913263 #> 157  -2.213385e+02   70.8855362 232.4123157 #> 158  -4.079826e+01   22.8981895  46.7848776 #> 159   1.475751e+02   13.4437265 148.1861989 #> 160   9.255518e+01   40.1265373 100.8791334 #> 161  -2.293813e+01   73.5564804  77.0500725 #> 162  -4.381758e+01   71.4247742  83.7942646 #> 163   9.972879e+01 -114.2588043 151.6604958 #> 164   2.003090e+01 -166.3202820 167.5221573 #> 165  -3.443312e+01    6.0453911  34.9597886 #> 166  -3.421206e+01  195.7852020 198.7518813 #> 167   9.386350e+00  147.9928894 148.2902521 #> 168   1.550853e+02    4.5925198 155.1533263 #> 169   1.967295e+01  -56.3053551  59.6432542 #> 170  -8.412504e+01  -40.6825523  93.4456639 #> 171  -1.331386e+02 -107.9018936 171.3730094 #> 172  -1.020738e+02 -169.3147278 197.7031590 #> 173   2.652070e+01  -99.3774948 102.8554045 #> 174   3.504498e+01   15.4172115  38.2863027 #> 175   2.892323e+01   88.9940567  93.5761483 #> 176   5.117219e+01   50.5160141  71.9059141 #> 177   5.194378e+01   44.0857544  68.1300926 #> 178   2.037246e+01   64.8612366  67.9854172 #> 179   3.765120e+00   70.4779892  70.5784889 #> 180  -1.536491e+01   -8.9409828  17.7769966 #> 181   2.992649e+01  -65.1829758  71.7245794 #> 182  -2.571058e+01  -29.3348160  39.0072442 #> 183  -4.668436e+01   40.5049629  61.8068082 #> 184  -5.954927e-01  122.0787048 122.0801572 #> 185   4.115493e+01   35.3866539  54.2765498 #> 186  -5.547592e+00  -87.1313019  87.3077290 #> 187  -1.217166e+02 -204.5113983 237.9912459 #> 188  -1.142257e+02  -32.1749191 118.6706896 #> 189  -2.411865e+01  156.2894897 158.1395399 #> 190   2.181605e+02  150.8402252 265.2296874 #> 191   2.470942e+02   14.8457384 247.5397816 #> 192   9.120540e+01  -98.6938095 134.3833798 #> 193  -5.545272e+01 -104.6513672 118.4352687 #> 194  -1.076363e+02  -83.0902786 135.9763724 #> 195  -2.896713e+01   69.9634628  75.7230518 #> 196  -4.589574e+01   94.7525787 105.2828104 #> 197  -4.383566e+01  -35.0744514  56.1407322 #> 198   6.636177e+01 -111.9366608 130.1295532 #> 199   3.236037e+01  -73.0584030  79.9044670 #> 200  -9.860452e+01   38.8926659 105.9976007 #> 201  -1.086159e+02   11.7313004 109.2476392 #> 202   6.049266e+01  -21.0898762  64.0636037 #> 203   2.098860e+02   50.2307816 215.8129882 #> 204   4.444817e+01  145.2005920 151.8514122 #> 205  -1.336524e+02   30.2048626 137.0229426 #> 206  -9.714169e+01 -100.7403412 139.9468592 #> 207  -5.225045e+01  -35.6728516  63.2665937 #> 208  -7.823660e+00   82.2642136  82.6354070 #> 209   1.568778e+01   95.9793625  97.2529923 #> 210  -5.527181e+00  -87.4887772  87.6631956 #> 211   7.463386e+01  -93.0836792 119.3096143 #> 212   1.882050e+01 -102.5211792 104.2343683 #> 213  -2.502934e+00  -28.9270477  29.0351299 #> 214  -2.525361e+01  106.2044983 109.1656549 #> 215  -6.939866e+01  173.9973450 187.3265862 #> 216  -7.850441e+00   50.0574150  50.6692631 #> 217  -6.916499e+01  -81.3094254 106.7474541 #> 218  -2.934841e+01  -35.4689789  46.0366973 #> 219   3.761943e+01   -5.0757728  37.9603123 #> 220   1.752052e+02   17.2460670 176.0519649 #> 221   1.178753e+02   30.2494488 121.6948056 #> 222   3.409370e+00  117.3880768 117.4375765 #> 223  -1.183274e+02  120.2909851 168.7343697 #> 224  -1.079076e+02   -5.8086767 108.0638510 #> 225   1.190641e+01 -118.7763214 119.3715929 #> 226   1.481847e+01 -135.3277435 136.1366418 #> 227   2.642671e+01  -39.5298615  47.5497745 #> 228  -5.725002e+01   34.0360489  66.6034332 #> 229  -1.100776e+02  -36.5797539 115.9963190 #> 230  -7.004403e+01  -92.8243790 116.2864195 #> 231   3.825877e+01 -109.0801620 115.5950497 #> 232   1.433036e+02  -53.1895905 152.8562944 #> 233   1.559551e+02   18.7836761 157.0822154 #> 234   1.250441e+02   17.3694839 126.2447498 #> 235   8.206137e+00    6.9776201  10.7716230 #> 236  -1.211944e+02  -72.1773148 141.0590313 #> 237  -1.065771e+02  -10.6253948 107.1054291 #> 238  -4.561683e+01    8.5207586  46.4058014 #> 239  -1.617049e+01   -7.0853682  17.6546633 #> 240  -7.070979e+01   32.7864647  77.9411703 #> 241  -1.996091e+01   93.7833481  95.8840672 #> 242   8.508744e+01  138.1031952 162.2108660 #> 243   8.949337e+01   36.8614044  96.7875324 #> 244   1.416337e+01   -1.0920675  14.2054107 #> 245  -2.290032e+01   11.4293299  25.5940240 #> 246  -3.010241e+01  -15.4777164  33.8484068 #> 247  -1.540105e+01  -45.5573082  48.0901300 #> 248  -9.088123e+00  -45.4196243  46.3199337 #> 249  -1.657284e+01    1.3808309  16.6302668 #> 250   4.250486e+01   41.8683701  59.6625779 #> 251   6.578111e+01   15.9771519  67.6935976 #> 252   6.169813e+01   10.6784916  62.6154067 #> 253   1.271885e+01  -29.9988785  32.5837687 #> 254  -3.584288e+01  -49.1306915  60.8155999 #> 255   3.508786e+01  -48.1189766  59.5532834 #> 256  -4.179901e+01  -15.4350185  44.5577919 #> 257  -6.600870e+01  -35.2244263  74.8191710 #> 258  -1.336316e+01  -30.0228786  32.8625534 #> 259   5.506564e+01   77.2885742  94.8986193 #> 260   5.238438e+01  141.3302917 150.7261566 #> 261   6.749939e+00  177.4051819 177.5335468 #> 262   7.986677e+01  -21.8336506  82.7973968 #> 263   4.010643e+01  -76.6423645  86.5018964 #> 264  -1.451648e+02  -81.7384186 166.5953182 #> 265  -1.276283e+02   -3.8823304 127.6873230 #> 266   2.272544e-04    0.3125408   0.3125409 #> 267   1.274518e+02  -59.3659477 140.5997305 #> 268   7.854563e+01  -57.4281158  97.3005894 #> 269  -6.436288e+01 -122.8808517 138.7165622 #> 270  -4.802248e+01  -68.0849533  83.3169840 #> 271  -4.791022e+01  -61.3754196  77.8609726 #> 272  -2.077183e+01   31.5131168  37.7431509 #> 273   1.770262e+00   94.5551605  94.5717305 #> 274  -3.936074e+00   71.8992844  72.0069425 #> 275   9.716781e+01   42.9787369 106.2485522 #> 276   6.777562e+01  -85.8824310 109.4044175 #> 277   3.457418e+00  -63.5964508  63.6903627 #> 278  -8.209726e+01   -2.3639741  82.1312875 #> 279  -1.856687e+02   87.2985916 205.1680336 #> 280  -7.292150e+01  203.9966736 216.6383811 #> 281  -2.815121e+01  154.4947357 157.0385750 #> 282   9.500441e+01   45.1644058 105.1934477 #> 283   8.830381e+00  -87.8747101  88.3172707 #> 284   5.217266e+00   -3.6096184   6.3442266 #> 285   2.829544e+01   55.3577347  62.1700132 #> 286   4.437647e+01  -89.3913803  99.8002514 #> 287   8.570798e+01 -194.6124573 212.6496349 #> 288   1.002338e+01  -60.2333374  61.0616335 #> 289  -1.152123e+00  161.7798462 161.7839486 #> 290  -1.017675e+02  128.3875122 163.8291113 #> 291   1.172324e+01  -74.3841095  75.3022575 #> 292   9.216308e+01 -122.1307678 153.0031289 #> 293   1.472407e+02  -50.6200180 155.6991366 #> 294   7.911345e+01  -87.7687302 118.1621252 #> 295  -4.178585e+01 -116.7276917 123.9814945 #> 296  -3.150957e+01  -43.0625114  53.3594693 #> 297  -5.333926e+01  101.8836670 115.0015594 #> 298  -8.603617e+01   37.5424881  93.8704486 #> 299  -1.039408e+02  -62.4406776 121.2539915 #> 300  -6.666117e+01   44.6897850  80.2551469 #> 301  -4.224271e+01  183.7572174 188.5501556 #> 302   1.309520e+01  158.8568878 159.3957184 #> 303  -5.688392e+00  -22.6753407  23.3779571 #> 304  -3.278784e+01  -60.3316574  68.6655023 #> 305  -5.673268e+01   25.8090858  62.3274065 #> 306  -1.025268e-01   30.0614624  30.0616372 #> 307   1.234797e+02  -69.7581100 141.8218307 #> 308   1.334220e+02  -56.1485291 144.7552786 #> 309  -1.202232e+00    8.7067356   8.7893462 #> 310  -2.954055e+01   47.4016113  55.8529954 #> 311  -3.824674e+01  -31.2592068  49.3958602 #> 312  -8.674804e+01  -56.6382141 103.6007221 #> 313   3.395959e+00  -27.2840385  27.4945685 #> 314   6.141967e+01  -43.9424095  75.5202734 #> 315   1.593155e+02    6.0133448 159.4289521 #> 316   5.116989e+01   66.6616516  84.0365015 #> 317  -3.272198e+01  116.7679749 121.2661876 #> 318  -3.964524e+00  119.2257919 119.2916884 #> 319  -1.138174e+02   85.8927155 142.5901591 #> 320  -8.219290e+01  -12.9042625  83.1997180 #> 321  -6.662283e+01 -111.9623337 130.2849419 #> 322   5.323613e+01 -119.9835663 131.2636343 #> 323   9.113525e+01  -32.1927605  96.6540653 #> 324   5.192378e+01   45.6248436  69.1209485 #> 325  -7.936331e-03  112.5258102 112.5258105 #> 326  -1.134202e+02  110.5576019 158.3891711 #> 327  -8.874147e+01  -30.5081062  93.8391875 #> 328   3.138954e+00 -132.4848175 132.5219978 #> 329   9.797599e+01  -74.5436478 123.1099106 #> 330   3.270847e+01    1.3023924  32.7343924 #> 331   1.306784e+01   43.0633774  45.0024777 #> 332   1.710515e+01   45.8868141  48.9712760 #> 333   4.059669e+01   38.9458084  56.2571535 #> 334   1.420526e+01  -24.4098530  28.2423521 #> 335  -3.963359e+01 -108.2304382 115.2590516 #> 336  -3.521107e+00    4.8439021   5.9884539 #> 337   3.314233e+01  105.5359497 110.6175889 #> 338   8.686295e+01   -4.9078398  87.0014915 #> 339  -3.448338e+01 -186.0246277 189.1937249 #> 340  -7.707224e+01 -100.6412430 126.7627327 #> 341  -1.355426e+01  143.4120026 144.0511032 #> 342   8.016359e+01  156.9747009 176.2590645 #> 343   5.006249e+01  -33.4783516  60.2250179 #> 344  -1.241998e+01 -176.9863586 177.4216080 #> 345   7.437883e+01  -98.5186157 123.4428126 #> 346   6.785950e+01  -50.8880424  84.8204233 #> 347  -2.508695e+01  -37.8430786  45.4032363 #> 348  -8.570562e+01   58.3366432 103.6755381 #> 349  -5.911472e+01  154.6917114 165.6021621 #> 350  -6.976183e+01  169.1079559 182.9322665 #> 351   9.249398e+00  -23.7741241  25.5100048 #> 352   1.452460e+02 -116.4085159 186.1380053 #> 353   1.931009e+02  -56.5560646 201.2126946 #> 354   3.283139e+01   -2.6933157  32.9416817 #> 355  -2.063441e+02  -43.0526199 210.7876537 #> 356  -1.559150e+02 -120.2350159 196.8906788 #> 357  -5.753280e+01   61.8640289  84.4818409 #> 358  -1.613657e+01  153.9046936 154.7483236 #> 359  -5.980803e+01   98.2416534 115.0148809 #> 360  -5.068577e+01   67.5611267  84.4603631 #> 361   6.311614e+01   43.8705482  76.8652875 #> 362   5.495116e+01    8.5418453  55.6110884 #> 363   6.985093e+00 -118.1603088 118.3665920 #> 364  -2.692236e+01 -152.8172302 155.1706132 #> 365   1.619859e+01  -73.5156097  75.2790753 #> 366   5.433282e+01   -2.1751702  54.3763402 #> 367   1.984125e+01   23.5878372  30.8230660 #> 368  -5.080874e+01  108.4720078 119.7819051 #> 369  -6.946506e+01   58.6099205  90.8873862 #> 370  -7.326160e+01    1.2297732  73.2719175 #> 371   2.651793e+01  -26.7561092  37.6708076 #> 372   7.042794e+01  -34.3594742  78.3624161 #> 373   7.950331e+01   35.1068306  86.9095279 #> 374   2.293193e+01   35.1543083  41.9725962 #> 375  -5.165907e+01   68.7761688  86.0163962 #> 376  -9.071980e+00    6.4282293  11.1185856 #> 377  -1.270916e+01  -84.2661362  85.2191556 #> 378   2.926116e+01 -164.5029144 167.0850811 #> 379   4.983919e+00  -37.4601250  37.7902158 #> 380  -4.651476e+01  187.4206390 193.1064950 #> 381  -5.778532e+01  179.8825836 188.9361974 #> 382   1.542132e+01   29.6096458  33.3848504 #> 383   7.705057e+01 -122.0149612 144.3067592 #> 384   7.238574e+01  -91.8547668 116.9486805 #> 385   6.210113e+01  -73.1942215  95.9892941 #> 386   2.918397e+01  -44.2533340  53.0100125 #> 387  -2.170260e+01  -18.1974106  28.3222284 #> 388  -1.220308e+02    0.3765084 122.0313960 #> 389  -1.106378e+02    3.9073048 110.7067838 #> 390  -2.511653e+01   29.6796436  38.8808603 #> 391   3.394117e+01  105.0006180 110.3500454 #> 392  -1.006509e+01   84.1609268  84.7606491 #> 393  -4.995179e+01   23.9694805  55.4050296 #> 394   3.525787e+01  -99.2678909 105.3433982 #> 395   1.195602e+02  -45.7634506 128.0192643 #> 396   1.033956e+02  -13.8976402 104.3254178 #> 397   5.265039e+01  -58.3729553  78.6095767 #> 398   1.908812e+01 -131.7488098 133.1243974 #> 399  -1.788610e+01  -69.1523590  71.4280147 #> 400  -9.821828e+01   32.1528969 103.3471829 #> 401  -8.461048e+01   21.0251331  87.1836554 #> 402   3.937868e+01  -15.4273148  42.2928158 #> 403   9.751562e+01  -31.8655415 102.5900085 #> 404   5.609810e+01   36.3305893  66.8349340 #> 405  -8.520304e+01  129.2657318 154.8198554 #> 406  -1.109298e+02  160.0115509 194.7026427 #> 407  -6.143563e+01  130.0224152 143.8060000 #> 408   3.500393e+01   14.8874846  38.0383033 #> 409  -6.874509e+00 -124.4889755 124.6786425 #> 410  -2.714190e+01  -70.0403442  75.1154598 #> 411   2.250266e+01    8.7868719  24.1573787 #> 412   4.440278e+01  104.5911636 113.6262217 #> 413   4.427003e+01   -6.5450668  44.7512445 #> 414  -9.801324e+01 -138.7784576 169.9001366 #> 415  -9.394212e+01 -132.2634735 162.2305427 #> 416  -1.171216e+01  -21.0369301  24.0775222 #> 417  -4.376369e+00  106.4359665 106.5259009 #> 418   5.545327e+01  124.2706757 136.0818356 #> 419   1.307811e+02   35.9804268 135.6403278 #> 420   1.781600e+02 -119.0809708 214.2924488 #> 421   7.729874e+01 -104.2789536 129.8044530 #> 422  -6.635829e+01  -58.7101555  88.6019482 #> 423  -4.930752e+01  132.9719391 141.8194906 #> 424  -5.290851e+01   89.4577560 103.9326723 #> 425  -6.781438e+01  -31.9304314  74.9556081 #> 426  -5.124580e+01  -78.4392624  93.6955191 #> 427  -3.090382e+01  -43.9933815  53.7630351 #> 428  -1.072401e+02   25.5056839 110.2314316 #> 429  -1.549896e+02   -8.6421881 155.2303194 #> 430   2.102494e+00   58.7304611  58.7680827 #> 431   1.738774e+02   72.7490311 188.4828537 #> 432   1.130454e+02   59.2729836 127.6422450 #> 433  -6.432891e+01   38.6523590  75.0480754 #> 434  -1.102371e+02   -2.3285482 110.2617272 #> 435   1.855590e+00 -136.1803589 136.1930004 #> 436   1.106030e+02 -129.7672119 170.5067710 #> 437   7.839345e+01  -31.3190823  84.4181117 #> 438   7.186459e+01   88.1357498 113.7208385 #> 439   2.035930e+01   86.7908096  89.1467661 #> 440  -3.339573e+01   40.1233139  52.2030200 #> 441  -3.617333e+00  -48.5056496  48.6403448 #> 442  -5.483720e+01 -114.6762695 127.1131988 #> 443  -1.686406e+01  -75.3887482  77.2519254 #> 444   3.071306e+01   44.2412491  53.8570348 #> 445   2.730731e+01   98.2738647 101.9972621 #> 446   3.577577e+00   94.9277649  94.9951557 #> 447  -6.598993e+01   46.5747223  80.7705114 #> 448   4.524833e-01  -27.0771656  27.0809460 #> 449   7.239500e+01   -4.5010939  72.5347950 #> 450   2.116441e+01  -15.0254068  25.9556369 #> 451  -4.312360e+01   12.4840994  44.8942975 #> 452  -7.172475e+01  -84.6511383 110.9515863 #> 453  -2.963223e+01  -62.9290695  69.5567187 #> 454  -6.595142e+01   24.1991234  70.2508922 #> 455  -8.360064e+01   55.3509636 100.2636328 #> 456  -3.409492e+01   20.4326496  39.7486739 #> 457   1.488506e+02  -78.3935318 168.2321233 #> 458   2.236268e+02  -47.3164215 228.5777392 #> 459   6.982192e+01  111.5840988 131.6286897 #> 460  -4.809715e+01  127.4404831 136.2145824 #> 461  -1.229023e+02   44.4120064 130.6805524 #> 462  -5.998629e+01  -41.6654587  73.0367434 #> 463  -3.496968e+01  -30.1375160  46.1643634 #> 464  -5.325091e+01  105.4470749 118.1302044 #> 465  -5.897920e+01   43.3924446  73.2219267 #> 466  -7.445387e+01  -76.9676285 107.0859234 #> 467  -1.777819e+01 -199.1759338 199.9677894 #> 468   9.581384e+01 -161.8568420 188.0902171 #> 469   1.738440e+02   52.7773514 181.6788203 #> 470   1.473720e+02  114.5030060 186.6264679 #> 471  -6.035429e+00  137.6685944 137.8008283 #> 472  -4.972390e+01  -16.5803909  52.4154172 #> 473  -7.884260e+01 -195.9109650 211.1806370 #> 474  -1.002932e+02 -170.8812256 198.1391553 #> 475  -5.350871e+01  -26.1063156  59.5375685 #> 476   1.230916e+01  159.8565369 160.3297474 #> 477   1.026420e+02   67.2130280 122.6905559 #> 478   2.066385e+01  -45.3160934  49.8050497 #> 479  -1.992177e+01  -91.4063950  93.5521564 #> 480   2.079556e+01  -22.4962101  30.6355144 #> 481   2.169246e+01   25.0061054  33.1039009 #> 482   3.022297e+01  102.8507080 107.1993300 #> 483  -4.415858e+01   91.6153183 101.7022442 #> 484  -3.188023e+01    7.2549558  32.6953086 #> 485   1.631081e+00   94.8977661  94.9117824 #> 486  -6.109875e+00    8.7047768  10.6350230 #> 487  -1.372449e+01  -76.4666443  77.6885403 #> 488  -8.918569e+01 -110.8617706 142.2828866 #> 489  -2.519286e+01  -63.3070946  68.1356617 #> 490  -1.440088e+01   55.7765160  57.6055996 #> 491  -5.269914e+00    3.6034782   6.3841245 #> 492  -2.339707e+01   28.1750336  36.6231539 #> 493  -3.446374e+01   96.0406570 102.0370387 #> 494   9.135168e+01  148.3333740 174.2065404 #> 495   1.160980e+02  160.8619080 198.3817046 #> 496   3.174864e+01  -27.4101925  41.9439468 #> 497  -2.075041e+01 -136.8212738 138.3858397 #> 498  -6.963202e+00  -46.3008919  46.8215631 #> 499   2.139938e+01  -10.8675766  24.0007815 #> 500  -4.736445e+01 -109.3037491 119.1247284 #> 501  -6.945049e+01 -168.4066772 182.1652515 #> 502  -5.823256e+01  -18.3606873  61.0585403 #> 503  -1.085355e+02  162.1747437 195.1425387 #> 504  -4.942055e+01  199.3380737 205.3729742 #> 505   1.092197e+02  110.7708130 155.5606313 #> 506   1.824947e+02  -75.7067413 197.5748953 #> 507   5.772770e+01  -93.9677277 110.2833653 #> 508  -1.516147e+01  -57.3817291  59.3509318 #> 509  -5.762488e+00   21.0544262  21.8287685 #> 510   5.874662e+01   37.5718842  69.7338677 #> 511   7.999854e+01   30.7040863  85.6884342 #> 512   6.585980e+01  -47.5435410  81.2274697 #> 513   6.402110e+01 -133.6345520 148.1785919 #> 514  -6.642811e+01   -8.6266470  66.9859134 #> 515  -1.529408e+02   92.0478134 178.5040644 #> 516  -1.786041e+02  103.7606583 206.5567517 #> 517  -7.899236e+01   11.4485283  79.8176811 #> 518   4.554956e+01    8.3886242  46.3155679 #> 519   2.361653e+01  -71.9130554  75.6916646 #> 520  -3.790626e+01 -114.9621506 121.0503219 #> 521  -3.925190e+01 -104.9399033 112.0405937 #> 522  -3.161526e+00   15.6889296  16.0043043 #> 523   9.167590e+01   90.2088394 128.6161186 #> 524   6.213488e+01   -0.7723511  62.1396801 #> 525  -3.598588e+01   -9.7531528  37.2841478 #> 526  -4.031204e+01   10.6316395  41.6904366 #> 527  -1.076365e+01  166.5482330 166.8956864 #> 528   1.005323e+02   75.3296738 125.6236528 #> 529   2.548709e+01  -52.8119583  58.6403842 #> 530  -1.169934e+01  -85.3618698  86.1598706 #> 531   3.360295e+01  -64.7395477  72.9408484 #> 532  -5.699343e+01   82.2800217 100.0912263 #> 533   4.344174e+01   42.0331688  60.4480925 #> 534   3.059410e+01   -3.7041371  30.8175217 #> 535  -1.994761e+01  -73.5811310  76.2370636 #> 536  -6.801264e+01  -85.3530197 109.1368748 #> 537  -6.799895e+01    9.7895346  68.7000131 #> 538   1.402583e+02   68.8071976 156.2268267 #> 539   7.860683e+01   66.4823532 102.9511423 #> 540  -1.312786e+01  -50.0219078  51.7158771 #> 541  -8.192179e+01  -97.3053055 127.1986727 #> 542  -6.860419e+01  -24.3675537  72.8032427 #> 543  -2.966751e+01   76.2588959  81.8265256 #> 544   2.980941e+01    5.0154891  30.2283983 #> 545   4.746659e+01  -82.0091171  94.7553299 #> 546   4.848965e+01  -54.2462616  72.7592133 #> 547   3.166397e+01   34.8598862  47.0937202 #> 548   2.984564e+01   66.1224899  72.5461624 #> 549   6.707475e+01  -16.8912125  69.1688839 #> 550   3.889807e+01  -52.8495216  65.6211215 #> 551  -1.126065e+01   75.1134949  75.9528762 #> 552  -6.171885e+01  159.1925049 170.7380156 #> 553   2.299836e+01   26.4605980  35.0583484 #> 554   1.686762e+01 -146.5230713 147.4907698 #> 555  -2.069419e+01 -154.9083557 156.2845107 #> 556  -4.078989e+01  -20.9005184  45.8328138 #> 557  -5.814500e+00   65.2088470  65.4675656 #> 558   7.763519e+01    3.9490986  77.7355605 #> 559   2.454659e+01  -32.8495483  41.0076583 #> 560   1.270677e+00   -3.9421382   4.1418684 #> 561   6.254091e+00   49.0644836  49.4614720 #> 562   6.868610e+01  111.1369324 130.6491431 #> 563   8.341347e+01   34.5378075  90.2810428 #> 564  -6.915763e+01  -78.4370117 104.5712328 #> 565  -1.444362e+02  -85.2846909 167.7357768 #> 566  -1.426266e+02  -17.6417904 143.7135208 #> 567  -3.438126e+01   49.7927551  60.5094166 #> 568   4.384656e+01   36.9337692  57.3290874 #> 569   6.401946e+01   29.5607471  70.5147457 #> 570   9.104091e+00   51.7473450  52.5420991 #> 571  -3.267664e+01   -2.0641108  32.7417711 #> 572   8.988897e+01  -17.1746216  91.5149958 #> 573   1.033442e+02   16.8073673 104.7020420 #> 574  -1.886405e+01    6.6167774  19.9908474 #> 575  -3.042385e+01   -3.7484653  30.6539038 #> 576  -3.264149e+01  -13.9478149  35.4965980 #> 577   6.575686e+00   17.2110977  18.4244817 #> 578  -6.340285e+01  -13.2127838  64.7649496 #> 579  -5.993774e+01  -75.1112289  96.0948957 #> 580   3.461686e+01   -7.8593431  35.4978379 #> 581  -4.638787e+01   14.3376884  48.5531036 #> 582  -1.047128e+01   35.3221130  36.8415436 #> 583  -2.910263e+01   47.8324928  55.9902713 #> 584  -2.388370e+01   68.1848831  72.2468642 #> 585  -1.294989e+00    0.4628580   1.3752213 #> 586   5.711263e-01  -65.7226105  65.7250920 #> 587   3.411004e+01  -73.3443222  80.8880977 #> 588   9.949944e+00  -51.6268005  52.5768762 #> 589  -3.537946e+01  -43.4744263  56.0511542 #> 590  -3.488393e+01   51.7970009  62.4485240 #> 591  -1.179531e+01  114.5444717 115.1501857 #> 592   1.016453e+02   59.0087204 117.5320884 #> 593   1.079033e+02   18.6133595 109.4969800 #> 594   7.121037e+00  -31.5843372  32.3771452 #> 595  -8.450308e+01  -15.7555552  85.9593417 #> 596  -9.094563e+01  -63.9707603 111.1906755 #> 597   4.556324e+01   23.6404057  51.3310624 #> 598   5.491090e+01   41.3811111  68.7575661 #> 599   4.376693e+01   43.4220810  61.6524256 #> 600  -3.200974e+01   15.5010519  35.5655170 #> 601  -5.603194e+01  -25.9230537  61.7380196 #> 602  -8.740801e+01   36.5448608  94.7401049 #> 603  -6.735458e+01   28.0163555  72.9489897 #> 604   9.820505e+01   50.0164986 110.2083550 #> 605   9.169609e+01  -36.5956306  98.7289888 #> 606   3.254277e+01 -133.3450470 137.2586380 #> 607  -8.405245e+01 -133.9535065 158.1403067 #> 608  -2.889292e+01  -80.5910263  85.6137508 #> 609   6.127345e+01   12.2633591  62.4885994 #> 610   3.151767e+00  110.4942245 110.5391663 #> 611   5.916673e+01  142.4194794 154.2206519 #> 612  -2.750146e+00  100.0376129 100.0754081 #> 613   4.298892e+01  -38.3203812  57.5890531 #> 614   1.630000e+01 -222.6869965 223.2827546 #> 615  -8.560349e+01 -129.8434448 155.5225969 #> 616  -4.948450e+01   93.6394653 105.9106459 #> 617  -9.544683e+00  136.4806824 136.8140258 #> 618   3.788385e+01   27.4592800  46.7888679 #> 619  -3.993140e+01  -38.1985970  55.2598366 #> 620  -4.582877e+01    8.3756332  46.5878419 #> 621   9.860680e+01  -60.7729797 115.8302933 #> 622   9.904352e+01 -134.1219788 166.7282929 #> 623  -4.182967e+01   32.8440552  53.1832076 #> 624  -2.872639e+01  141.1029358 143.9973758 #> 625   1.810426e+01   17.9570599  25.4994172 #> 626   9.795666e+01 -169.7810516 196.0130410 #> 627   3.553581e+01 -125.8611679 130.7816014 #> 628  -4.765443e+01   10.5335875  48.8047215 #> 629  -1.026541e+02   17.1890087 104.0832570 #> 630  -1.494016e+02   12.3861361 149.9141530 #> 631  -7.356981e+00  109.8744431 110.1204723 #> 632   4.149800e+00  101.9563828 102.0407998 #> 633   9.026670e+01   24.0675392  93.4201462 #> 634   1.814588e+02   -2.5099914 181.4761294 #> 635   1.059227e+02   45.0669060 115.1114143 #> 636  -4.053369e+01   47.2548218  62.2575137 #> 637  -2.343241e+02 -122.4744186 264.4007668 #> 638  -1.284765e+02 -108.5122986 168.1699099 #> 639   7.405032e+01   57.0842133  93.4989722 #> 640   9.502089e+01   71.3628311 118.8344355 #> 641   9.184440e+00    5.7607350  10.8415866 #> 642  -1.016583e+02   21.0092640 103.8065116 #> 643  -4.848836e+01   87.5472946 100.0782175 #> 644   7.475072e+01  135.2507782 154.5329863 #> 645   9.379368e+01  -45.1826630 104.1092077 #> 646   3.181708e+01 -175.8494110 178.7046226 #> 647  -6.372445e+01 -115.6273651 132.0245923 #> 648  -1.232752e+02    2.4979043 123.3005351 #> 649  -3.465167e+01   66.3283310  74.8343898 #> 650   1.165258e+02   12.8898430 117.2365361 #> 651   1.406645e+02  -55.0839806 151.0653478 #> 652  -5.976678e+01   66.1270370  89.1339081 #> 653  -1.529025e+02  101.1049728 183.3068418 #> 654  -4.971039e+01   61.8303032  79.3354214 #> 655   3.647405e+01  -67.7834702  76.9737314 #> 656   3.933222e+01 -142.3607788 147.6943297 #> 657  -1.248575e+00  -64.6215897  64.6336506 #> 658   1.092138e+02  -32.9967270 114.0895969 #> 659   8.778655e+01  -29.4701595  92.6011290 #> 660  -1.495868e+01   -6.2304649  16.2043497 #> 661  -1.101411e+02   68.3714523 129.6368463 #> 662  -8.790970e+01   74.6572723 115.3335311 #> 663   1.002108e+02   -9.5852289 100.6681656 #> 664   1.611426e+02  -44.4466171 167.1599297 #> 665   7.600684e+01  -51.7966652  91.9779038 #> 666  -9.255997e+01   49.3898048 104.9128292 #> 667  -1.261977e+02  133.3557281 183.6017645 #> 668  -1.731146e+01   51.2872276  54.1300870 #> 669  -1.094839e+01   23.5045204  25.9293201 #> 670   2.167040e+01  -38.8131447  44.4529691 #> 671   8.470773e+01   18.1357975  86.6274045 #> 672   5.396082e+01   28.9755135  61.2482685 #> 673  -3.454506e+01   59.0963745  68.4524861 #> 674  -1.247278e+02   46.2526741 133.0275455 #> 675  -1.421430e+01 -124.8267670 125.6334670 #> 676   4.542916e+01 -274.3610535 278.0967392 #> 677  -1.282784e+01 -189.5617065 189.9952478 #> 678   3.678633e+01   58.3421478  68.9713031 #> 679   6.026334e+01  233.3134918 240.9706521 #> 680   2.701047e+01  168.8750916 171.0215256 #> 681  -1.026017e+02   44.6407509 111.8923414 #> 682  -6.551468e+01  -40.0391121  76.7808808 #> 683   9.304421e+01  -32.9403992  98.7030666 #> 684   5.908152e+01   23.2498817  63.4916015 #> 685  -9.777988e+01    3.1124177  97.8293996 #> 686  -1.844987e+02  -65.6250916 195.8224299 #> 687  -4.058287e+01 -130.4585114 136.6250060 #> 688   5.321480e+01  -59.8838921  80.1117698 #> 689   5.041680e+01    4.1756492  50.5894249 #> 690   2.658733e+01   29.1895866  39.4831379 #> 691  -2.487465e+01  -51.7872353  57.4514238 #> 692  -3.525638e+01  -25.3592358  43.4292909 #> 693  -5.833571e+01   14.3324680  60.0705834 #> 694  -2.116192e+01   36.4913101  42.1834379 #> 695   1.912698e+01   13.1065445  23.1866975 #> 696   4.681190e+01   34.5415955  58.1762455 #> 697   1.277638e+02   99.3756409 161.8613760 #> 698   1.066978e+02   13.9288378 107.6030818 #> 699   1.295600e+01  -64.9066162  66.1870590 #> 700  -6.088345e+01 -102.3649139 119.1023491 #> 701  -4.891651e+01  -36.1700974  60.8366751 #> 702   2.625893e+01  -14.0165596  29.7656758 #> 703  -3.376272e+01   21.6462708  40.1058903 #> 704  -2.596938e+01   62.0040779  67.2228692 #> 705  -2.001198e+01  -22.7559376  30.3036626 #> 706   1.599721e+01  -97.7182693  99.0190424 #> 707   1.282155e+01  -61.4068336  62.7311029 #> 708  -1.026168e+02   20.8456821 104.7126563 #> 709  -1.710504e+02   65.7529602 183.2531077 #> 710  -1.725572e+02   88.6114120 193.9792659 #> 711   9.749714e+00   79.1597672  79.7579191 #> 712   2.573846e+02    0.9854867 257.3864386 #> 713   2.423485e+02 -102.0979080 262.9767877 #> 714   4.298662e+01  -68.4364853  80.8170909 #> 715  -1.004639e+02   25.4440002 103.6358694 #> 716  -4.838734e+01  106.9792099 117.4133146 #> 717   1.023770e+02   72.0856018 125.2093727 #> 718   6.615705e+01    6.2812653  66.4545687 #> 719  -2.698997e+01  -39.0217667  47.4463551 #> 720  -5.495272e+01  -20.1211948  58.5206323 #> 721   1.777327e+01  106.5390701 108.0113999 #> 722  -8.718177e+00  -28.6575260  29.9543053 #> 723  -2.167167e+01 -132.4067841 134.1686161 #> 724   1.833296e+01 -128.9812164 130.2775947 #> 725   9.615687e+01    1.1973627  96.1643226 #> 726  -1.637521e+01  134.2756042 135.2704156 #> 727  -1.344866e+02   45.0684509 141.8373005 #> 728  -2.864678e+01   71.9647598  77.4568554 #> 729   1.054872e+02   53.5185051 118.2868246 #> 730   1.070919e+02    3.4945390 107.1488964 #> 731  -1.384777e+02  -76.8069687 158.3520676 #> 732  -1.593375e+02  -82.6768341 179.5101959 #> 733  -2.316972e+00   47.2197723  47.2765826 #> 734   1.469819e+02   78.3861465 166.5774725 #> 735   1.027154e+02   -3.9295897 102.7905481 #> 736  -6.271564e+01 -128.1423035 142.6664012 #> 737  -5.934589e+01  -99.7183838 116.0417648 #> 738   1.929299e+01   59.4447250  62.4971594 #> 739   5.844822e+01  147.3354645 158.5053104 #> 740  -1.129546e+01   70.3895950  71.2901287 #> 741  -6.021533e+01 -110.3082886 125.6734032 #> 742   6.829753e+00 -164.0882568 164.2303308 #> 743   5.453083e+01 -122.4661179 134.0580542 #> 744  -6.214607e+00   50.2904854  50.6730131 #> 745  -4.504614e+01  178.8046112 184.3915497 #> 746   6.440118e+01  158.9217224 171.4748535 #> 747   7.704779e+01   30.5189838  82.8720122 #> 748   3.427051e+01 -104.6553726 110.1236350 #> 749  -7.256131e+01  -12.9232740  73.7031525 #> 750  -1.294204e+02   -0.1261217 129.4204716 #> 751  -1.079229e+02   -1.2877878 107.9306261 #> 752  -3.954381e+01 -123.3432999 129.5271503 #> 753   1.001267e+02 -110.2303391 148.9163452 #> 754   5.724467e+01   40.8532944  70.3274027 #> 755   5.613612e+00  119.8962936 120.0276379 #> 756  -6.963959e+01  158.0447235 172.7072864 #> 757  -2.689244e+01  -54.1005669  60.4158473 #> 758  -2.359284e+01  -90.6779556  93.6969250 #> 759   5.684020e+00 -141.4450226 141.5591837 #> 760   1.348386e+02  -57.9072227 146.7470777 #> 761   4.747453e+01   80.0349197  93.0560009 #> 762  -4.846629e+01   60.5019073  77.5207175 #> 763  -5.905684e+01   83.0208740 101.8831476 #> 764   4.791584e+01   64.9044876  80.6754028 #> 765   9.200202e+01   84.9606018 125.2304910 #> 766   6.198813e+00  -36.0888100  36.6173114 #> 767  -1.040091e+01 -127.7381973 128.1609375 #> 768  -3.191744e+01  -85.2403641  91.0200138 #> 769  -1.039134e+02  -81.9442596 132.3361303 #> 770  -6.680409e+01  -34.0183525  74.9668932 #> 771  -2.687966e+01    4.4353929  27.2431425 #> 772   5.107715e+01   54.7263451  74.8588560 #> 773   1.192196e+02   68.2329330 137.3646838 #> 774   6.014511e+01   43.7798042  74.3915728 #> 775  -2.826647e+01   68.2945557  73.9130562 #> 776  -1.456126e+02   76.5409088 164.5039026 #> 777  -1.035049e+02   -2.7767007 103.5421744 #> 778  -4.489375e+01 -103.7858810 113.0794300 #> 779  -4.228652e+01 -117.0357132 124.4407802 #> 780   4.754877e+01   23.6654224  53.1125017 #> 781   8.412463e+01   88.8809280 122.3796281 #> 782   3.786615e+01   49.8193741  62.5764736 #> 783   3.756891e+01   26.2435837  45.8273812 #> 784   1.094379e+02  -29.1976757 113.2658635 #> 785   1.210827e+02  -40.5833511 127.7029379 #> 786  -1.576806e+01  -20.5872650  25.9319729 #> 787  -1.363840e+02   62.8442650 150.1665531 #> 788  -5.488202e+01   59.5457497  80.9798266 #> 789   5.489466e+01   -7.7224703  55.4351943 #> 790   2.622567e+01  -46.1202126  53.0552501 #> 791  -5.105489e+01  -91.0832214 104.4162564 #> 792  -8.085963e+01 -193.0033417 209.2571871 #> 793  -7.558076e+01  -77.5567856 108.2936147 #> 794  -5.756229e+01   49.3860207  75.8445535 #> 795   9.848696e+00  100.1692886 100.6522886 #> 796   8.175284e+01  116.5301590 142.3474780 #> 797   1.238933e+02   73.6402512 144.1264491 #> 798   6.041591e+01   50.5537491  78.7766690 #> 799   5.599481e+01  -68.3927002  88.3910652 #> 800  -1.627033e+01  -35.6092453  39.1502483 #> 801  -8.392488e+01   20.4462795  86.3796040 #> 802  -1.174508e+02   15.7700920 118.5047846 #> 803  -1.168080e+02   54.3052101 128.8144434 #> 804   3.984123e+01   18.6228580  43.9787975 #> 805   3.054002e+01  -19.7088413  36.3473724 #> 806   7.406695e+01  -91.3097076 117.5728518 #> 807   9.606433e+01  -18.1125336  97.7569413 #> 808   4.661284e+01   45.6199760  65.2222274 #> 809   1.841958e+01  -13.6299562  22.9141147 #> 810  -1.659230e+01    3.0894105  16.8774688 #> 811  -1.632183e+01   19.5429935  25.4623387 #> 812  -9.510595e+00   77.5268173  78.1079946 #> 813  -3.953249e+00   75.5374908  75.6408666 #> 814   4.214491e+01    0.5692993  42.1487500 #> 815  -1.158941e+00 -140.6060638 140.6108400 #> 816  -1.656708e+01 -109.2864990 110.5350937 #> 817   1.153393e+02   17.2865219 116.6275654 #> 818   1.558649e+02   79.4040375 174.9252935 #> 819   5.431948e+01   57.1679153  78.8592172 #> 820  -1.215607e+02   48.1150627 130.7366450 #> 821  -1.267703e+02   77.8226624 148.7516942 #> 822  -1.368297e+01  -67.9120483  69.2767642 #> 823   6.468980e+01 -138.4520874 152.8193419 #> 824  -2.318135e+01  -78.1649857  81.5299934 #> 825  -8.499044e+01  -13.1104956  85.9956978 #> 826  -1.285745e+02   36.3056870 133.6020185 #> 827  -5.934536e+00   -1.3927904   6.0957845 #> 828   7.304630e+01    1.4239771  73.0601811 #> 829   7.418579e+01   27.4381714  79.0973125 #> 830   4.698165e+01   50.1171608  68.6950144 #> 831  -4.945235e+01  -66.5593109  82.9197012 #> 832  -1.392833e+00 -189.7850952 189.7902061 #> 833  -2.789060e+01  -77.8570786  82.7019369 #> 834  -4.213647e+01  161.1579895 166.5754467 #> 835  -1.210911e+02  245.4225616 273.6700399 #> 836  -3.382426e+01  108.9653854 114.0944163 #> 837   9.678599e+01    0.7797339  96.7891287 #> 838   9.195636e+01   -0.7332906  91.9592836 #> 839  -2.868655e+01    2.7865016  28.8215637 #> 840  -8.014622e+01  -37.7647743  88.5979433 #> 841   6.983988e+01  -15.3945332  71.5164370 #> 842   1.937825e+01  -10.4982414  22.0392718 #> 843  -6.322104e+01  -39.7165642  74.6612731 #> 844  -2.598433e+01  -21.7133045  33.8622631 #> 845   1.160671e+02  -30.2309608 119.9394891 #> 846   1.475430e+02  -43.6938400 153.8768754 #> 847  -3.808787e+01  -45.2444458  59.1417411 #> 848  -1.014868e+02   21.1708202 103.6714736 #> 849  -1.568174e+01   46.7137299  49.2756468 #> 850   2.906262e+01  -90.5888367  95.1366018 #> 851   8.269756e+01 -102.6562653 131.8225872 #> 852   4.006224e+01   71.8999329  82.3078560 #> 853  -6.482711e+01  157.6731720 170.4798621 #> 854  -1.738654e+02   92.8093109 197.0856588 #> 855  -1.542944e+02  -56.5563774 164.3331145 #> 856   2.662366e+01  -88.8910751  92.7924699 #> 857   7.058276e+01  -96.2862396 119.3857839 #> 858  -6.854318e+01  -71.1085739  98.7653640 #> 859  -5.953473e+01   32.8181076  67.9809723 #> 860   4.886933e+01   18.9233589  52.4051971 #> 861   1.217132e+02  -49.2755013 131.3094918 #> 862   1.130682e+01  -41.0272484  42.5567777 #> 863  -1.317249e+02  118.1637344 176.9579533 #> 864   2.368376e+01  172.5401611 174.1580532 #> 865   1.394864e+02   56.7215729 150.5781560 #> 866   1.497979e+02  -18.1085548 150.8885135 #> 867  -5.733168e+01  -37.6903839  68.6111291 #> 868  -1.740164e+02 -102.2749252 201.8461911 #> 869   1.332911e+00 -132.3563538 132.3630652 #> 870   8.623992e+01    0.3326399  86.2405631 #> 871   9.085352e+01  151.0075684 176.2318030 #> 872  -3.709542e+01   83.5602493  91.4242048 #> 873  -5.824137e+01  -32.2046394  66.5522093 #> 874   2.311628e+01  -69.8596344  73.5848551 #> 875   3.675448e+01   29.7865658  47.3088912 #> 876  -3.783742e+01   71.3323746  80.7463815 #> 877  -1.190206e+02  103.0768738 157.4507873 #> 878  -3.761079e+01   71.0028229  80.3490660 #> 879   5.030610e+01  -36.5307083  62.1707055 #> 880   5.535581e+01 -210.0056763 217.1788424 #> 881  -8.277071e+01 -264.6042175 277.2478728 #> 882  -1.198040e+02  -90.7955246 150.3224248 #> 883  -3.467633e+01  111.5523834 116.8177316 #> 884   1.323672e+02  108.0207901 170.8495699 #> 885   2.023983e+02   38.4904480 206.0256938 #> 886   8.057294e+01  -27.6697903  85.1916397 #> 887   8.808168e-01  -24.8304176  24.8460355 #> 888  -1.018391e+02  -50.1496353 113.5173304 #> 889  -1.372692e+02  -10.5180531 137.6715407 #> 890  -4.441487e+01   92.0833130 102.2351080 #> 891   7.761693e+01   26.1471348  81.9027483 #> 892   2.078028e+02  -46.3294144 212.9047121 #> 893   1.500597e+02  -38.6678314 154.9616631 #> 894   1.982712e+01   88.5130692  90.7065493 #> 895  -9.147890e+01   43.3526726 101.2316365 #> 896  -1.778048e+02   -5.0155034 177.8754882 #> 897  -7.143619e+01  -52.4051132  88.5969797 #> 898   2.861308e+01   -1.0392104  28.6319484 #> 899   6.537162e+01   48.0756950  81.1462949 #> 900  -5.445294e+01    4.5432024  54.6421410 #> 901  -1.615296e+02   51.8921165 169.6602608 #> 902  -5.784155e+01  105.0228729 119.8976589 #> 903   1.138315e+01  158.9937134 159.4006809 #> 904   2.558883e+01   74.2837601  78.5675842 #> 905   5.504929e+01  -99.6291733 113.8261678 #> 906   9.273621e+01 -195.5504150 216.4254346 #> 907   1.469631e+02 -109.0334778 182.9930416 #> 908   1.238300e+02  -34.3669167 128.5105001 #> 909   4.259396e+01  -44.1169548  61.3233325 #> 910   5.288409e+00  -28.9907494  29.4691503 #> 911  -1.124559e+02    5.3702011 112.5840529 #> 912  -8.398303e+01  -38.0881348  92.2163527 #> 913  -5.587234e+01  -99.2400131 113.8872174 #> 914  -8.161038e+01  -54.9295883  98.3743571 #> 915   3.437092e+01   84.8621979  91.5584658 #> 916   1.273340e+02  149.8633118 196.6544218 #> 917   1.623760e+02   63.4948006 174.3489387 #> 918  -4.111063e+01   71.6812897  82.6334750 #> 919  -1.233928e+02   39.6262398 129.5994306 #> 920  -5.401559e+01   36.1229362  64.9811586 #> 921   5.296302e+00  -36.7393532  37.1191445 #> 922  -5.090133e+01  -35.6651802  62.1526377 #> 923  -1.178604e+02   -3.6584949 117.9171271 #> 924  -3.793375e+01  -14.2989082  40.5392178 #> 925   8.297607e+01  -11.7110023  83.7984276 #> 926   1.555932e+02  -82.9224167 176.3104401 #> 927   1.227894e+02   73.9888306 143.3582736 #> 928   3.783664e+01  108.5789108 114.9825689 #> 929  -1.150208e+02   -7.3745761 115.2569663 #> 930  -1.632225e+02 -147.1144562 219.7367946 #> 931  -1.398659e+02 -158.8772278 211.6705749 #> 932  -2.707574e+01   23.8830452  36.1039510 #> 933   3.655760e+01   90.6500626  97.7440131 #> 934   5.601328e+01   89.0501556 105.2017928 #> 935   1.841393e+01  -57.8352165  60.6958405 #> 936  -5.233871e+01  -98.4288635 111.4790663 #> 937  -5.893279e+01  -74.8113098  95.2355250 #> 938  -9.352628e+00  -13.1363354  16.1255993 #> 939   4.610781e+01  118.2794037 126.9486007 #> 940   6.588637e+01  176.7297974 188.6118627 #> 941   5.495459e+01  179.3807983 187.6099096 #> 942   1.261099e+01   55.8918228  57.2968832 #> 943  -9.305572e+01 -135.7531586 164.5851956 #> 944  -7.321916e+01 -170.5330353 185.5870734 #> 945   3.131024e+01  -17.0953579  35.6732726 #> 946   7.122800e+01  130.0129089 148.2456917 #> 947   6.814613e+01   29.0697708  74.0874286 #> 948   1.889498e+01 -126.9069138 128.3058267 #> 949  -6.794708e+00 -110.7868805 110.9950492 #> 950   6.643616e+00   62.9150581  63.2648574 #> 951   8.790650e+00  161.2648315 161.5042458 #> 952   5.087629e+01   55.4403229  75.2464366 #> 953  -5.863740e+01   16.9555130  61.0396124 #> 954  -1.160621e+02  -70.4690857 135.7803515 #> 955  -3.505691e+01  -40.6890945  53.7083717 #> 956  -5.351089e+01  -73.8870926  91.2289290 #> 957   5.041214e+01  -79.4816284  94.1207389 #> 958   1.722302e+01  -14.8697176  22.7539214 #> 959   1.047869e+02  101.5717773 145.9353318 #> 960   1.597631e+02  157.6964111 224.4825350 #> 961   4.881795e+01   41.2205925  63.8931108 #> 962   9.200782e+00  -28.4269047  29.8788101 #> 963  -1.341050e+02  -60.0319862 146.9285593 #> 964  -1.281217e+02   18.2126770 129.4097237 #> 965  -1.091212e+02   36.3018723 115.0010972 #> 966  -3.837355e+01  -43.9142876  58.3180420 #> 967   1.009265e+02  -79.6086426 128.5445157 #> 968   5.734667e+01  -98.0852737 113.6193721 #> 969  -4.096324e+01 -112.0193787 119.2741730 #> 970  -2.078053e+01  -83.7990723  86.3372153 #> 971   5.851606e+01   12.8391733  59.9080394 #> 972   1.144921e+02  125.6363754 169.9792255 #> 973   1.124487e+02  118.0821381 163.0585881 #> 974   6.198242e+01   51.6819534  80.7021961 #> 975   8.519756e+01  -18.7691422  87.2404961 #> 976  -3.639196e+00   57.3999367  57.5151848 #> 977  -7.619775e+01   85.5800705 114.5864135 #> 978  -8.668913e+01   50.9399757 100.5479265 #> 979  -8.938636e+01  -68.4790344 112.6023958 #> 980  -1.536304e+01 -158.7408295 159.4825195 #> 981   8.143954e-01  -47.2294693  47.2364902 #> 982   2.589763e+01  -37.1643944  45.2976753 #> 983   4.498835e+01  -17.4803638  48.2650469 #> 984  -3.595272e+01   36.8654938  51.4942956 #> 985  -9.152583e+01   99.3424835 135.0774066 #> 986  -8.965225e+01   42.6746750  99.2907559 #> 987   5.283197e+01 -152.7166290 161.5969872 #> 988   1.468150e+02 -154.7167358 213.2883337 #> 989   7.638568e+01   23.9586906  80.0549258 #> 990  -5.707289e+00  120.7034454 120.8383006 #> 991  -4.911657e+01   75.2897797  89.8943154 #> 992  -3.156867e+00    5.4971714   6.3391407 #> 993  -7.672978e+00   24.8984051  26.0538898 #> 994  -1.396763e+01   46.0932808  48.1631107 #> 995   3.718538e+01   21.5900288  42.9986283 #> 996   8.118732e+01   89.2686462 120.6659506 #> 997   1.926018e+01   59.0212402  62.0843069 #> 998  -1.343357e+02   11.8797941 134.8599571 #> 999  -3.440642e+02 -171.3951111 384.3910301 #> 1000            NA           NA          NA"},{"path":"https://alexander-pastukhov.github.io/saccadr/reference/diff_nh.html","id":null,"dir":"Reference","previous_headings":"","what":"Differentiate x and y and compute change amplitude via an algorithm proposed by Nyström and Holmqvist (2010) doi:10.3758/BRM.42.1.188 — diff_nh","title":"Differentiate x and y and compute change amplitude via an algorithm proposed by Nyström and Holmqvist (2010) doi:10.3758/BRM.42.1.188 — diff_nh","text":"Differentiate x y compute change amplitude via algorithm proposed Nyström  Holmqvist (2010) doi:10.3758/BRM.42.1.188 . Note components amplitude smoothed independently via Savitzky-Golay filter, components may (probably ) add amplitude. Note filtering sensitive presence NA.","code":""},{"path":"https://alexander-pastukhov.github.io/saccadr/reference/diff_nh.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Differentiate x and y and compute change amplitude via an algorithm proposed by Nyström and Holmqvist (2010) doi:10.3758/BRM.42.1.188 — diff_nh","text":"","code":"diff_nh(x, y, trial, sample_rate, options = NULL)"},{"path":"https://alexander-pastukhov.github.io/saccadr/reference/diff_nh.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Differentiate x and y and compute change amplitude via an algorithm proposed by Nyström and Holmqvist (2010) doi:10.3758/BRM.42.1.188 — diff_nh","text":"x vector x coordinates degrees visual angle y vector y coordinates degrees visual angle trial vector trial index sample_rate sample rate Hz options List method specific options, see Details.","code":""},{"path":"https://alexander-pastukhov.github.io/saccadr/reference/diff_nh.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Differentiate x and y and compute change amplitude via an algorithm proposed by Nyström and Holmqvist (2010) doi:10.3758/BRM.42.1.188 — diff_nh","text":"data.frame columns x, y, amp","code":""},{"path":"https://alexander-pastukhov.github.io/saccadr/reference/diff_nh.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Differentiate x and y and compute change amplitude via an algorithm proposed by Nyström and Holmqvist (2010) doi:10.3758/BRM.42.1.188 — diff_nh","text":"Method options, please refer Nyström Holmqvist (2010) details parameters rationale default values. nh_sg_filter_order Order Savitzky-Golay filter. Defaults 2.","code":""},{"path":[]},{"path":"https://alexander-pastukhov.github.io/saccadr/reference/diff_nh.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Differentiate x and y and compute change amplitude via an algorithm proposed by Nyström and Holmqvist (2010) doi:10.3758/BRM.42.1.188 — diff_nh","text":"","code":"diff_nh(rnorm(1000), rnorm(1000), rep(1, 1000), 250, list(\"nh_sg_filter_order\" = 2)) #> # A tibble: 1,000 × 3 #>        x      y   amp #>    <dbl>  <dbl> <dbl> #>  1  NA     NA     NA  #>  2  NA     NA     NA  #>  3  NA     NA     NA  #>  4  NA     NA     NA  #>  5  NA     NA     NA  #>  6  NA     NA     NA  #>  7  NA     NA     NA  #>  8  97.8 -372.   584. #>  9 -62.2 -154.  1015. #> 10 -54.3   10.8  944. #> # … with 990 more rows"},{"path":"https://alexander-pastukhov.github.io/saccadr/reference/extract_saccades.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract saccades from samples using votes from selected methods. — extract_saccades","title":"Extract saccades from samples using votes from selected methods. — extract_saccades","text":"Extract saccades samples using votes selected methods. method votes whether given sample belongs saccade. Next, saccades identified via majority vote using  vote_threshold parameter, well minimum duration minimal temporal separation criteria. Please note units gaze samples must  degrees visual angle. units important methods use specific (e.g., physiologically plausible) velocity acceleration thresholds. default, ensemble includes methods proposed Engbert & Kliegl (2003) (\"ek\"), Otero-Millan et al. (\"om\"), Nyström & Holmqvist (2010) (\"nh\"),  see Implemented Methods vignette. However, can extended via custom methods, see Using Custom Methods vignette. default, function returns table identified saccades can return matrix methods' votes per sample instead (return_votes = TRUE).","code":""},{"path":"https://alexander-pastukhov.github.io/saccadr/reference/extract_saccades.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract saccades from samples using votes from selected methods. — extract_saccades","text":"","code":"extract_saccades(   x,   y,   sample_rate,   trial = NULL,   methods = list(method_ek, method_om, method_nh),   velocity_function = saccadr::diff_ek,   options = NULL,   binocular = \"merge\",   vote_threshold = ifelse(length(methods) == 1, 1, (length(methods) - 1)),   minimal_duration_ms = 12,   minimal_separation_ms = 12,   return_votes = FALSE )"},{"path":"https://alexander-pastukhov.github.io/saccadr/reference/extract_saccades.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract saccades from samples using votes from selected methods. — extract_saccades","text":"x Horizontal coordinate, either vector monocular data two-column matrix binocular data. y Vertical coordinate, either vector monocular data two-column matrix binocular data. sample_rate Sampling rate Hz. assumed common entire time series. time series contains chunks (trials) recorded using different acquisition rate (e.g., SR Research Eyelink allows set different acquisition rate recording / trial), need split time series analyze separately. trial Optional vector trial ID. omitted, samples assumed belong single trial. Velocity, acceleration, saccades computed respecting trial borders. methods list saccade detection methods, can include external functions implement sample classification (see Using Custom Methods vignette). Package methods include Engbert & Kliegl (2003) (method_ek), Otero-Millan et al. (2014) (method_om),  Nyström Holmqvist (2010) (method_nh). Defaults list internally implemented methods: list(method_ek, method_om, method_nh). velocity_function handle function compute velocity acceleration. Defaults method suggested Engbert & Kliegl (2003) diff_ek. package also implements method proposed Nyström Holmqvist (2010) diff_nh. See vignette \"Velocity computation\" details information implement custom method. options named list options saccade detection (see method_ek, method_om, method_nh) velocity (diff_ek, diff_nh) computation. See documentation specific method details. binocular Specifies binocular data treated. Options \"cyclopean\" (binocular data converted average cyclopean image saccades extracted), \"monocular\" (saccades extracted independently eye), \"merge\" (default, sample votes obtained eyes methods averaged. way binocular saccades, .e., eye movements sufficient temporal  overlap eyes, detected.). vote_threshold Value 1 N (N number used methods) defining vote threshold saccade. default, one method \\(threshold = N-1\\) must agree sample considered saccade. Threshold 1 applied single method used. minimal_duration_ms Minimal duration saccade milliseconds. Shorter candidate saccades discarded, minimal_separation_ms Minimal time separation saccades milliseconds. Saccades separated shorter interval \"saccade\" votes, merged including period. return_votes Logical. Whether function return extracted microsaccades (FALSE, default) votes per sample (TRUE).","code":""},{"path":"https://alexander-pastukhov.github.io/saccadr/reference/extract_saccades.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract saccades from samples using votes from selected methods. — extract_saccades","text":"data.frame saccade properties (see details), return_votes = FALSE. Alternatively, returns votes per sample (return_votes = TRUE). monocular processing (monocular input, cyclopean merged binocular data) matrix nrow(x) rows length(methods) columns 0/1 votes sample method. binocular processing, function returns two element list  similar matrices per eye.","code":""},{"path":"https://alexander-pastukhov.github.io/saccadr/reference/extract_saccades.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Extract saccades from samples using votes from selected methods. — extract_saccades","text":"Variables describe saccade Trial Trial index. Eye \"Monocular\" monocular inputs. \"Cyclopean\" binocular data averaged applying algorithms. \"Binocular\" binocular data votes averaged applying algorithms. \"Left\" \"Right\" binocular data eyes processed independently. OnsetSample Index first sample. OffsetSample Index last sample. Onset Onset time relative trial start milliseconds. Offset Offset time relative trial start milliseconds. Duration Duration milliseconds. DisplacementX Horizontal displacement measured first last sample. DisplacementY Vertical displacement measured first last sample. Displacement Displacement magnitude measured first last sample. DisplacementPhi Displacement direction measured first last sample. AmplitudeX Horizontal displacement measured leftmost rightmost sample. AmplitudeY Vertical displacement measured lowest uppermost sample. Amplitude Displacement magnitude measured extreme samples. AmplitudePhi Displacement direction measured extreme samples. VelocityPeak Peak velocity. VelocityAvg Average velocity. AccelerationPeak Peak acceleration. AccelerationAvg Average acceleration. AccelerationStart Peak acceleration peak velocity reached. AccelerationStop Peak acceleration peak velocity reached.","code":""},{"path":[]},{"path":"https://alexander-pastukhov.github.io/saccadr/reference/extract_saccades.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract saccades from samples using votes from selected methods. — extract_saccades","text":"","code":"# Single trial data(single_trial) saccades <- extract_saccades(single_trial$x, single_trial$y, 500)  # Multiple trials data(monocular_ten_trials) saccades <- extract_saccades(monocular_ten_trials$x,                              monocular_ten_trials$y,                               500,                              trial = monocular_ten_trials$trial)    # binocular saccades                              data(\"single_trial_binocular\")  saccades_b <- saccadr::extract_saccades(single_trial_binocular[, c('xL', 'xR')],                                          single_trial_binocular[, c('yL', 'yR')],                                          sample_rate = 1000)                                            # cyclopean saccades from binocular data saccades_c <- saccadr::extract_saccades(single_trial_binocular[, c('xL', 'xR')],                                         single_trial_binocular[, c('yL', 'yR')],                                         sample_rate = 1000,                                         binocular = \"cyclopean\")   # monocular saccades from binocular data saccades_m <- saccadr::extract_saccades(single_trial_binocular[, c('xL', 'xR')],                                        single_trial_binocular[, c('yL', 'yR')],                                        sample_rate = 1000,                                        binocular = \"monocular\")                               # Using a single method saccades <- extract_saccades(single_trial$x, single_trial$y, 500, methods = method_om)  # Using two methods saccades <- extract_saccades(single_trial$x,                              single_trial$y,                              500,                              methods = list(method_ek, method_om))  #  Alternative velocity computation method saccades <- extract_saccades(single_trial$x, single_trial$y, 500, velocity_function = diff_nh) #> Warning: no non-missing arguments to max; returning -Inf  # A strict unanimous decision threshold saccades <- extract_saccades(single_trial$x, single_trial$y, 500, vote_threshold = 3)  # A slacker criterion that at least one of the three methods must label sample as a saccade saccades <- extract_saccades(single_trial$x, single_trial$y, 500, vote_threshold = 1)  # Only longish saccades are extracted saccades <- extract_saccades(single_trial$x, single_trial$y, 500, minimal_duration_ms = 20)"},{"path":"https://alexander-pastukhov.github.io/saccadr/reference/filter_via_savitzky_golay.html","id":null,"dir":"Reference","previous_headings":"","what":"Smooths signal using Savitzky-Golay and then shifts the filtered signal back — filter_via_savitzky_golay","title":"Smooths signal using Savitzky-Golay and then shifts the filtered signal back — filter_via_savitzky_golay","text":"Smooths signal using Savitzky-Golay shifts filtered signal back","code":""},{"path":"https://alexander-pastukhov.github.io/saccadr/reference/filter_via_savitzky_golay.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Smooths signal using Savitzky-Golay and then shifts the filtered signal back — filter_via_savitzky_golay","text":"","code":"filter_via_savitzky_golay(x, sg_order)"},{"path":"https://alexander-pastukhov.github.io/saccadr/reference/filter_via_savitzky_golay.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Smooths signal using Savitzky-Golay and then shifts the filtered signal back — filter_via_savitzky_golay","text":"x vector float sgOrder integer, order filter","code":""},{"path":"https://alexander-pastukhov.github.io/saccadr/reference/filter_via_savitzky_golay.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Smooths signal using Savitzky-Golay and then shifts the filtered signal back — filter_via_savitzky_golay","text":"vector float","code":""},{"path":"https://alexander-pastukhov.github.io/saccadr/reference/filter_via_savitzky_golay.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Smooths signal using Savitzky-Golay and then shifts the filtered signal back — filter_via_savitzky_golay","text":"","code":"filter_via_savitzky_golay(rnorm(1000), 2) #>    [1]            NA            NA            NA            NA            NA #>    [6]  0.1099404438  0.8016346130  0.9416101447  0.3920103393  0.0923471446 #>   [11] -0.7144630501 -0.3026505594 -0.7536722274 -1.4299866443 -1.1854274735 #>   [16]  0.7097431038  1.5630693729  0.7043345705  0.8712501822  1.1068536094 #>   [21]  1.0417254461  0.3938698620  0.3639778211 -0.6753222354 -0.9003120796 #>   [26] -0.0151486707 -0.3451058959  0.3766262011  0.3697272364  1.1478106536 #>   [31] -0.6471369503 -1.1065373375 -0.6281755543  0.4761432767  1.3445588637 #>   [36]  0.3107393699  0.2174687153 -0.4481799945  0.3533017034 -0.5562041807 #>   [41] -1.3284477547 -1.4282830489 -0.0762783356  0.9164776618  0.8754516073 #>   [46]  0.6158719345  0.2048914612  0.4667517555  0.1561000913 -0.7955064870 #>   [51] -0.7668066799  0.1564172044  0.7369095153  0.3578948151  0.5369675527 #>   [56]  0.5849243624  0.2623648746 -0.0426664943 -0.1977924747 -0.1111376812 #>   [61]  0.0062998121  0.1346974223  0.4346926084 -0.3843878849 -0.9846863430 #>   [66] -1.1470805464 -0.1173878959 -0.3772445619 -0.1812488342 -0.2012244883 #>   [71] -0.4320772891 -0.4819694383  0.9487757689  0.4390116065  0.3895390122 #>   [76]  0.1543853717  2.0703479570  1.1261408789  0.9147286131  0.6511003959 #>   [81]  1.3929681128  0.6674454803  0.1552335250  0.0196636150  0.0391614063 #>   [86] -0.3641934652  0.3035732577  0.4807090475  0.2421240402  0.1224627229 #>   [91] -0.2196823596 -0.3139594044 -0.2853621319  0.7315428342  1.6020803680 #>   [96]  0.8210728860  0.3899692848  0.2464386662 -0.1300404431 -0.6828503842 #>  [101] -1.3304399306 -1.5459102973 -1.7203765456 -0.7702496974 -0.3305544634 #>  [106] -0.2098790477 -0.0270340209 -0.8889481629 -0.9065087570 -0.4461875392 #>  [111]  0.2799152846  1.0024461061  1.0707535654  0.5704561649  0.5831827209 #>  [116]  1.6321224305  0.7595344905  0.1520335083  0.4755280614  0.4992787779 #>  [121] -1.5849176971 -1.0616469175 -0.1593942323  0.6324422230  0.3772170759 #>  [126]  0.3041318579 -0.9396131319 -1.4898812108 -0.0495441102  0.3865255639 #>  [131]  0.2836993095  0.2356449969  0.8579496349  0.6063113050  0.2459858230 #>  [136] -0.0392570150 -0.4611572616 -0.6875137405 -0.7692800208 -0.5184151042 #>  [141]  0.6457005136  1.3759904724  1.7393587054  0.9629479691 -0.0880800957 #>  [146] -0.8893408135 -0.6054196619 -0.5205136541 -0.5624304669  0.1316827458 #>  [151]  0.2458260156 -0.0310817156 -0.9434905786 -0.9148952160 -0.7836427064 #>  [156] -0.4475421792 -1.0628654245 -0.5752515705 -0.4482362774 -0.0675095353 #>  [161] -0.6511196704 -0.8876024633 -1.3962078611 -0.7243150694 -0.1632045249 #>  [166] -0.7457558128 -1.2181051417 -0.0348190068  0.4545019414  0.3821852809 #>  [171] -0.7973329535  0.5134305138  0.7520616678  0.7454453356 -0.7170453303 #>  [176] -0.6341788965 -0.3891054018 -0.1765210741  0.1341307894 -0.3815075693 #>  [181] -1.1680775622 -0.5297737666  0.4304118141  0.5465286943  0.3244476834 #>  [186]  0.9675540556  0.7650475673  0.1392875782  0.2339651959 -0.4095762037 #>  [191] -1.0222628510 -1.0702911431  0.3442912644  0.2392813394  0.3660327539 #>  [196] -0.1943405539 -0.7300017567 -1.2844657523 -0.1869772583  0.3183558650 #>  [201] -0.3512251066 -1.2056595621 -1.4857368372 -1.1457804437 -0.3001000741 #>  [206]  0.6395945465  0.8533403377 -0.4167779384 -0.4049545075 -0.0002178739 #>  [211]  0.1512470807 -0.7077397558 -0.1322099898  0.5166860814  0.4769824580 #>  [216]  0.0107150495 -0.6570520406 -0.5561340570 -0.3522874282 -0.2976642745 #>  [221] -0.8495509570 -0.7318104172 -0.3991533143  0.0978856261  0.4497014123 #>  [226]  0.1887771400 -0.1844668985  0.6215249025  1.9113729007  1.1911379127 #>  [231] -0.1118997571 -0.8982487912  0.2182914387  0.6332999858  1.5411166931 #>  [236]  0.2710524770 -0.5291212627 -0.9566516655  0.4421549571  0.9415652909 #>  [241]  0.4359197852 -0.1719678346 -0.4006514924  0.1865111879  0.5990713579 #>  [246]  1.2354546053  0.5874225065 -0.1052804333 -0.0744814616  0.1111706082 #>  [251]  0.6068543529  0.2606950543  1.0310236025  0.1724505155 -0.0756653561 #>  [256]  0.0976807494  1.7217469842  1.0001229997 -0.1964111742 -0.9021291470 #>  [261] -0.8364784260  0.1405980887  1.1762320486  0.3717875717 -1.0666078271 #>  [266] -1.2145247662 -0.3119304228  0.9539000456  0.5140758949 -0.4966721853 #>  [271] -1.2100686256 -0.3324130228  0.2744847827  0.1706741953  0.1668938645 #>  [276] -0.1658058171 -0.2065569009 -0.3987867655  1.0734241217  1.6426466527 #>  [281]  0.7688127140 -0.5073204612 -0.5595031474 -0.0086287871 -0.1622238020 #>  [286] -0.6379912352 -0.3075652573  1.2829584805  0.2274829638 -0.4463374593 #>  [291] -0.3418467952  1.1200388370 -0.1942753183 -0.5311059017 -0.4536425607 #>  [296] -0.1753331367 -0.4481249828  0.0691062879  0.5110488185 -0.5408858956 #>  [301] -0.9176748772 -0.3547032532  0.1388177224  0.3578197876 -0.2769412680 #>  [306] -0.9870902091 -1.2638720555 -0.6110105870 -0.0883220796 -0.2099136544 #>  [311]  0.5203271306  0.0864557044 -0.2250453327 -0.0767866463  0.9493898540 #>  [316] -0.4459234492 -1.1424897430 -1.1738722146 -0.7071238502 -0.1892082653 #>  [321] -0.3409014227 -0.6484911604 -1.7778175090 -0.3587947715 -0.3347212097 #>  [326] -0.0071071803 -0.7746057525 -0.8252509494 -0.5091953826  0.2344596268 #>  [331]  0.4415287828  0.2348568494  0.0668832875  0.3850769946  0.1844219476 #>  [336]  0.1745442493  0.3542172679  0.2312298465  0.4479710900 -0.3046711528 #>  [341]  0.1763343853 -0.1933932876  0.1336901719 -0.5303437275 -0.3989403456 #>  [346] -0.3705294615 -0.6639513526 -0.3617093128 -0.6495530853 -0.2427306274 #>  [351] -0.3503008616  0.0345505199 -0.4474582473 -0.2119877156 -0.2914464318 #>  [356]  0.4867009479  0.6795931127  1.0053474155  0.6291853151  0.8260577435 #>  [361]  1.1402459483  1.9675937654  2.1329688093  1.2481075000 -0.2820795043 #>  [366] -0.5578524327 -0.0173267853  0.3325229394 -0.2812098389 -0.1349578511 #>  [371]  0.3543123330  0.3728558926 -0.1776696821 -0.0679121224  0.2757746889 #>  [376]  0.0906455485  0.4328803999  0.6718156069  0.4507611823 -0.4207925416 #>  [381] -0.2245191575  0.1703944379 -0.5047510685 -0.8303340100  0.8826538286 #>  [386]  1.6845356868  0.7169223442 -0.9133255784 -0.8316282766 -0.6978491748 #>  [391] -0.0098965232  0.4485991891  0.2332277055  0.0879467419 -0.0086097708 #>  [396] -0.8644153564 -2.0551062838 -1.3007652289 -0.1021094063 -0.5130703505 #>  [401] -1.0832938112 -0.9979410230 -0.9006685426 -0.6419081878  0.4009632576 #>  [406]  0.4605148678 -0.3301540873 -0.5600046044 -0.4518545118 -1.2713622752 #>  [411] -1.6999943040 -1.3682207195  0.2355804645  1.3840681876  1.4910434835 #>  [416]  0.4391265884 -0.2462905453 -0.1056741580 -0.1511834198 -0.8173191640 #>  [421] -1.3792699119 -0.9991496237 -0.0194316421  0.2825473405 -0.1913344461 #>  [426] -0.7773814369 -0.3526115115  0.1225038584 -0.5939040876 -1.3021709788 #>  [431] -0.1003611471  0.9643956629  1.1555442672  0.2614634684 -0.2192686745 #>  [436]  0.0150089603  1.0259708527  1.3609434458  0.7840650293 -0.0512311456 #>  [441] -0.0732444243  0.0845573439  0.8509819138  1.0898376978  0.5456504116 #>  [446] -0.6055414743 -0.1767445877 -0.1919018992 -0.5931877924 -1.0667384081 #>  [451] -0.2160299152 -0.5043154844 -0.5090371745 -0.7837435731 -0.8284327475 #>  [456] -0.7921675610 -0.5217163169 -0.0565648161  0.0739856938  0.6116206842 #>  [461]  0.9248908160  1.6204176635  0.9496616635  0.0682004140 -0.6648651190 #>  [466]  0.1827140025  0.1518918417  0.5166609080 -1.0011095731 -0.3264339646 #>  [471]  0.3745832862  1.9334473249  1.4951524207  1.5667170104  0.1365127154 #>  [476] -1.0648805059 -1.6877320887 -0.7640946352  0.4769655930  0.6229690293 #>  [481]  0.2636260087 -0.5175145071 -0.3273702108 -0.6008271442 -0.2475401536 #>  [486] -0.7308150963  0.0721148772 -0.0008797575  0.4308964176  0.3024357512 #>  [491]  1.2145832573  0.3632575600 -0.6419959344 -0.3110734911  0.9662711546 #>  [496]  1.4048931145  0.8261631771 -0.5344718246 -0.0015269592  0.2786863470 #>  [501]  0.4637884527 -0.8531774277 -0.3668305583  0.0398030558 -0.1534944026 #>  [506]  0.1036185011 -0.5114130828 -0.6836209465 -0.4427914756  0.9007287096 #>  [511]  0.7774008619  1.1581277242  0.6303543866 -0.1312598620 -0.3691632538 #>  [516]  0.1545926400  0.1254448096 -0.0638431245  0.3387054959 -0.8157844554 #>  [521] -1.4186072741 -0.9384707041 -0.3850725121 -0.9387277089 -0.0934187051 #>  [526]  0.9113132632  0.3308614219 -0.0615596682  0.0206898114 -0.2886998648 #>  [531] -1.1956380135 -1.4667744063 -0.0400862903  0.5058463775  1.0671369192 #>  [536]  0.5953834753 -0.1002626910 -1.6723671450 -1.5259558575 -0.1344264033 #>  [541]  0.4693525908  0.0317660029  0.4066646475  0.1855284244 -0.1236126931 #>  [546]  0.2603963801  0.9347670773  0.1637186871 -0.2286622974  0.4683118205 #>  [551] -0.0633641454 -0.4866274783  0.2023074479  1.0092632976 -0.0181812544 #>  [556]  0.0006145181 -0.1793766187  0.8201283241  0.3860944435  1.1457522992 #>  [561]  0.2618533461  0.6551168749  0.3307125102  0.1134630976 -0.7729428927 #>  [566] -1.1006880790  0.0275027742  0.7301817275  0.9110231732  0.6557597762 #>  [571]  0.5064963687 -0.4721938804 -1.6932910500 -1.2946767785 -1.1820479387 #>  [576] -0.8361659583 -0.1467326798  0.2548469798 -0.3778818813 -0.4423738122 #>  [581]  0.4764627829  0.5689981933 -0.1388260082 -1.4319236086 -0.8351877999 #>  [586] -0.6469231810  0.3135394456  0.0060328003  0.2375812892 -1.1877807248 #>  [591] -1.4269577652 -0.7619917978  1.2248733298  0.9234659685  0.2104610148 #>  [596] -0.1148834458  0.2441691706 -0.7764847473 -0.7997201991 -0.1341359038 #>  [601]  0.1279193296 -0.0094127545 -0.0772194839 -0.0648395679 -0.8237393014 #>  [606] -0.5791124897 -0.4441094506  0.7177429465  0.7021913893  0.5430941962 #>  [611]  0.1458872269 -0.1705284151 -0.1219902081  0.1247216599  0.6582696814 #>  [616]  0.3386213608  0.6337892385  0.1253366957 -0.1375889817  0.4998359394 #>  [621]  1.6296677013  0.8475867462  0.7832622114  0.3208039282 -0.1862952140 #>  [626] -1.1558236927 -0.5654372306 -0.4573839482  0.2596546720  0.8310616230 #>  [631]  1.6881521413  1.4233336133  0.5320949637  0.1089908095  0.3683813621 #>  [636] -0.6840333298 -0.8520307787 -0.4173062564  0.1322127689 -0.8966191245 #>  [641] -1.4925605610 -0.8933975160 -0.2132358958  0.3382914443 -0.2352583237 #>  [646]  0.1511316961  0.1068276550  0.0624772312  0.1832425710  0.5621343462 #>  [651]  0.2328775223  0.0979105058 -0.0694915645  0.8555089589  0.7696270943 #>  [656]  0.3100626508 -0.4403683263 -0.1423786681  0.2369665877  0.1485404363 #>  [661]  0.3999174091 -0.4372081285  0.1625905816 -0.0725173217 -0.1097527586 #>  [666] -1.3675347859  0.1870651190  0.2495860131  1.1397143230  0.0118638107 #>  [671]  0.1644172957 -1.2520274142 -0.3826185979  0.3588537925  0.4319269666 #>  [676] -0.2150320146 -0.0766550341  0.5377737639 -0.1667574763  0.2045297211 #>  [681]  0.9231578172  0.5332742047 -0.3487870520 -0.8166217237  0.1368228943 #>  [686] -0.0272271700  0.6297033022 -0.0396625432  1.0563852158 -0.1760127835 #>  [691] -1.1597527420 -1.4361840037 -0.4153338045  0.0112226261  0.1294562101 #>  [696]  1.0101912304 -0.1508777848 -0.6806106789 -1.0910578835 -0.3777874789 #>  [701] -0.5068117982  0.4226851097  0.7378304467  0.5307631700  0.2663160168 #>  [706]  0.6802412242  0.7277564027  0.7980166006  0.9782536033  0.2812586592 #>  [711] -0.4788105000  0.0073205007  0.0794433232 -0.1376396870  0.3956587458 #>  [716]  1.4935612934  0.9659095820  0.0381603050 -1.0092349435 -1.6462093820 #>  [721] -1.7707043869 -0.6591751415 -0.1275320936 -0.2664209721 -0.1584857205 #>  [726]  0.0709648307  0.1560165890  0.3132987011  0.0546813616 -0.0158228663 #>  [731] -0.3748685982 -0.5375190643 -0.4385810517  0.1988592813  0.1030984823 #>  [736]  0.0687343391  1.2811980309  2.0821711201  1.3010402851 -0.0633651876 #>  [741] -0.1155964143  0.4243459160  0.1800001170  0.2949904162 -0.3352871318 #>  [746] -1.0050833105 -1.1024346319  0.6488464984  0.2086559045 -0.4211911975 #>  [751] -0.3000300660  0.0190772449 -0.0295723732 -0.8444960795 -0.4854860028 #>  [756]  0.1383287708  0.9411346808  0.0074289392 -1.0272314784 -1.2759593925 #>  [761] -0.9590142870 -0.2030521537  0.2554095405 -0.0587204425 -0.0989942281 #>  [766]  0.1685448583  0.0982382533  0.7541789579  0.9109128620  0.3283643135 #>  [771] -0.7005838947  0.0336245572  1.3871334081  1.1898090979  0.7864823790 #>  [776] -0.1210339147 -0.0626868466  0.5899678743  0.6714636844  0.1350831566 #>  [781] -0.3663099769  0.4447279992  0.7565190943  0.3937530960 -0.1979330132 #>  [786] -0.1381145870  0.7904420537  0.8300880013  0.3839765628 -0.0260243847 #>  [791]  0.0178207049  0.0184390273  0.1407074424 -0.5451967950  0.3729399373 #>  [796]  0.3448090189  0.1092570981 -1.0168554317  0.0004596157  0.5521037688 #>  [801]  0.3641248267  0.1968551230 -0.2280697528 -0.6174884672 -0.9921669855 #>  [806] -0.6213614927 -0.6523203048 -0.0768932075  0.8757101939  0.9387036696 #>  [811]  0.7399937367  0.4052319804 -0.5736940292 -0.9219132546 -0.3816128694 #>  [816]  0.1844619247  0.0664841354  0.1272006587 -1.0636831287  0.1293562758 #>  [821]  0.6278853550  0.9578574927 -0.7142367753 -0.1231387907 -0.8710141738 #>  [826] -0.0868136156 -0.0361232454  0.6830223514 -0.4894606741 -0.5275509519 #>  [831] -0.2431510890  0.3220315544 -0.3731509518 -0.8669573003 -0.6058915609 #>  [836] -0.3772118705 -0.7456181605  0.0762883624  1.1992610740  1.2942596156 #>  [841] -0.2055876205 -0.8800658646  0.4456869868  0.6334199684  0.3838270159 #>  [846] -0.8298489995  0.3382693335 -0.1474462584 -0.3030712516 -0.9948580392 #>  [851] -0.7564603729 -0.6221112614 -0.2010666714  0.0617691174  0.1108126215 #>  [856] -0.1285647679  0.4389909509  1.2301176870  1.7526915675  0.4074390529 #>  [861]  0.1723426390  0.0063845577  0.8904403200  0.8600305050  0.3096939945 #>  [866] -0.0354219757 -0.3839244578  0.1825095276 -0.8087863267  0.2891229443 #>  [871]  0.2605212347  1.1081248044  0.6568444875 -0.8580053198 -2.3000152225 #>  [876] -1.2671564111  0.5382198115  0.4509194830 -0.2646666436  0.4025851470 #>  [881]  1.0434478963  0.6625080969 -0.8440114752 -0.8472670277  0.0820192132 #>  [886] -0.0660329070 -0.8670685713 -0.8719986882  0.4496553586  0.7190483360 #>  [891]  0.7859612358  0.6413360667  0.9900171213  0.1713414882 -0.6232716096 #>  [896]  0.3648187670  1.3854143359  1.6278143822  0.5399748309  0.4856536066 #>  [901]  0.1716998208  0.5313457385 -0.1526118516 -0.7948086183 -0.5276195758 #>  [906] -0.4826936528  0.0869941453 -0.2618491115  0.3696479073 -0.4801426736 #>  [911] -0.3138250583 -0.1686783995 -0.1018250692 -0.1020620561 -0.5142067493 #>  [916] -0.3229508411 -0.7709934840 -0.6717571311 -0.9994504738 -0.1705393520 #>  [921]  0.4126698201 -0.2607846776 -0.9277116033 -0.7040165624  0.2939575171 #>  [926] -0.6880545532 -1.3270917096 -0.9751477404  0.0380728614 -0.2560915140 #>  [931] -0.5687312865  0.1695591149 -0.0956446732 -0.2196893357 -0.2331417201 #>  [936]  0.5501574071  0.5249406789  0.6562951825 -0.0345922054 -0.5002522643 #>  [941] -0.9504372928 -0.8203819745 -0.3953605830 -0.2523851436 -0.3000928784 #>  [946]  0.0104989017  0.4537555981 -0.1329854513 -0.5013566149 -0.4036043276 #>  [951] -0.4358663187 -0.7032954246 -0.3145383009 -0.2121793327 -0.3853777401 #>  [956]  0.0095283501  0.5655215868  0.5214566987  0.0700845931  0.4394833179 #>  [961]  0.4529986527  0.6135039847  0.1292998706 -0.2862800633 -0.8130929766 #>  [966] -0.0783626703 -0.4235366474 -0.3056697711 -0.4314671855  0.0288995714 #>  [971] -0.4535995946  0.5162992678  1.4534293048  1.1131137545 -0.2274519816 #>  [976] -0.3816082555  0.5643589314  0.5612550150  0.1092261897 -0.0955744545 #>  [981]  0.3659694194  0.1736358227 -0.0611170489  0.4325229893  1.0075022903 #>  [986]  0.7948294089 -0.2331128452 -0.7881792785 -1.0059519123 -1.0039599495 #>  [991] -0.2162167665  0.3757761455  0.1055078516 -0.8753700897 -0.7340539069 #>  [996]  0.0828949442  0.0598495052  0.5073937049 -0.0513144342 -0.2055306090"},{"path":"https://alexander-pastukhov.github.io/saccadr/reference/input_to_matrix.html","id":null,"dir":"Reference","previous_headings":"","what":"Converts inputs to matrix — input_to_matrix","title":"Converts inputs to matrix — input_to_matrix","text":"Converts inputs (vector, matrix, data.frame/tibble)  matrix preserving number columns","code":""},{"path":"https://alexander-pastukhov.github.io/saccadr/reference/input_to_matrix.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Converts inputs to matrix — input_to_matrix","text":"","code":"input_to_matrix(x)"},{"path":"https://alexander-pastukhov.github.io/saccadr/reference/input_to_matrix.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Converts inputs to matrix — input_to_matrix","text":"x vector, matrix, data.frame/tibble","code":""},{"path":"https://alexander-pastukhov.github.io/saccadr/reference/input_to_matrix.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Converts inputs to matrix — input_to_matrix","text":"matrix","code":""},{"path":"https://alexander-pastukhov.github.io/saccadr/reference/input_to_matrix.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Converts inputs to matrix — input_to_matrix","text":"","code":"input_to_matrix(1:5) #>      [,1] #> [1,]    1 #> [2,]    2 #> [3,]    3 #> [4,]    4 #> [5,]    5"},{"path":"https://alexander-pastukhov.github.io/saccadr/reference/method_ek.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract saccades using an algorithm proposed by Engbert and Kliegl (2003) doi:10.1016/S0042-6989(03)00084-1 — method_ek","title":"Extract saccades using an algorithm proposed by Engbert and Kliegl (2003) doi:10.1016/S0042-6989(03)00084-1 — method_ek","text":"Extract saccades using algorithm proposed Engbert Kliegl (2003) doi:10.1016/S0042-6989(03)00084-1","code":""},{"path":"https://alexander-pastukhov.github.io/saccadr/reference/method_ek.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract saccades using an algorithm proposed by Engbert and Kliegl (2003) doi:10.1016/S0042-6989(03)00084-1 — method_ek","text":"","code":"method_ek(x, y, vel, acc, sample_rate, trial, options)"},{"path":"https://alexander-pastukhov.github.io/saccadr/reference/method_ek.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract saccades using an algorithm proposed by Engbert and Kliegl (2003) doi:10.1016/S0042-6989(03)00084-1 — method_ek","text":"x Gaze x coordinate, _arbitrary units_ threshold velocity computed units standard deviation. y Gaze x coordinate, _arbitrary units_ threshold velocity computed units standard deviation. vel Velocity data.frame columns x, y, amp. acc Acceleration data.frame columns x, y, amp. sample_rate Sample rate Hz. trial Trial id, trial borders respected computing velocity saccades. options Named list method options. See details information.","code":""},{"path":"https://alexander-pastukhov.github.io/saccadr/reference/method_ek.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract saccades using an algorithm proposed by Engbert and Kliegl (2003) doi:10.1016/S0042-6989(03)00084-1 — method_ek","text":"logical vector marking samples belong saccades","code":""},{"path":"https://alexander-pastukhov.github.io/saccadr/reference/method_ek.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Extract saccades using an algorithm proposed by Engbert and Kliegl (2003) doi:10.1016/S0042-6989(03)00084-1 — method_ek","text":"Method options, please refer Engbert Kliegl (2003) details parameters rationale default values. ek_velocity_threshold Velocity threshold saccade detection standard deviations. Defaults 6. ek_sd_fun Function used compute standard deviation velocities. Defaults sd_via_median_estimator, per formula #2 Engbert Kliegl (2003). Can replaced mad, sd, etc. ek_minimal_duration_ms Minimal duration saccade milliseconds. Defaults 12. ek_minimal_separation_ms minimal required time gap saccades. Defaults 12.","code":""},{"path":[]},{"path":"https://alexander-pastukhov.github.io/saccadr/reference/method_ek.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract saccades using an algorithm proposed by Engbert and Kliegl (2003) doi:10.1016/S0042-6989(03)00084-1 — method_ek","text":"","code":"# Do not run this function directly, use extract_saccades() instead"},{"path":"https://alexander-pastukhov.github.io/saccadr/reference/method_nh.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract saccades using an algorithm proposed by Nyström and Holmqvist (2010) doi:10.3758/BRM.42.1.188\n. — method_nh","title":"Extract saccades using an algorithm proposed by Nyström and Holmqvist (2010) doi:10.3758/BRM.42.1.188\n. — method_nh","text":"Extract saccades using algorithm proposed Nyström Holmqvist (2010) doi:10.3758/BRM.42.1.188 .","code":""},{"path":"https://alexander-pastukhov.github.io/saccadr/reference/method_nh.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract saccades using an algorithm proposed by Nyström and Holmqvist (2010) doi:10.3758/BRM.42.1.188\n. — method_nh","text":"","code":"method_nh(x, y, vel, acc, sample_rate, trial, options)"},{"path":"https://alexander-pastukhov.github.io/saccadr/reference/method_nh.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract saccades using an algorithm proposed by Nyström and Holmqvist (2010) doi:10.3758/BRM.42.1.188\n. — method_nh","text":"x Gaze x coordinate, _arbitrary units_ threshold velocity computed units standard deviation. y Gaze y coordinate, _arbitrary units_ threshold velocity computed units standard deviation. vel Velocity data.frame columns x, y, amp. acc Acceleration data.frame columns x, y, amp. sample_rate Sample rate Hz. trial Trial id, trial borders respected computing velocity saccades. options Named list method options. See details  information.","code":""},{"path":"https://alexander-pastukhov.github.io/saccadr/reference/method_nh.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract saccades using an algorithm proposed by Nyström and Holmqvist (2010) doi:10.3758/BRM.42.1.188\n. — method_nh","text":"logical vector marking samples belong saccades","code":""},{"path":"https://alexander-pastukhov.github.io/saccadr/reference/method_nh.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Extract saccades using an algorithm proposed by Nyström and Holmqvist (2010) doi:10.3758/BRM.42.1.188\n. — method_nh","text":"Method options, please refer Nyström Holmqvist (2010) details parameters rationale default values. nh_sg_filter_order Order Savitzky-Golay filter. Defaults 2. nh_max_velocity Maximal physiologically plausible velocity °/s. Defaults 1000. nh_max_acceleration Maximal physiologically plausible acceleration °/s². Defaults 100000. nh_initial_velocity_threshold Initial velocity threshold °/s. Defaults 100.","code":""},{"path":[]},{"path":"https://alexander-pastukhov.github.io/saccadr/reference/method_nh.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract saccades using an algorithm proposed by Nyström and Holmqvist (2010) doi:10.3758/BRM.42.1.188\n. — method_nh","text":"","code":"# Do not run this function directly, use extract_saccades() instead"},{"path":"https://alexander-pastukhov.github.io/saccadr/reference/method_om.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract saccades using an algorithm proposed by Otero-Millan et al. (2014) doi:10.1167/14.2.18. — method_om","title":"Extract saccades using an algorithm proposed by Otero-Millan et al. (2014) doi:10.1167/14.2.18. — method_om","text":"Extract saccades using algorithm proposed Otero-Millan et al. (2014) doi:10.1167/14.2.18.","code":""},{"path":"https://alexander-pastukhov.github.io/saccadr/reference/method_om.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract saccades using an algorithm proposed by Otero-Millan et al. (2014) doi:10.1167/14.2.18. — method_om","text":"","code":"method_om(x, y, vel, acc, sample_rate, trial, options)"},{"path":"https://alexander-pastukhov.github.io/saccadr/reference/method_om.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract saccades using an algorithm proposed by Otero-Millan et al. (2014) doi:10.1167/14.2.18. — method_om","text":"x Gaze x coordinate, _arbitrary units_ threshold velocity computed units standard deviation. y Gaze x coordinate, _arbitrary units_ threshold velocity computed units standard deviation. vel Velocity data.frame columns x, y, amp. acc Acceleration data.frame columns x, y, amp. sample_rate Sample rate Hz. trial Trial id, trial borders respected computing velocity saccades. options Named list method options. See details information.","code":""},{"path":"https://alexander-pastukhov.github.io/saccadr/reference/method_om.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract saccades using an algorithm proposed by Otero-Millan et al. (2014) doi:10.1167/14.2.18. — method_om","text":"logical vector marking samples belong saccades","code":""},{"path":"https://alexander-pastukhov.github.io/saccadr/reference/method_om.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Extract saccades using an algorithm proposed by Otero-Millan et al. (2014) doi:10.1167/14.2.18. — method_om","text":"Method options, please refer Otero-Millan et al. (2014) details parameters rationale default values. om_minimal_inter_peak_time_ms Minimal inter-peak interval milliseconds. Defaults 30. om_maximal_peaks_per_second Maximal allowed number peaks per second. Defaults 5. om_velocity_threshold_deg_per_sec Threshold saccade velocity °/s.  Defaults 3. om_pca_variance_threshold Minimal variance explained retained rotated components. Defaults 0.05.","code":""},{"path":[]},{"path":"https://alexander-pastukhov.github.io/saccadr/reference/method_om.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract saccades using an algorithm proposed by Otero-Millan et al. (2014) doi:10.1167/14.2.18. — method_om","text":"","code":"# Do not run this function directly, use extract_saccades() instead"},{"path":"https://alexander-pastukhov.github.io/saccadr/reference/monocular_ten_trials.html","id":null,"dir":"Reference","previous_headings":"","what":"A monocular multi-trial recording — monocular_ten_trials","title":"A monocular multi-trial recording — monocular_ten_trials","text":"monocular recording, 10 trials, sampling rate 500 Hz.","code":""},{"path":"https://alexander-pastukhov.github.io/saccadr/reference/monocular_ten_trials.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"A monocular multi-trial recording — monocular_ten_trials","text":"","code":"monocular_ten_trials"},{"path":"https://alexander-pastukhov.github.io/saccadr/reference/monocular_ten_trials.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"A monocular multi-trial recording — monocular_ten_trials","text":"data frame 14353 rows 4 variables: trial Trial index. x X coordinate degrees visual angle. y Y coordinate degrees visual angle. time Sample time milliseconds.","code":""},{"path":"https://alexander-pastukhov.github.io/saccadr/reference/option_or_default.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract value for a named list or use default if key is missing — option_or_default","title":"Extract value for a named list or use default if key is missing — option_or_default","text":"Extract value named list use default key missing","code":""},{"path":"https://alexander-pastukhov.github.io/saccadr/reference/option_or_default.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract value for a named list or use default if key is missing — option_or_default","text":"","code":"option_or_default(options, key, default)"},{"path":"https://alexander-pastukhov.github.io/saccadr/reference/option_or_default.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract value for a named list or use default if key is missing — option_or_default","text":"options Named list key String key default Default value returned, key missing.","code":""},{"path":"https://alexander-pastukhov.github.io/saccadr/reference/option_or_default.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract value for a named list or use default if key is missing — option_or_default","text":"Value list default value","code":""},{"path":"https://alexander-pastukhov.github.io/saccadr/reference/option_or_default.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract value for a named list or use default if key is missing — option_or_default","text":"","code":"option_or_default(list(\"A\" = 25), \"A\", 20) #> [1] 25 option_or_default(list(\"A\" = 25), \"B\", 20) #> [1] 20"},{"path":"https://alexander-pastukhov.github.io/saccadr/reference/pipe.html","id":null,"dir":"Reference","previous_headings":"","what":"Pipe operator — %>%","title":"Pipe operator — %>%","text":"See magrittr::%>% details.","code":""},{"path":"https://alexander-pastukhov.github.io/saccadr/reference/pipe.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pipe operator — %>%","text":"","code":"lhs %>% rhs"},{"path":"https://alexander-pastukhov.github.io/saccadr/reference/pipe.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Pipe operator — %>%","text":"lhs value magrittr placeholder. rhs function call using magrittr semantics.","code":""},{"path":"https://alexander-pastukhov.github.io/saccadr/reference/pipe.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Pipe operator — %>%","text":"result calling `rhs(lhs)`.","code":""},{"path":"https://alexander-pastukhov.github.io/saccadr/reference/saccadr.html","id":null,"dir":"Reference","previous_headings":"","what":"saccadr — saccadr","title":"saccadr — saccadr","text":"Extract (Micro)Saccades Gaze Samples.","code":""},{"path":"https://alexander-pastukhov.github.io/saccadr/reference/sd_via_median_estimator.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute standard deviation via median estimator. — sd_via_median_estimator","title":"Compute standard deviation via median estimator. — sd_via_median_estimator","text":"Compute standard deviation via median estimator. Please refer formula #2 Engbert & Kliegl (2003). Falls back mean estimator, computed standard deviation smaller .Machine$double.eps. Raises error results using mean estimator still smaller .Machine$double.eps.","code":""},{"path":"https://alexander-pastukhov.github.io/saccadr/reference/sd_via_median_estimator.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute standard deviation via median estimator. — sd_via_median_estimator","text":"","code":"sd_via_median_estimator(x, na.rm = FALSE)"},{"path":"https://alexander-pastukhov.github.io/saccadr/reference/sd_via_median_estimator.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute standard deviation via median estimator. — sd_via_median_estimator","text":"x Numeric values na.rm Whether exclude NA values, defaults FALSE.","code":""},{"path":"https://alexander-pastukhov.github.io/saccadr/reference/sd_via_median_estimator.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute standard deviation via median estimator. — sd_via_median_estimator","text":"float","code":""},{"path":"https://alexander-pastukhov.github.io/saccadr/reference/sd_via_median_estimator.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compute standard deviation via median estimator. — sd_via_median_estimator","text":"","code":"sd_via_median_estimator(rnorm(100)) #> [1] 0.6313177"},{"path":"https://alexander-pastukhov.github.io/saccadr/reference/single_trial.html","id":null,"dir":"Reference","previous_headings":"","what":"A single trial monocular samples recorded at 500 Hz. — single_trial","title":"A single trial monocular samples recorded at 500 Hz. — single_trial","text":"single trial monocular samples recorded 500 Hz.","code":""},{"path":"https://alexander-pastukhov.github.io/saccadr/reference/single_trial.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"A single trial monocular samples recorded at 500 Hz. — single_trial","text":"","code":"single_trial"},{"path":"https://alexander-pastukhov.github.io/saccadr/reference/single_trial.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"A single trial monocular samples recorded at 500 Hz. — single_trial","text":"data frame 1006 rows 2 variables: x X coordinate degrees visual angle. y Y coordinate degrees visual angle.","code":""},{"path":"https://alexander-pastukhov.github.io/saccadr/reference/single_trial_binocular.html","id":null,"dir":"Reference","previous_headings":"","what":"A single trial binocular recording. — single_trial_binocular","title":"A single trial binocular recording. — single_trial_binocular","text":"single trial binocular recording sampled 1000 Hz.","code":""},{"path":"https://alexander-pastukhov.github.io/saccadr/reference/single_trial_binocular.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"A single trial binocular recording. — single_trial_binocular","text":"","code":"single_trial_binocular"},{"path":"https://alexander-pastukhov.github.io/saccadr/reference/single_trial_binocular.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"A single trial binocular recording. — single_trial_binocular","text":"data frame 2000 rows 6 variables: trial Trial index. time_rel Sample time milliseconds relative trial start. xL X coordinate left eye degrees visual angle. xR X coordinate right eye degrees visual angle. yL Y coordinate left eye degrees visual angle. yR Y coordinate right eye degrees visual angle.","code":""}]
